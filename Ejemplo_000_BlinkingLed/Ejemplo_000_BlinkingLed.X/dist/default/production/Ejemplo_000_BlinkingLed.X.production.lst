

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Jan 15 20:28:19 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18LF8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     _LATAbits	set	3977
    25  0000                     _LATCbits	set	3979
    26  0000                     _LATD	set	3980
    27  0000                     _LATFbits	set	3982
    28  0000                     _OSCCON	set	4051
    29  0000                     _OSCTUNE	set	3995
    30  0000                     _PIE1	set	3997
    31  0000                     _PIR1	set	3998
    32  0000                     _PORTD	set	3971
    33  0000                     _PR2	set	4043
    34  0000                     _T2CON	set	4042
    35  0000                     _TMR2	set	4044
    36  0000                     _TRISAbits	set	3986
    37  0000                     _TRISCbits	set	3988
    38  0000                     _TRISD	set	3989
    39  0000                     _TRISFbits	set	3991
    40                           
    41                           	psect	smallconst
    42  001000                     __psmallconst:
    43                           	opt stack 0
    44  001000  00                 	db	0
    45  001001                     STR_2:
    46  001001  42                 	db	66	;'B'
    47  001002  6C                 	db	108	;'l'
    48  001003  69                 	db	105	;'i'
    49  001004  6E                 	db	110	;'n'
    50  001005  6B                 	db	107	;'k'
    51  001006  69                 	db	105	;'i'
    52  001007  6E                 	db	110	;'n'
    53  001008  67                 	db	103	;'g'
    54  001009  20                 	db	32
    55  00100A  4C                 	db	76	;'L'
    56  00100B  65                 	db	101	;'e'
    57  00100C  64                 	db	100	;'d'
    58  00100D  00                 	db	0
    59  00100E                     STR_1:
    60  00100E  45                 	db	69	;'E'
    61  00100F  6A                 	db	106	;'j'
    62  001010  65                 	db	101	;'e'
    63  001011  6D                 	db	109	;'m'
    64  001012  70                 	db	112	;'p'
    65  001013  6C                 	db	108	;'l'
    66  001014  6F                 	db	111	;'o'
    67  001015  5F                 	db	95	;'_'
    68  001016  30                 	db	48	;'0'
    69  001017  30                 	db	48	;'0'
    70  001018  30                 	db	48	;'0'
    71  001019  00                 	db	0
    72                           
    73                           ; #config settings
    74  00101A  00                 	db	0	; dummy byte at the end
    75  0000                     
    76                           	psect	cinit
    77  00128A                     __pcinit:
    78                           	opt stack 0
    79  00128A                     start_initialization:
    80                           	opt stack 0
    81  00128A                     __initialization:
    82                           	opt stack 0
    83  00128A                     end_of_initialization:
    84                           	opt stack 0
    85  00128A                     __end_of__initialization:
    86                           	opt stack 0
    87  00128A  0E00               	movlw	low (__Lsmallconst shr (0+16))
    88  00128C  6EF8               	movwf	tblptru,c
    89  00128E  0E10               	movlw	high __Lsmallconst
    90  001290  6EF7               	movwf	tblptrh,c
    91  001292  0100               	movlb	0
    92  001294  EFD8  F008         	goto	_main	;jump to C main() function
    93                           tblptru	equ	0xFF8
    94                           tblptrh	equ	0xFF7
    95                           
    96                           	psect	cstackCOMRAM
    97  000001                     __pcstackCOMRAM:
    98                           	opt stack 0
    99  000001                     SendByteBBSPI@output:
   100                           	opt stack 0
   101  000001                     delay_ms@TMR2Millis:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0x0
   105  000001                     	ds	1
   106  000002                     SendByteBBSPI@bitcount:
   107                           	opt stack 0
   108                           
   109                           ; 1 bytes @ 0x1
   110  000002                     	ds	1
   111  000003                     ??_delay_ms:
   112  000003                     SendByteBBSPI@input:
   113                           	opt stack 0
   114                           
   115                           ; 1 bytes @ 0x2
   116  000003                     	ds	1
   117  000004                     Port_BBSPIInit@port_dir:
   118                           	opt stack 0
   119  000004                     WritePort_BBSPI@a:
   120                           	opt stack 0
   121  000004                     delay_ms@iTMR2Millis:
   122                           	opt stack 0
   123                           
   124                           ; 2 bytes @ 0x3
   125  000004                     	ds	1
   126  000005                     WritePort_BBSPI@port_add:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0x4
   130  000005                     	ds	1
   131  000006                     ??_LCDPutInst:
   132  000006                     ??_LCDPutChar:
   133                           
   134                           ; 1 bytes @ 0x5
   135  000006                     	ds	1
   136  000007                     LCDPutChar@ch:
   137                           	opt stack 0
   138  000007                     LCDPutInst@ch:
   139                           	opt stack 0
   140                           
   141                           ; 1 bytes @ 0x6
   142  000007                     	ds	1
   143  000008                     ??_LCDInit:
   144  000008                     LCDPutStr@ptr:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x7
   148  000008                     	ds	2
   149  00000A                     tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           
   152                           ; 1 bytes @ 0x9
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 22 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;Total ram usage:        0 bytes
   177 ;; Hardware stack levels required when called:    5
   178 ;; This function calls:
   179 ;;		_pheriperals_init
   180 ;;		_delay_ms
   181 ;;		_ejemplo
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  0011B0                     __ptext0:
   189                           	opt stack 0
   190  0011B0                     _main:
   191                           	opt stack 26
   192                           
   193                           ;main.c: 24: pheriperals_init();
   194                           
   195                           ;incstack = 0
   196  0011B0  EC4C  F009         	call	_pheriperals_init	;wreg free
   197                           
   198                           ;main.c: 25: lcd_start_message();
   199  0011B4  ECEF  F008         	call	_ejemplo	;wreg free
   200                           
   201                           ;main.c: 26: LATD=0X0F;
   202  0011B8  0E0F               	movlw	15
   203  0011BA  6E8C               	movwf	3980,c	;volatile
   204  0011BC                     l988:
   205                           
   206                           ;main.c: 30: {
   207                           ;main.c: 32: LATD^=0XFF;
   208  0011BC  0EFF               	movlw	255
   209  0011BE  1A8C               	xorwf	3980,f,c	;volatile
   210                           
   211                           ;main.c: 34: delay_ms(500);
   212  0011C0  0E01               	movlw	1
   213  0011C2  6E02               	movwf	delay_ms@TMR2Millis+1,c
   214  0011C4  0EF4               	movlw	244
   215  0011C6  6E01               	movwf	delay_ms@TMR2Millis,c
   216  0011C8  ECB9  F008         	call	_delay_ms	;wreg free
   217                           
   218                           ;main.c: 35: LATD^=0XFF;
   219  0011CC  0EFF               	movlw	255
   220  0011CE  1A8C               	xorwf	3980,f,c	;volatile
   221                           
   222                           ;main.c: 37: delay_ms(500);
   223  0011D0  0E01               	movlw	1
   224  0011D2  6E02               	movwf	delay_ms@TMR2Millis+1,c
   225  0011D4  0EF4               	movlw	244
   226  0011D6  6E01               	movwf	delay_ms@TMR2Millis,c
   227  0011D8  ECB9  F008         	call	_delay_ms	;wreg free
   228  0011DC  D7EF               	goto	l988
   229  0011DE                     __end_of_main:
   230                           	opt stack 0
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           
   234 ;; *************** function _ejemplo *****************
   235 ;; Defined at:
   236 ;;		line 14 in file "Ejemplo.h"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels used:    1
   256 ;; Hardware stack levels required when called:    4
   257 ;; This function calls:
   258 ;;		_LCDInit
   259 ;;		_LCDPutInst
   260 ;;		_LCDPutStr
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text1
   267  0011DE                     __ptext1:
   268                           	opt stack 0
   269  0011DE                     _ejemplo:
   270                           	opt stack 26
   271                           
   272                           ;Ejemplo.h: 16: LCDInit();
   273                           
   274                           ;incstack = 0
   275  0011DE  EC0E  F008         	call	_LCDInit	;wreg free
   276                           
   277                           ;Ejemplo.h: 17: LCDPutInst(0x80);
   278  0011E2  0E80               	movlw	128
   279  0011E4  EC67  F008         	call	_LCDPutInst
   280                           
   281                           ;Ejemplo.h: 18: LCDPutStr("Ejemplo_000");
   282  0011E8  0E0E               	movlw	low STR_1
   283  0011EA  6E08               	movwf	LCDPutStr@ptr,c
   284  0011EC  0E10               	movlw	high STR_1
   285  0011EE  6E09               	movwf	LCDPutStr@ptr+1,c
   286  0011F0  EC04  F009         	call	_LCDPutStr	;wreg free
   287                           
   288                           ;Ejemplo.h: 19: LCDPutInst(0xC0);
   289  0011F4  0EC0               	movlw	192
   290  0011F6  EC67  F008         	call	_LCDPutInst
   291                           
   292                           ;Ejemplo.h: 20: LCDPutStr("Blinking Led");
   293  0011FA  0E01               	movlw	low STR_2
   294  0011FC  6E08               	movwf	LCDPutStr@ptr,c
   295  0011FE  0E10               	movlw	high STR_2
   296  001200  6E09               	movwf	LCDPutStr@ptr+1,c
   297  001202  EC04  F009         	call	_LCDPutStr	;wreg free
   298  001206  0012               	return		;funcret
   299  001208                     __end_of_ejemplo:
   300                           	opt stack 0
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           
   304 ;; *************** function _LCDPutStr *****************
   305 ;; Defined at:
   306 ;;		line 198 in file "BBSPI_LCD.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
   309 ;;		 -> STR_2(13), STR_1(12), 
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;Total ram usage:        2 bytes
   326 ;; Hardware stack levels used:    1
   327 ;; Hardware stack levels required when called:    3
   328 ;; This function calls:
   329 ;;		_LCDPutChar
   330 ;; This function is called by:
   331 ;;		_ejemplo
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text2
   336  001208                     __ptext2:
   337                           	opt stack 0
   338  001208                     _LCDPutStr:
   339                           	opt stack 26
   340                           
   341                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   342                           
   343                           ;incstack = 0
   344  001208  D00A               	goto	l962
   345  00120A                     l958:
   346  00120A  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   347  00120E  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   348  001212                     	if	0	;tblptru may be non-zero
   349  001212                     	endif
   350  001212                     	if	0	;tblptru may be non-zero
   351  001212                     	endif
   352  001212  0008               	tblrd		*
   353  001214  50F5               	movf	tablat,w,c
   354  001216  EC3D  F008         	call	_LCDPutChar
   355  00121A  4A08               	infsnz	LCDPutStr@ptr,f,c
   356  00121C  2A09               	incf	LCDPutStr@ptr+1,f,c
   357  00121E                     l962:
   358  00121E  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   359  001222  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   360  001226                     	if	0	;tblptru may be non-zero
   361  001226                     	endif
   362  001226                     	if	0	;tblptru may be non-zero
   363  001226                     	endif
   364  001226  0008               	tblrd		*
   365  001228  50F5               	movf	tablat,w,c
   366  00122A  0900               	iorlw	0
   367  00122C  B4D8               	btfsc	status,2,c
   368  00122E  0012               	return	
   369  001230  D7EC               	goto	l958
   370  001232                     __end_of_LCDPutStr:
   371                           	opt stack 0
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           status	equ	0xFD8
   377                           
   378 ;; *************** function _LCDPutChar *****************
   379 ;; Defined at:
   380 ;;		line 160 in file "BBSPI_LCD.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;  ch              1    wreg     unsigned char 
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  ch              1    6[COMRAM] unsigned char 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;Total ram usage:        2 bytes
   399 ;; Hardware stack levels used:    1
   400 ;; Hardware stack levels required when called:    2
   401 ;; This function calls:
   402 ;;		_WritePort_BBSPI
   403 ;; This function is called by:
   404 ;;		_LCDPutStr
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text3
   409  00107A                     __ptext3:
   410                           	opt stack 0
   411  00107A                     _LCDPutChar:
   412                           	opt stack 26
   413                           
   414                           ;incstack = 0
   415                           ;LCDPutChar@ch stored from wreg
   416  00107A  6E07               	movwf	LCDPutChar@ch,c
   417                           
   418                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(4000000/4000.0)));
   419  00107C  0E07               	movlw	7
   420  00107E  6E06               	movwf	??_LCDPutChar& (0+255),c
   421  001080  0E7D               	movlw	125
   422  001082                     u117:
   423  001082  2EE8               	decfsz	wreg,f,c
   424  001084  D7FE               	goto	u117
   425  001086  2E06               	decfsz	??_LCDPutChar& (0+255),f,c
   426  001088  D7FC               	goto	u117
   427  00108A  F000               	nop	
   428                           
   429                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   430  00108C  0E80               	movlw	128
   431  00108E  6E04               	movwf	WritePort_BBSPI@a,c
   432  001090  0E12               	movlw	18
   433  001092  EC26  F009         	call	_WritePort_BBSPI
   434                           
   435                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(4000000/4000.0)));
   436  001096  0EFA               	movlw	250
   437  001098                     u127:
   438  001098  F000               	nop	
   439  00109A  2EE8               	decfsz	wreg,f,c
   440  00109C  D7FD               	goto	u127
   441                           
   442                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   443  00109E  C007  F004         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   444  0010A2  0E13               	movlw	19
   445  0010A4  EC26  F009         	call	_WritePort_BBSPI
   446                           
   447                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(4000000/4000.0)));
   448  0010A8  0EFA               	movlw	250
   449  0010AA                     u137:
   450  0010AA  F000               	nop	
   451  0010AC  2EE8               	decfsz	wreg,f,c
   452  0010AE  D7FD               	goto	u137
   453                           
   454                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   455  0010B0  0EC0               	movlw	192
   456  0010B2  6E04               	movwf	WritePort_BBSPI@a,c
   457  0010B4  0E12               	movlw	18
   458  0010B6  EC26  F009         	call	_WritePort_BBSPI
   459                           
   460                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(4000000/4000.0)));
   461  0010BA  0EFA               	movlw	250
   462  0010BC                     u147:
   463  0010BC  F000               	nop	
   464  0010BE  2EE8               	decfsz	wreg,f,c
   465  0010C0  D7FD               	goto	u147
   466                           
   467                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   468  0010C2  0E00               	movlw	0
   469  0010C4  6E04               	movwf	WritePort_BBSPI@a,c
   470  0010C6  0E12               	movlw	18
   471  0010C8  EC26  F009         	call	_WritePort_BBSPI
   472  0010CC  0012               	return		;funcret
   473  0010CE                     __end_of_LCDPutChar:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           wreg	equ	0xFE8
   480                           status	equ	0xFD8
   481                           
   482 ;; *************** function _LCDInit *****************
   483 ;; Defined at:
   484 ;;		line 45 in file "BBSPI_LCD.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    3
   505 ;; This function calls:
   506 ;;		_InitBBSPI
   507 ;;		_LCDPutInst
   508 ;;		_Port_BBSPIInit
   509 ;;		_WritePort_BBSPI
   510 ;; This function is called by:
   511 ;;		_ejemplo
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text4
   516  00101C                     __ptext4:
   517                           	opt stack 0
   518  00101C                     _LCDInit:
   519                           	opt stack 26
   520                           
   521                           ;BBSPI_LCD.c: 47: InitBBSPI();
   522                           
   523                           ;incstack = 0
   524  00101C  EC33  F009         	call	_InitBBSPI	;wreg free
   525                           
   526                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   527  001020  9C97               	bcf	3991,6,c	;volatile
   528                           
   529                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   530  001022  9C8E               	bcf	3982,6,c	;volatile
   531                           
   532                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(4000000/4000.0)));
   533  001024  0E07               	movlw	7
   534  001026  6E08               	movwf	??_LCDInit& (0+255),c
   535  001028  0E7D               	movlw	125
   536  00102A                     u157:
   537  00102A  2EE8               	decfsz	wreg,f,c
   538  00102C  D7FE               	goto	u157
   539  00102E  2E08               	decfsz	??_LCDInit& (0+255),f,c
   540  001030  D7FC               	goto	u157
   541  001032  F000               	nop	
   542                           
   543                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   544  001034  8C8E               	bsf	3982,6,c	;volatile
   545                           
   546                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   547  001036  0E00               	movlw	0
   548  001038  EC19  F009         	call	_Port_BBSPIInit
   549                           
   550                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   551  00103C  0E01               	movlw	1
   552  00103E  EC19  F009         	call	_Port_BBSPIInit
   553                           
   554                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   555  001042  0E00               	movlw	0
   556  001044  6E04               	movwf	WritePort_BBSPI@a,c
   557  001046  0E12               	movlw	18
   558  001048  EC26  F009         	call	_WritePort_BBSPI
   559                           
   560                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(4000000/4000.0)));
   561  00104C  0E14               	movlw	20
   562  00104E  6E08               	movwf	??_LCDInit& (0+255),c
   563  001050  0E7A               	movlw	122
   564  001052                     u167:
   565  001052  2EE8               	decfsz	wreg,f,c
   566  001054  D7FE               	goto	u167
   567  001056  2E08               	decfsz	??_LCDInit& (0+255),f,c
   568  001058  D7FC               	goto	u167
   569                           
   570                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   571  00105A  0E32               	movlw	50
   572  00105C  EC67  F008         	call	_LCDPutInst
   573                           
   574                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   575  001060  0E3C               	movlw	60
   576  001062  EC67  F008         	call	_LCDPutInst
   577                           
   578                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   579  001066  0E0C               	movlw	12
   580  001068  EC67  F008         	call	_LCDPutInst
   581                           
   582                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   583  00106C  0E01               	movlw	1
   584  00106E  EC67  F008         	call	_LCDPutInst
   585                           
   586                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   587  001072  0E06               	movlw	6
   588  001074  EC67  F008         	call	_LCDPutInst
   589  001078  0012               	return		;funcret
   590  00107A                     __end_of_LCDInit:
   591                           	opt stack 0
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           wreg	equ	0xFE8
   597                           status	equ	0xFD8
   598                           
   599 ;; *************** function _Port_BBSPIInit *****************
   600 ;; Defined at:
   601 ;;		line 123 in file "BBSPI_LCD.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  port_dir        1    wreg     unsigned char 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  port_dir        1    3[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;Total ram usage:        1 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    1
   622 ;; This function calls:
   623 ;;		_SendByteBBSPI
   624 ;; This function is called by:
   625 ;;		_LCDInit
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text5
   630  001232                     __ptext5:
   631                           	opt stack 0
   632  001232                     _Port_BBSPIInit:
   633                           	opt stack 27
   634                           
   635                           ;incstack = 0
   636                           ;Port_BBSPIInit@port_dir stored from wreg
   637  001232  6E04               	movwf	Port_BBSPIInit@port_dir,c
   638                           
   639                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   640  001234  9489               	bcf	3977,2,c	;volatile
   641                           
   642                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   643  001236  0E40               	movlw	64
   644  001238  EC91  F008         	call	_SendByteBBSPI
   645                           
   646                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   647  00123C  5004               	movf	Port_BBSPIInit@port_dir,w,c
   648  00123E  EC91  F008         	call	_SendByteBBSPI
   649                           
   650                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   651  001242  0E00               	movlw	0
   652  001244  EC91  F008         	call	_SendByteBBSPI
   653                           
   654                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   655  001248  8489               	bsf	3977,2,c	;volatile
   656  00124A  0012               	return		;funcret
   657  00124C                     __end_of_Port_BBSPIInit:
   658                           	opt stack 0
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           wreg	equ	0xFE8
   664                           status	equ	0xFD8
   665                           
   666 ;; *************** function _LCDPutInst *****************
   667 ;; Defined at:
   668 ;;		line 179 in file "BBSPI_LCD.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  ch              1    wreg     unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  ch              1    6[COMRAM] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;Total ram usage:        2 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:    2
   689 ;; This function calls:
   690 ;;		_WritePort_BBSPI
   691 ;; This function is called by:
   692 ;;		_ejemplo
   693 ;;		_LCDInit
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text6
   698  0010CE                     __ptext6:
   699                           	opt stack 0
   700  0010CE                     _LCDPutInst:
   701                           	opt stack 27
   702                           
   703                           ;incstack = 0
   704                           ;LCDPutInst@ch stored from wreg
   705  0010CE  6E07               	movwf	LCDPutInst@ch,c
   706                           
   707                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(4000000/4000.0)));
   708  0010D0  0E07               	movlw	7
   709  0010D2  6E06               	movwf	??_LCDPutInst& (0+255),c
   710  0010D4  0E7D               	movlw	125
   711  0010D6                     u177:
   712  0010D6  2EE8               	decfsz	wreg,f,c
   713  0010D8  D7FE               	goto	u177
   714  0010DA  2E06               	decfsz	??_LCDPutInst& (0+255),f,c
   715  0010DC  D7FC               	goto	u177
   716  0010DE  F000               	nop	
   717                           
   718                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
   719  0010E0  0E00               	movlw	0
   720  0010E2  6E04               	movwf	WritePort_BBSPI@a,c
   721  0010E4  0E12               	movlw	18
   722  0010E6  EC26  F009         	call	_WritePort_BBSPI
   723                           
   724                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(4000000/4000.0)));
   725  0010EA  0EFA               	movlw	250
   726  0010EC                     u187:
   727  0010EC  F000               	nop	
   728  0010EE  2EE8               	decfsz	wreg,f,c
   729  0010F0  D7FD               	goto	u187
   730                           
   731                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
   732  0010F2  C007  F004         	movff	LCDPutInst@ch,WritePort_BBSPI@a
   733  0010F6  0E13               	movlw	19
   734  0010F8  EC26  F009         	call	_WritePort_BBSPI
   735                           
   736                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(4000000/4000.0)));
   737  0010FC  0EFA               	movlw	250
   738  0010FE                     u197:
   739  0010FE  F000               	nop	
   740  001100  2EE8               	decfsz	wreg,f,c
   741  001102  D7FD               	goto	u197
   742                           
   743                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
   744  001104  0E40               	movlw	64
   745  001106  6E04               	movwf	WritePort_BBSPI@a,c
   746  001108  0E12               	movlw	18
   747  00110A  EC26  F009         	call	_WritePort_BBSPI
   748                           
   749                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(4000000/4000.0)));
   750  00110E  0EFA               	movlw	250
   751  001110                     u207:
   752  001110  F000               	nop	
   753  001112  2EE8               	decfsz	wreg,f,c
   754  001114  D7FD               	goto	u207
   755                           
   756                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
   757  001116  0E00               	movlw	0
   758  001118  6E04               	movwf	WritePort_BBSPI@a,c
   759  00111A  0E12               	movlw	18
   760  00111C  EC26  F009         	call	_WritePort_BBSPI
   761  001120  0012               	return		;funcret
   762  001122                     __end_of_LCDPutInst:
   763                           	opt stack 0
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           tblptrl	equ	0xFF6
   767                           tablat	equ	0xFF5
   768                           wreg	equ	0xFE8
   769                           status	equ	0xFD8
   770                           
   771 ;; *************** function _WritePort_BBSPI *****************
   772 ;; Defined at:
   773 ;;		line 144 in file "BBSPI_LCD.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  port_add        1    wreg     unsigned char 
   776 ;;  a               1    3[COMRAM] unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  port_add        1    4[COMRAM] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    1
   795 ;; This function calls:
   796 ;;		_SendByteBBSPI
   797 ;; This function is called by:
   798 ;;		_LCDInit
   799 ;;		_LCDPutChar
   800 ;;		_LCDPutInst
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text7
   805  00124C                     __ptext7:
   806                           	opt stack 0
   807  00124C                     _WritePort_BBSPI:
   808                           	opt stack 26
   809                           
   810                           ;incstack = 0
   811                           ;WritePort_BBSPI@port_add stored from wreg
   812  00124C  6E05               	movwf	WritePort_BBSPI@port_add,c
   813                           
   814                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
   815  00124E  9489               	bcf	3977,2,c	;volatile
   816                           
   817                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
   818  001250  0E40               	movlw	64
   819  001252  EC91  F008         	call	_SendByteBBSPI
   820                           
   821                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
   822  001256  5005               	movf	WritePort_BBSPI@port_add,w,c
   823  001258  EC91  F008         	call	_SendByteBBSPI
   824                           
   825                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
   826  00125C  5004               	movf	WritePort_BBSPI@a,w,c
   827  00125E  EC91  F008         	call	_SendByteBBSPI
   828                           
   829                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
   830  001262  8489               	bsf	3977,2,c	;volatile
   831  001264  0012               	return		;funcret
   832  001266                     __end_of_WritePort_BBSPI:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           wreg	equ	0xFE8
   839                           status	equ	0xFD8
   840                           
   841 ;; *************** function _SendByteBBSPI *****************
   842 ;; Defined at:
   843 ;;		line 91 in file "BBSPI_LCD.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  output          1    wreg     unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  output          1    0[COMRAM] unsigned char 
   848 ;;  input           1    2[COMRAM] unsigned char 
   849 ;;  bitcount        1    1[COMRAM] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        3 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_Port_BBSPIInit
   869 ;;		_WritePort_BBSPI
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text8
   874  001122                     __ptext8:
   875                           	opt stack 0
   876  001122                     _SendByteBBSPI:
   877                           	opt stack 26
   878                           
   879                           ;incstack = 0
   880                           ;SendByteBBSPI@output stored from wreg
   881  001122  6E01               	movwf	SendByteBBSPI@output,c
   882                           
   883                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
   884                           ;BBSPI_LCD.c: 94: unsigned char input = output;
   885  001124  C001  F003         	movff	SendByteBBSPI@output,SendByteBBSPI@input
   886                           
   887                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
   888  001128  0E00               	movlw	0
   889  00112A  6E02               	movwf	SendByteBBSPI@bitcount,c
   890  00112C                     l728:
   891  00112C  0E07               	movlw	7
   892  00112E  6402               	cpfsgt	SendByteBBSPI@bitcount,c
   893  001130  D001               	goto	l86
   894  001132  0012               	return	
   895  001134                     l86:
   896                           
   897                           ;BBSPI_LCD.c: 97: {
   898                           ;BBSPI_LCD.c: 99: if(output & 0x80)
   899  001134  AE01               	btfss	SendByteBBSPI@output,7,c
   900  001136  D002               	goto	l88
   901                           
   902                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
   903  001138  8A8B               	bsf	3979,5,c	;volatile
   904  00113A  D001               	goto	l89
   905  00113C                     l88:
   906                           
   907                           ;BBSPI_LCD.c: 101: else
   908                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
   909  00113C  9A8B               	bcf	3979,5,c	;volatile
   910  00113E                     l89:
   911                           
   912                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
   913  00113E  A88B               	btfss	3979,4,c	;volatile
   914  001140  D003               	goto	l736
   915                           
   916                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
   917  001142  80D8               	bsf	status,0,c
   918  001144  3603               	rlcf	SendByteBBSPI@input,f,c
   919  001146  D003               	goto	l738
   920  001148                     l736:
   921                           
   922                           ;BBSPI_LCD.c: 106: else
   923                           ;BBSPI_LCD.c: 107: input = input << 1;
   924  001148  5003               	movf	SendByteBBSPI@input,w,c
   925  00114A  2403               	addwf	SendByteBBSPI@input,w,c
   926  00114C  6E03               	movwf	SendByteBBSPI@input,c
   927  00114E                     l738:
   928                           
   929                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
   930  00114E  868B               	bsf	3979,3,c	;volatile
   931                           
   932                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
   933  001150  F000               	nop	
   934  001152  F000               	nop	
   935  001154  F000               	nop	
   936  001156  F000               	nop	
   937  001158  F000               	nop	
   938  00115A  F000               	nop	
   939                           
   940                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
   941  00115C  F000               	nop	
   942  00115E  F000               	nop	
   943  001160  F000               	nop	
   944  001162  F000               	nop	
   945  001164  F000               	nop	
   946  001166  F000               	nop	
   947                           
   948                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
   949  001168  968B               	bcf	3979,3,c	;volatile
   950                           
   951                           ;BBSPI_LCD.c: 112: output <<= 1;
   952  00116A  90D8               	bcf	status,0,c
   953  00116C  3601               	rlcf	SendByteBBSPI@output,f,c
   954  00116E  2A02               	incf	SendByteBBSPI@bitcount,f,c
   955  001170  D7DD               	goto	l728
   956  001172                     __end_of_SendByteBBSPI:
   957                           	opt stack 0
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           wreg	equ	0xFE8
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function _InitBBSPI *****************
   966 ;; Defined at:
   967 ;;		line 70 in file "BBSPI_LCD.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		None
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_LCDInit
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text9
   995  001266                     __ptext9:
   996                           	opt stack 0
   997  001266                     _InitBBSPI:
   998                           	opt stack 28
   999                           
  1000                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
  1001                           
  1002                           ;incstack = 0
  1003  001266  9492               	bcf	3986,2,c	;volatile
  1004                           
  1005                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
  1006  001268  8894               	bsf	3988,4,c	;volatile
  1007                           
  1008                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
  1009  00126A  9A94               	bcf	3988,5,c	;volatile
  1010                           
  1011                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
  1012  00126C  9694               	bcf	3988,3,c	;volatile
  1013                           
  1014                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
  1015  00126E  8489               	bsf	3977,2,c	;volatile
  1016                           
  1017                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
  1018  001270  888B               	bsf	3979,4,c	;volatile
  1019                           
  1020                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
  1021  001272  9A8B               	bcf	3979,5,c	;volatile
  1022                           
  1023                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
  1024  001274  968B               	bcf	3979,3,c	;volatile
  1025  001276  0012               	return		;funcret
  1026  001278                     __end_of_InitBBSPI:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           wreg	equ	0xFE8
  1033                           status	equ	0xFD8
  1034                           
  1035 ;; *************** function _delay_ms *****************
  1036 ;; Defined at:
  1037 ;;		line 25 in file "Modules.h"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  TMR2Millis      2    0[COMRAM] volatile int 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  iTMR2Millis     2    3[COMRAM] volatile int 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;Total ram usage:        5 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text10
  1065  001172                     __ptext10:
  1066                           	opt stack 0
  1067  001172                     _delay_ms:
  1068                           	opt stack 30
  1069                           
  1070                           ;Modules.h: 27: volatile int iTMR2Millis;
  1071                           ;Modules.h: 28: for(iTMR2Millis=0;iTMR2Millis<TMR2Millis;iTMR2Millis++)
  1072                           
  1073                           ;incstack = 0
  1074  001172  0E00               	movlw	0
  1075  001174  6E05               	movwf	delay_ms@iTMR2Millis+1,c	;volatile
  1076  001176  0E00               	movlw	0
  1077  001178  6E04               	movwf	delay_ms@iTMR2Millis,c	;volatile
  1078  00117A  D00F               	goto	l974
  1079  00117C                     l966:
  1080                           
  1081                           ;Modules.h: 29: {
  1082                           ;Modules.h: 30: PR2=49;
  1083  00117C  0E31               	movlw	49
  1084  00117E  6ECB               	movwf	4043,c	;volatile
  1085                           
  1086                           ;Modules.h: 31: T2CON=(0X04<<3)|0X01;
  1087  001180  0E21               	movlw	33
  1088  001182  6ECA               	movwf	4042,c	;volatile
  1089                           
  1090                           ;Modules.h: 32: TMR2=0;
  1091  001184  0E00               	movlw	0
  1092  001186  6ECC               	movwf	4044,c	;volatile
  1093                           
  1094                           ;Modules.h: 33: T2CON|=0X04;
  1095  001188  84CA               	bsf	4042,2,c	;volatile
  1096                           
  1097                           ;Modules.h: 34: PIE1|=0X02;
  1098  00118A  829D               	bsf	3997,1,c	;volatile
  1099  00118C                     l34:
  1100  00118C  A29E               	btfss	3998,1,c	;volatile
  1101  00118E  D7FE               	goto	l34
  1102                           
  1103                           ;Modules.h: 36: PIR1&=~0X02;
  1104  001190  929E               	bcf	3998,1,c	;volatile
  1105                           
  1106                           ;Modules.h: 37: T2CON&=~0X04;
  1107  001192  94CA               	bcf	4042,2,c	;volatile
  1108                           
  1109                           ;Modules.h: 38: PIE1&=~0X02;
  1110  001194  929D               	bcf	3997,1,c	;volatile
  1111  001196  4A04               	infsnz	delay_ms@iTMR2Millis,f,c	;volatile
  1112  001198  2A05               	incf	delay_ms@iTMR2Millis+1,f,c	;volatile
  1113  00119A                     l974:
  1114  00119A  5001               	movf	delay_ms@TMR2Millis,w,c	;volatile
  1115  00119C  5C04               	subwf	delay_ms@iTMR2Millis,w,c	;volatile
  1116  00119E  5005               	movf	delay_ms@iTMR2Millis+1,w,c	;volatile
  1117  0011A0  0A80               	xorlw	128
  1118  0011A2  6E03               	movwf	??_delay_ms& (0+255),c
  1119  0011A4  5002               	movf	delay_ms@TMR2Millis+1,w,c	;volatile
  1120  0011A6  0A80               	xorlw	128
  1121  0011A8  5803               	subwfb	??_delay_ms& (0+255),w,c
  1122  0011AA  B0D8               	btfsc	status,0,c
  1123  0011AC  0012               	return	
  1124  0011AE  D7E6               	goto	l966
  1125  0011B0                     __end_of_delay_ms:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           wreg	equ	0xFE8
  1132                           status	equ	0xFD8
  1133                           
  1134 ;; *************** function _pheriperals_init *****************
  1135 ;; Defined at:
  1136 ;;		line 52 in file "Modules.h"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    1
  1157 ;; This function calls:
  1158 ;;		_ClockSetup
  1159 ;;		_DigitalIO
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text11
  1166  001298                     __ptext11:
  1167                           	opt stack 0
  1168  001298                     _pheriperals_init:
  1169                           	opt stack 29
  1170                           
  1171                           ;Modules.h: 54: ClockSetup();
  1172                           
  1173                           ;incstack = 0
  1174  001298  EC51  F009         	call	_ClockSetup	;wreg free
  1175                           
  1176                           ;Modules.h: 55: DigitalIO();
  1177  00129C  EC3C  F009         	call	_DigitalIO	;wreg free
  1178  0012A0  0012               	return		;funcret
  1179  0012A2                     __end_of_pheriperals_init:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           wreg	equ	0xFE8
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _DigitalIO *****************
  1189 ;; Defined at:
  1190 ;;		line 43 in file "Modules.h"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_pheriperals_init
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text12
  1218  001278                     __ptext12:
  1219                           	opt stack 0
  1220  001278                     _DigitalIO:
  1221                           	opt stack 29
  1222                           
  1223                           ;Modules.h: 45: LATD=0;
  1224                           
  1225                           ;incstack = 0
  1226  001278  0E00               	movlw	0
  1227  00127A  6E8C               	movwf	3980,c	;volatile
  1228                           
  1229                           ;Modules.h: 46: PORTD=0;
  1230  00127C  0E00               	movlw	0
  1231  00127E  6E83               	movwf	3971,c	;volatile
  1232                           
  1233                           ;Modules.h: 47: TRISD=0;
  1234  001280  0E00               	movlw	0
  1235  001282  6E95               	movwf	3989,c	;volatile
  1236                           
  1237                           ;Modules.h: 48: TRISD& =~(0xFF);
  1238  001284  0E00               	movlw	0
  1239  001286  6E95               	movwf	3989,c	;volatile
  1240  001288  0012               	return		;funcret
  1241  00128A                     __end_of_DigitalIO:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           wreg	equ	0xFE8
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _ClockSetup *****************
  1251 ;; Defined at:
  1252 ;;		line 20 in file "Modules.h"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_pheriperals_init
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text13
  1280  0012A2                     __ptext13:
  1281                           	opt stack 0
  1282  0012A2                     _ClockSetup:
  1283                           	opt stack 29
  1284                           
  1285                           ;Modules.h: 22: OSCCON=0x60|0x02;
  1286                           
  1287                           ;incstack = 0
  1288  0012A2  0E62               	movlw	98
  1289  0012A4  6ED3               	movwf	4051,c	;volatile
  1290                           
  1291                           ;Modules.h: 23: OSCTUNE = 0x00;
  1292  0012A6  0E00               	movlw	0
  1293  0012A8  6E9B               	movwf	3995,c	;volatile
  1294  0012AA  0012               	return		;funcret
  1295  0012AC                     __end_of_ClockSetup:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           wreg	equ	0xFE8
  1302                           status	equ	0xFD8
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           wreg	equ	0xFE8
  1308                           status	equ	0xFD8
  1309                           
  1310                           	psect	rparam
  1311  0000                     tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           wreg	equ	0xFE8
  1316                           status	equ	0xFD8


Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3358
                           _pheriperals_init
                           _delay_ms
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                              7 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1547
                                              7 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     174
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _pheriperals_init                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pheriperals_init
     _ClockSetup
     _DigitalIO
   _delay_ms
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
ABS                  0      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM             F5F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Jan 15 20:28:19 2017

                      l34 118C               ?_LCDPutChar 0001                        l86 1134  
                      l88 113C                        l89 113E               ?_LCDPutInst 0001  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000              __CFG_CP4$OFF 000000  
            __CFG_CP5$OFF 000000     SendByteBBSPI@bitcount 0002              __CFG_CP6$OFF 000000  
            __CFG_CP7$OFF 000000                       l736 1148                       l728 112C  
                     l738 114E                       l962 121E                       l966 117C  
                     l974 119A                       l958 120A                       l988 11BC  
            __CFG_CPB$OFF 000000                       u117 1082                       u207 1110  
                     u127 1098                       u137 10AA                       u147 10BC  
                     u157 102A                       _PR2 000FCB                       u167 1052  
                     u177 10D6              __CFG_CPD$OFF 000000                       u187 10EC  
                     u197 10FE                       wreg 000FE8              __CFG_MODE$MC 000000  
         __end_of_LCDInit 107A              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    STR_1 100E                      STR_2 1001                      _LATD 000F8C  
                    _PIE1 000F9D                      _PIR1 000F9E                      _TMR2 000FCC  
                    _main 11B0          ?_WritePort_BBSPI 0004                      start 0000  
      __size_of_LCDPutStr 002A             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000010                _ClockSetup 12A2             __CFG_WAIT$OFF 000000  
                   ?_main 0001        delay_ms@TMR2Millis 0001                     _T2CON 000FCA  
                   _PORTD 000F83                     _TRISD 000F95             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000             __CFG_WRT4$OFF 000000             __CFG_WRT5$OFF 000000  
           __CFG_WRT6$OFF 000000             __CFG_WRT7$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
         __end_of_ejemplo 1208            __CFG_EBTR3$OFF 000000            __CFG_EBTR4$OFF 000000  
          __CFG_EBTR5$OFF 000000            __CFG_EBTR6$OFF 000000            __CFG_EBTR7$OFF 000000  
           __CFG_WRTB$OFF 000000   __size_of_Port_BBSPIInit 001A             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000            __CFG_BOREN$OFF 000000  
                   tablat 000FF5       __size_of_LCDPutChar 0054       __size_of_LCDPutInst 0054  
                   status 000FD8           __initialization 128A              __end_of_main 11DE  
        __end_of_pheriperals_init 12A2                    ??_main 000A        __size_of_DigitalIO 0012  
           __activetblptr 000001                 ??_LCDInit 0008              LCDPutChar@ch 0007  
       __end_of_LCDPutStr 1232        __size_of_InitBBSPI 0012              LCDPutInst@ch 0007  
         __CFG_BBSIZ$BB2K 000000                    _OSCCON 000FD3              LCDPutStr@ptr 0008  
        __end_of_delay_ms 11B0            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
             ?_ClockSetup 0001                 ??_ejemplo 000A    Port_BBSPIInit@port_dir 0004  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 128A  
       __end_of_DigitalIO 128A             ___rparam_used 000001    __size_of_SendByteBBSPI 0050  
          __pcstackCOMRAM 0001         __end_of_InitBBSPI 1278              ??_LCDPutChar 0006  
            ??_LCDPutInst 0006            _Port_BBSPIInit 1232                 ?_pheriperals_init 0001  
     __size_of_ClockSetup 000A        __end_of_LCDPutChar 10CE        __end_of_LCDPutInst 1122  
  __end_of_Port_BBSPIInit 124C                   _LCDInit 101C             _SendByteBBSPI 1122  
               ?_delay_ms 0001                   _OSCTUNE 000F9B                ??_pheriperals_init 0001  
        WritePort_BBSPI@a 0004                   __Hparam 0000                   __Lparam 0000  
__size_of_WritePort_BBSPI 001A              __psmallconst 1000                   __pcinit 128A  
                 __ramtop 1000                   __ptext0 11B0                   __ptext1 11DE  
                 __ptext2 1208                   __ptext3 107A                   __ptext4 101C  
                 __ptext5 1232                   __ptext6 10CE                   __ptext7 124C  
                 __ptext8 1122                   __ptext9 1266                   _ejemplo 11DE  
          ?_SendByteBBSPI 0001           ?_Port_BBSPIInit 0001                ??_delay_ms 0003  
               _LCDPutStr 1208      end_of_initialization 128A              ??_ClockSetup 0001  
               _TRISAbits 000F92                 _TRISCbits 000F94                 _TRISFbits 000F97  
              ?_LCDPutStr 0008       SendByteBBSPI@output 0001        __end_of_ClockSetup 12AC  
               _DigitalIO 1278           ??_SendByteBBSPI 0001                 _InitBBSPI 1266  
       ??_WritePort_BBSPI 0005       start_initialization 128A          __CFG_OSC$INTIO67 000000  
     delay_ms@iTMR2Millis 0004         __size_of_pheriperals_init 000A                ?_DigitalIO 0001  
        __CFG_LPT1OSC$OFF 000000                ?_InitBBSPI 0001                  ?_LCDInit 0001  
             ??_LCDPutStr 000A         __size_of_delay_ms 003E         __CFG_CCP2MX$PORTC 000000  
        ??_Port_BBSPIInit 0004                  ?_ejemplo 0001               __smallconst 1000  
                _LATAbits 000F89                  _LATCbits 000F8B                  _LATFbits 000F8E  
   __CFG_DATABW$DATA16BIT 000000               ??_DigitalIO 0001          __CFG_WDTPS$32768 000000  
       __CFG_ECCPMX$PORTE 000000               ??_InitBBSPI 0001        SendByteBBSPI@input 0003  
        __size_of_LCDInit 005E                  _pheriperals_init 1298                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 1000           _WritePort_BBSPI 124C  
        __size_of_ejemplo 002A                  _delay_ms 1172                  __ptext10 1172  
                __ptext11 1298                  __ptext12 1278                  __ptext13 12A2  
           __size_of_main 002E                _LCDPutChar 107A                _LCDPutInst 10CE  
   __end_of_SendByteBBSPI 1172     __CFG_ADDRBW$ADDR20BIT 000000   __end_of_WritePort_BBSPI 1266  
 WritePort_BBSPI@port_add 0005  
