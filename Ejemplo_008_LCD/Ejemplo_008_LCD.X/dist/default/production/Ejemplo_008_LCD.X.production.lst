

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jan 20 23:51:42 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     _ADCON1	set	4033
    26  0000                     _LATA	set	3977
    27  0000                     _LATAbits	set	3977
    28  0000                     _LATB	set	3978
    29  0000                     _LATCbits	set	3979
    30  0000                     _LATD	set	3980
    31  0000                     _LATFbits	set	3982
    32  0000                     _OSCCON	set	4051
    33  0000                     _OSCTUNE	set	3995
    34  0000                     _PORTA	set	3968
    35  0000                     _PORTB	set	3969
    36  0000                     _PORTD	set	3971
    37  0000                     _PSPCON	set	4016
    38  0000                     _TRISA	set	3986
    39  0000                     _TRISAbits	set	3986
    40  0000                     _TRISB	set	3987
    41  0000                     _TRISCbits	set	3988
    42  0000                     _TRISD	set	3989
    43  0000                     _TRISFbits	set	3991
    44                           
    45                           	psect	smallconst
    46  0000'                    __psmallconst:
    47                           	opt stack 0
    48  0000' 00                 	db	0
    49  0001'                    STR_1:
    50  0001' 45                 	db	69	;'E'
    51  0002' 6A                 	db	106	;'j'
    52  0003' 65                 	db	101	;'e'
    53  0004' 6D                 	db	109	;'m'
    54  0005' 70                 	db	112	;'p'
    55  0006' 6C                 	db	108	;'l'
    56  0007' 6F                 	db	111	;'o'
    57  0008' 5F                 	db	95	;'_'
    58  0009' 30                 	db	48	;'0'
    59  000A' 30                 	db	48	;'0'
    60  000B' 38                 	db	56	;'8'
    61  000C' 20                 	db	32
    62  000D' 4C                 	db	76	;'L'
    63  000E' 43                 	db	67	;'C'
    64  000F' 44                 	db	68	;'D'
    65  0010' 00                 	db	0
    66  0000                     
    67                           ; #config settings
    68  0011' 00                 	db	0	; dummy byte at the end
    69  0000                     
    70                           	psect	cinit
    71  0000'                    __pcinit:
    72                           	opt stack 0
    73  0000'                    start_initialization:
    74                           	opt stack 0
    75  0000'                    __initialization:
    76                           	opt stack 0
    77                           
    78                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    79  0000' 6A00'              	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    80                           
    81                           ; Clear objects allocated to COMRAM (15 bytes)
    82  0002' EE00' F000'        	lfsr	0,__pbssCOMRAM
    83  0006' 0E0F               	movlw	15
    84  0008'                    clear_0:
    85  0008' 6AEE               	clrf	postinc0,c
    86  000A' 06E8               	decf	wreg,f,c
    87  000C' E1FD               	bnz	clear_0
    88  000E'                    end_of_initialization:
    89                           	opt stack 0
    90  000E'                    __end_of__initialization:
    91                           	opt stack 0
    92  000E' 0E00'              	movlw	low (__Lsmallconst shr (0+16))
    93  0010' 6EF8               	movwf	tblptru,c
    94  0012' 0E00'              	movlw	high __Lsmallconst
    95  0014' 6EF7               	movwf	tblptrh,c
    96  0016' 0100               	movlb	0
    97  0018' EF00' F000'        	goto	_main	;jump to C main() function
    98                           tblptru	equ	0xFF8
    99                           tblptrh	equ	0xFF7
   100                           postinc0	equ	0xFEE
   101                           wreg	equ	0xFE8
   102                           
   103                           	psect	bitbssCOMRAM
   104  0000'                    __pbitbssCOMRAM:
   105                           	opt stack 0
   106  0000'                    _mostrar:
   107                           	opt stack 0
   108  0000'                    	ds	1
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           postinc0	equ	0xFEE
   112                           wreg	equ	0xFE8
   113                           
   114                           	psect	bssCOMRAM
   115  0000'                    __pbssCOMRAM:
   116                           	opt stack 0
   117  0000'                    _cenN:
   118                           	opt stack 0
   119  0000'                    	ds	2
   120  0002'                    _decN:
   121                           	opt stack 0
   122  0002'                    	ds	2
   123  0004'                    _milN:
   124                           	opt stack 0
   125  0004'                    	ds	2
   126  0006'                    _unitN:
   127                           	opt stack 0
   128  0006'                    	ds	2
   129  0008'                    _voltage:
   130                           	opt stack 0
   131  0008'                    	ds	2
   132  000A'                    _volti:
   133                           	opt stack 0
   134  000A'                    	ds	2
   135  000C'                    _volts:
   136                           	opt stack 0
   137  000C'                    	ds	2
   138  000E'                    _asciiLCD:
   139                           	opt stack 0
   140  000E'                    	ds	1
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           postinc0	equ	0xFEE
   144                           wreg	equ	0xFE8
   145                           
   146                           	psect	cstackCOMRAM
   147  0000'                    __pcstackCOMRAM:
   148                           	opt stack 0
   149  0000'                    SendByteBBSPI@output:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x0
   153  0000'                    	ds	1
   154  0001'                    SendByteBBSPI@bitcount:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x1
   158  0001'                    	ds	1
   159  0002'                    SendByteBBSPI@input:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x2
   163  0002'                    	ds	1
   164  0003'                    Port_BBSPIInit@port_dir:
   165                           	opt stack 0
   166  0003'                    WritePort_BBSPI@a:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x3
   170  0003'                    	ds	1
   171  0004'                    WritePort_BBSPI@port_add:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175  0004'                    	ds	1
   176  0005'                    LCDPutChar@ch:
   177                           	opt stack 0
   178  0005'                    LCDPutInst@ch:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x5
   182  0005'                    	ds	1
   183  0006'                    LCDPutStr@ptr:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x6
   187  0006'                    	ds	2
   188  0008'                    tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           
   193                           ; 1 bytes @ 0x8
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 35 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels required when called:    5
   219 ;; This function calls:
   220 ;;		_InitAdc10
   221 ;;		_InitConf
   222 ;;		_ejemplo
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           	psect	text0
   229  0000'                    __ptext0:
   230                           	opt stack 0
   231  0000'                    _main:
   232                           	opt stack 26
   233                           
   234                           ;main.c: 37: InitConf();
   235                           
   236                           ;incstack = 0
   237  0000' EC00' F000'        	call	_InitConf	;wreg free
   238                           
   239                           ;main.c: 39: ejemplo();
   240  0004' EC00' F000'        	call	_ejemplo	;wreg free
   241                           
   242                           ;main.c: 40: InitAdc10();
   243  0008' EC00' F000'        	call	_InitAdc10	;wreg free
   244  000C'                    l129:
   245                           
   246                           ;main.c: 43: {
   247  000C' D7FF               	goto	l129
   248  000E'                    __end_of_main:
   249                           	opt stack 0
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255 ;; *************** function _ejemplo *****************
   256 ;; Defined at:
   257 ;;		line 23 in file "Ejemplo.h"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used:    1
   277 ;; Hardware stack levels required when called:    4
   278 ;; This function calls:
   279 ;;		_LCDInit
   280 ;;		_LCDPutInst
   281 ;;		_LCDPutStr
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288  0000'                    __ptext1:
   289                           	opt stack 0
   290  0000'                    _ejemplo:
   291                           	opt stack 26
   292                           
   293                           ;Ejemplo.h: 25: LCDInit();
   294                           
   295                           ;incstack = 0
   296  0000' EC00' F000'        	call	_LCDInit	;wreg free
   297                           
   298                           ;Ejemplo.h: 26: LCDPutInst(0x80);
   299  0004' 0E80               	movlw	128
   300  0006' EC00' F000'        	call	_LCDPutInst
   301                           
   302                           ;Ejemplo.h: 27: LCDPutStr("Ejemplo_008 LCD");
   303  000A' 0E00'              	movlw	low STR_1
   304  000C' 6E06'              	movwf	LCDPutStr@ptr,c
   305  000E' 0E00'              	movlw	high STR_1
   306  0010' 6E07'              	movwf	LCDPutStr@ptr+1,c
   307  0012' EC00' F000'        	call	_LCDPutStr	;wreg free
   308                           
   309                           ;Ejemplo.h: 28: LCDPutInst(0xC0);
   310  0016' 0EC0               	movlw	192
   311  0018' EC00' F000'        	call	_LCDPutInst
   312                           
   313                           ;Ejemplo.h: 29: LCDPutStr("LCD");
   314  001C' 0E00'              	movlw	low (STR_1+12)
   315  001E' 6E06'              	movwf	LCDPutStr@ptr,c
   316  0020' 0E00'              	movlw	high (STR_1+12)
   317  0022' 6E07'              	movwf	LCDPutStr@ptr+1,c
   318  0024' EC00' F000'        	call	_LCDPutStr	;wreg free
   319  0028' 0012               	return		;funcret
   320  002A'                    __end_of_ejemplo:
   321                           	opt stack 0
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           
   327 ;; *************** function _LCDPutStr *****************
   328 ;; Defined at:
   329 ;;		line 198 in file "BBSPI_LCD.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;  ptr             2    6[COMRAM] PTR const unsigned char 
   332 ;;		 -> STR_2(4), STR_1(16), 
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;Total ram usage:        2 bytes
   349 ;; Hardware stack levels used:    1
   350 ;; Hardware stack levels required when called:    3
   351 ;; This function calls:
   352 ;;		_LCDPutChar
   353 ;; This function is called by:
   354 ;;		_ejemplo
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text2
   359  0000'                    __ptext2:
   360                           	opt stack 0
   361  0000'                    _LCDPutStr:
   362                           	opt stack 26
   363                           
   364                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   365                           
   366                           ;incstack = 0
   367  0000' D00A               	goto	l968
   368  0002'                    l964:
   369  0002' C006' FFF6         	movff	LCDPutStr@ptr,tblptrl
   370  0006' C007' FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   371  000A'                    	if	0	;tblptru may be non-zero
   372  000A'                    	endif
   373  000A'                    	if	0	;tblptru may be non-zero
   374  000A'                    	endif
   375  000A' 0008               	tblrd		*
   376  000C' 50F5               	movf	tablat,w,c
   377  000E' EC00' F000'        	call	_LCDPutChar
   378  0012' 4A06'              	infsnz	LCDPutStr@ptr,f,c
   379  0014' 2A07'              	incf	LCDPutStr@ptr+1,f,c
   380  0016'                    l968:
   381  0016' C006' FFF6         	movff	LCDPutStr@ptr,tblptrl
   382  001A' C007' FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   383  001E'                    	if	0	;tblptru may be non-zero
   384  001E'                    	endif
   385  001E'                    	if	0	;tblptru may be non-zero
   386  001E'                    	endif
   387  001E' 0008               	tblrd		*
   388  0020' 50F5               	movf	tablat,w,c
   389  0022' 0900               	iorlw	0
   390  0024' B4D8               	btfsc	status,2,c
   391  0026' 0012               	return	
   392  0028' D7EC               	goto	l964
   393  002A'                    __end_of_LCDPutStr:
   394                           	opt stack 0
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           status	equ	0xFD8
   402                           
   403 ;; *************** function _LCDPutChar *****************
   404 ;; Defined at:
   405 ;;		line 160 in file "BBSPI_LCD.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  ch              1    wreg     unsigned char 
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  ch              1    5[COMRAM] unsigned char 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;Total ram usage:        1 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; Hardware stack levels required when called:    2
   426 ;; This function calls:
   427 ;;		_WritePort_BBSPI
   428 ;; This function is called by:
   429 ;;		_LCDPutStr
   430 ;;		_TestChar
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text3
   435  0000'                    __ptext3:
   436                           	opt stack 0
   437  0000'                    _LCDPutChar:
   438                           	opt stack 26
   439                           
   440                           ;incstack = 0
   441                           ;LCDPutChar@ch stored from wreg
   442  0000' 6E05'              	movwf	LCDPutChar@ch,c
   443                           
   444                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(10000/4000.0)));
   445  0002' 0E04               	movlw	4
   446  0004'                    u77:
   447  0004' 2EE8               	decfsz	wreg,f,c
   448  0006' D7FE               	goto	u77
   449                           
   450                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   451  0008' 0E80               	movlw	128
   452  000A' 6E03'              	movwf	WritePort_BBSPI@a,c
   453  000C' 0E12               	movlw	18
   454  000E' EC00' F000'        	call	_WritePort_BBSPI
   455                           
   456                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(10000/4000.0)));
   457  0012' D000               	nop2		;2 cycle nop
   458                           
   459                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   460  0014' C005' F003'        	movff	LCDPutChar@ch,WritePort_BBSPI@a
   461  0018' 0E13               	movlw	19
   462  001A' EC00' F000'        	call	_WritePort_BBSPI
   463                           
   464                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(10000/4000.0)));
   465  001E' D000               	nop2		;2 cycle nop
   466                           
   467                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   468  0020' 0EC0               	movlw	192
   469  0022' 6E03'              	movwf	WritePort_BBSPI@a,c
   470  0024' 0E12               	movlw	18
   471  0026' EC00' F000'        	call	_WritePort_BBSPI
   472                           
   473                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(10000/4000.0)));
   474  002A' D000               	nop2		;2 cycle nop
   475                           
   476                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   477  002C' 0E00               	movlw	0
   478  002E' 6E03'              	movwf	WritePort_BBSPI@a,c
   479  0030' 0E12               	movlw	18
   480  0032' EC00' F000'        	call	_WritePort_BBSPI
   481  0036' 0012               	return		;funcret
   482  0038'                    __end_of_LCDPutChar:
   483                           	opt stack 0
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           status	equ	0xFD8
   491                           
   492 ;; *************** function _LCDInit *****************
   493 ;; Defined at:
   494 ;;		line 45 in file "BBSPI_LCD.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    3
   515 ;; This function calls:
   516 ;;		_InitBBSPI
   517 ;;		_LCDPutInst
   518 ;;		_Port_BBSPIInit
   519 ;;		_WritePort_BBSPI
   520 ;; This function is called by:
   521 ;;		_ejemplo
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text4
   526  0000'                    __ptext4:
   527                           	opt stack 0
   528  0000'                    _LCDInit:
   529                           	opt stack 26
   530                           
   531                           ;BBSPI_LCD.c: 47: InitBBSPI();
   532                           
   533                           ;incstack = 0
   534  0000' EC00' F000'        	call	_InitBBSPI	;wreg free
   535                           
   536                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   537  0004' 9C97               	bcf	3991,6,c	;volatile
   538                           
   539                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   540  0006' 9C8E               	bcf	3982,6,c	;volatile
   541                           
   542                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(10000/4000.0)));
   543  0008' 0E04               	movlw	4
   544  000A'                    u87:
   545  000A' 2EE8               	decfsz	wreg,f,c
   546  000C' D7FE               	goto	u87
   547                           
   548                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   549  000E' 8C8E               	bsf	3982,6,c	;volatile
   550                           
   551                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   552  0010' 0E00               	movlw	0
   553  0012' EC00' F000'        	call	_Port_BBSPIInit
   554                           
   555                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   556  0016' 0E01               	movlw	1
   557  0018' EC00' F000'        	call	_Port_BBSPIInit
   558                           
   559                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   560  001C' 0E00               	movlw	0
   561  001E' 6E03'              	movwf	WritePort_BBSPI@a,c
   562  0020' 0E12               	movlw	18
   563  0022' EC00' F000'        	call	_WritePort_BBSPI
   564                           
   565                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(10000/4000.0)));
   566  0026' 0E0C               	movlw	12
   567  0028'                    u97:
   568  0028' 2EE8               	decfsz	wreg,f,c
   569  002A' D7FE               	goto	u97
   570  002C' F000               	nop	
   571                           
   572                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   573  002E' 0E32               	movlw	50
   574  0030' EC00' F000'        	call	_LCDPutInst
   575                           
   576                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   577  0034' 0E3C               	movlw	60
   578  0036' EC00' F000'        	call	_LCDPutInst
   579                           
   580                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   581  003A' 0E0C               	movlw	12
   582  003C' EC00' F000'        	call	_LCDPutInst
   583                           
   584                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   585  0040' 0E01               	movlw	1
   586  0042' EC00' F000'        	call	_LCDPutInst
   587                           
   588                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   589  0046' 0E06               	movlw	6
   590  0048' EC00' F000'        	call	_LCDPutInst
   591  004C' 0012               	return		;funcret
   592  004E'                    __end_of_LCDInit:
   593                           	opt stack 0
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           status	equ	0xFD8
   601                           
   602 ;; *************** function _Port_BBSPIInit *****************
   603 ;; Defined at:
   604 ;;		line 123 in file "BBSPI_LCD.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  port_dir        1    wreg     unsigned char 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  port_dir        1    3[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        1 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		_SendByteBBSPI
   627 ;; This function is called by:
   628 ;;		_LCDInit
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text5
   633  0000'                    __ptext5:
   634                           	opt stack 0
   635  0000'                    _Port_BBSPIInit:
   636                           	opt stack 27
   637                           
   638                           ;incstack = 0
   639                           ;Port_BBSPIInit@port_dir stored from wreg
   640  0000' 6E03'              	movwf	Port_BBSPIInit@port_dir,c
   641                           
   642                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   643  0002' 9489               	bcf	3977,2,c	;volatile
   644                           
   645                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   646  0004' 0E40               	movlw	64
   647  0006' EC00' F000'        	call	_SendByteBBSPI
   648                           
   649                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   650  000A' 5003'              	movf	Port_BBSPIInit@port_dir,w,c
   651  000C' EC00' F000'        	call	_SendByteBBSPI
   652                           
   653                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   654  0010' 0E00               	movlw	0
   655  0012' EC00' F000'        	call	_SendByteBBSPI
   656                           
   657                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   658  0016' 8489               	bsf	3977,2,c	;volatile
   659  0018' 0012               	return		;funcret
   660  001A'                    __end_of_Port_BBSPIInit:
   661                           	opt stack 0
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           status	equ	0xFD8
   669                           
   670 ;; *************** function _LCDPutInst *****************
   671 ;; Defined at:
   672 ;;		line 179 in file "BBSPI_LCD.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  ch              1    wreg     unsigned char 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  ch              1    5[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        1 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    2
   693 ;; This function calls:
   694 ;;		_WritePort_BBSPI
   695 ;; This function is called by:
   696 ;;		_LCDInit
   697 ;;		_ejemplo
   698 ;;		_TestChar
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text6
   703  0000'                    __ptext6:
   704                           	opt stack 0
   705  0000'                    _LCDPutInst:
   706                           	opt stack 27
   707                           
   708                           ;incstack = 0
   709                           ;LCDPutInst@ch stored from wreg
   710  0000' 6E05'              	movwf	LCDPutInst@ch,c
   711                           
   712                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(10000/4000.0)));
   713  0002' 0E04               	movlw	4
   714  0004'                    u107:
   715  0004' 2EE8               	decfsz	wreg,f,c
   716  0006' D7FE               	goto	u107
   717                           
   718                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
   719  0008' 0E00               	movlw	0
   720  000A' 6E03'              	movwf	WritePort_BBSPI@a,c
   721  000C' 0E12               	movlw	18
   722  000E' EC00' F000'        	call	_WritePort_BBSPI
   723                           
   724                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(10000/4000.0)));
   725  0012' D000               	nop2		;2 cycle nop
   726                           
   727                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
   728  0014' C005' F003'        	movff	LCDPutInst@ch,WritePort_BBSPI@a
   729  0018' 0E13               	movlw	19
   730  001A' EC00' F000'        	call	_WritePort_BBSPI
   731                           
   732                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(10000/4000.0)));
   733  001E' D000               	nop2		;2 cycle nop
   734                           
   735                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
   736  0020' 0E40               	movlw	64
   737  0022' 6E03'              	movwf	WritePort_BBSPI@a,c
   738  0024' 0E12               	movlw	18
   739  0026' EC00' F000'        	call	_WritePort_BBSPI
   740                           
   741                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(10000/4000.0)));
   742  002A' D000               	nop2		;2 cycle nop
   743                           
   744                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
   745  002C' 0E00               	movlw	0
   746  002E' 6E03'              	movwf	WritePort_BBSPI@a,c
   747  0030' 0E12               	movlw	18
   748  0032' EC00' F000'        	call	_WritePort_BBSPI
   749  0036' 0012               	return		;funcret
   750  0038'                    __end_of_LCDPutInst:
   751                           	opt stack 0
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           status	equ	0xFD8
   759                           
   760 ;; *************** function _WritePort_BBSPI *****************
   761 ;; Defined at:
   762 ;;		line 144 in file "BBSPI_LCD.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  port_add        1    wreg     unsigned char 
   765 ;;  a               1    3[COMRAM] unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  port_add        1    4[COMRAM] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    1
   784 ;; This function calls:
   785 ;;		_SendByteBBSPI
   786 ;; This function is called by:
   787 ;;		_LCDInit
   788 ;;		_LCDPutChar
   789 ;;		_LCDPutInst
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text7
   794  0000'                    __ptext7:
   795                           	opt stack 0
   796  0000'                    _WritePort_BBSPI:
   797                           	opt stack 26
   798                           
   799                           ;incstack = 0
   800                           ;WritePort_BBSPI@port_add stored from wreg
   801  0000' 6E04'              	movwf	WritePort_BBSPI@port_add,c
   802                           
   803                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
   804  0002' 9489               	bcf	3977,2,c	;volatile
   805                           
   806                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
   807  0004' 0E40               	movlw	64
   808  0006' EC00' F000'        	call	_SendByteBBSPI
   809                           
   810                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
   811  000A' 5004'              	movf	WritePort_BBSPI@port_add,w,c
   812  000C' EC00' F000'        	call	_SendByteBBSPI
   813                           
   814                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
   815  0010' 5003'              	movf	WritePort_BBSPI@a,w,c
   816  0012' EC00' F000'        	call	_SendByteBBSPI
   817                           
   818                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
   819  0016' 8489               	bsf	3977,2,c	;volatile
   820  0018' 0012               	return		;funcret
   821  001A'                    __end_of_WritePort_BBSPI:
   822                           	opt stack 0
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           status	equ	0xFD8
   830                           
   831 ;; *************** function _SendByteBBSPI *****************
   832 ;; Defined at:
   833 ;;		line 91 in file "BBSPI_LCD.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  output          1    wreg     unsigned char 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  output          1    0[COMRAM] unsigned char 
   838 ;;  input           1    2[COMRAM] unsigned char 
   839 ;;  bitcount        1    1[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_Port_BBSPIInit
   859 ;;		_WritePort_BBSPI
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text8
   864  0000'                    __ptext8:
   865                           	opt stack 0
   866  0000'                    _SendByteBBSPI:
   867                           	opt stack 26
   868                           
   869                           ;incstack = 0
   870                           ;SendByteBBSPI@output stored from wreg
   871  0000' 6E00'              	movwf	SendByteBBSPI@output,c
   872                           
   873                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
   874                           ;BBSPI_LCD.c: 94: unsigned char input = output;
   875  0002' C000' F002'        	movff	SendByteBBSPI@output,SendByteBBSPI@input
   876                           
   877                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
   878  0006' 0E00               	movlw	0
   879  0008' 6E01'              	movwf	SendByteBBSPI@bitcount,c
   880  000A'                    l750:
   881  000A' 0E07               	movlw	7
   882  000C' 6401'              	cpfsgt	SendByteBBSPI@bitcount,c
   883  000E' D001               	goto	l33
   884  0010' 0012               	return	
   885  0012'                    l33:
   886                           
   887                           ;BBSPI_LCD.c: 97: {
   888                           ;BBSPI_LCD.c: 99: if(output & 0x80)
   889  0012' AE00'              	btfss	SendByteBBSPI@output,7,c
   890  0014' D002               	goto	l35
   891                           
   892                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
   893  0016' 8A8B               	bsf	3979,5,c	;volatile
   894  0018' D001               	goto	l36
   895  001A'                    l35:
   896                           
   897                           ;BBSPI_LCD.c: 101: else
   898                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
   899  001A' 9A8B               	bcf	3979,5,c	;volatile
   900  001C'                    l36:
   901                           
   902                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
   903  001C' A88B               	btfss	3979,4,c	;volatile
   904  001E' D003               	goto	l758
   905                           
   906                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
   907  0020' 80D8               	bsf	status,0,c
   908  0022' 3602'              	rlcf	SendByteBBSPI@input,f,c
   909  0024' D003               	goto	l760
   910  0026'                    l758:
   911                           
   912                           ;BBSPI_LCD.c: 106: else
   913                           ;BBSPI_LCD.c: 107: input = input << 1;
   914  0026' 5002'              	movf	SendByteBBSPI@input,w,c
   915  0028' 2402'              	addwf	SendByteBBSPI@input,w,c
   916  002A' 6E02'              	movwf	SendByteBBSPI@input,c
   917  002C'                    l760:
   918                           
   919                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
   920  002C' 868B               	bsf	3979,3,c	;volatile
   921                           
   922                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
   923  002E' F000               	nop	
   924  0030' F000               	nop	
   925  0032' F000               	nop	
   926  0034' F000               	nop	
   927  0036' F000               	nop	
   928  0038' F000               	nop	
   929                           
   930                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
   931  003A' F000               	nop	
   932  003C' F000               	nop	
   933  003E' F000               	nop	
   934  0040' F000               	nop	
   935  0042' F000               	nop	
   936  0044' F000               	nop	
   937                           
   938                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
   939  0046' 968B               	bcf	3979,3,c	;volatile
   940                           
   941                           ;BBSPI_LCD.c: 112: output <<= 1;
   942  0048' 90D8               	bcf	status,0,c
   943  004A' 3600'              	rlcf	SendByteBBSPI@output,f,c
   944  004C' 2A01'              	incf	SendByteBBSPI@bitcount,f,c
   945  004E' D7DD               	goto	l750
   946  0050'                    __end_of_SendByteBBSPI:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _InitBBSPI *****************
   957 ;; Defined at:
   958 ;;		line 70 in file "BBSPI_LCD.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		None
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_LCDInit
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text9
   986  0000'                    __ptext9:
   987                           	opt stack 0
   988  0000'                    _InitBBSPI:
   989                           	opt stack 28
   990                           
   991                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
   992                           
   993                           ;incstack = 0
   994  0000' 9492               	bcf	3986,2,c	;volatile
   995                           
   996                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
   997  0002' 8894               	bsf	3988,4,c	;volatile
   998                           
   999                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
  1000  0004' 9A94               	bcf	3988,5,c	;volatile
  1001                           
  1002                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
  1003  0006' 9694               	bcf	3988,3,c	;volatile
  1004                           
  1005                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
  1006  0008' 8489               	bsf	3977,2,c	;volatile
  1007                           
  1008                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
  1009  000A' 888B               	bsf	3979,4,c	;volatile
  1010                           
  1011                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
  1012  000C' 9A8B               	bcf	3979,5,c	;volatile
  1013                           
  1014                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
  1015  000E' 968B               	bcf	3979,3,c	;volatile
  1016  0010' 0012               	return		;funcret
  1017  0012'                    __end_of_InitBBSPI:
  1018                           	opt stack 0
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           tblptrl	equ	0xFF6
  1022                           tablat	equ	0xFF5
  1023                           postinc0	equ	0xFEE
  1024                           wreg	equ	0xFE8
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _InitConf *****************
  1028 ;; Defined at:
  1029 ;;		line 61 in file "Modules.h"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    1
  1050 ;; This function calls:
  1051 ;;		_ClockSetup
  1052 ;;		_DigitalIO
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text10
  1059  0000'                    __ptext10:
  1060                           	opt stack 0
  1061  0000'                    _InitConf:
  1062                           	opt stack 29
  1063                           
  1064                           ;Modules.h: 63: ClockSetup();
  1065                           
  1066                           ;incstack = 0
  1067  0000' EC00' F000'        	call	_ClockSetup	;wreg free
  1068                           
  1069                           ;Modules.h: 64: DigitalIO();
  1070  0004' EC00' F000'        	call	_DigitalIO	;wreg free
  1071  0008' 0012               	return		;funcret
  1072  000A'                    __end_of_InitConf:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           postinc0	equ	0xFEE
  1079                           wreg	equ	0xFE8
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function _DigitalIO *****************
  1083 ;; Defined at:
  1084 ;;		line 43 in file "Modules.h"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_InitConf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text11
  1112  0000'                    __ptext11:
  1113                           	opt stack 0
  1114  0000'                    _DigitalIO:
  1115                           	opt stack 29
  1116                           
  1117                           ;Modules.h: 45: LATA=0;
  1118                           
  1119                           ;incstack = 0
  1120  0000' 0E00               	movlw	0
  1121  0002' 6E89               	movwf	3977,c	;volatile
  1122                           
  1123                           ;Modules.h: 46: PORTA=0;
  1124  0004' 0E00               	movlw	0
  1125  0006' 6E80               	movwf	3968,c	;volatile
  1126                           
  1127                           ;Modules.h: 47: TRISA=0X20;
  1128  0008' 0E20               	movlw	32
  1129  000A' 6E92               	movwf	3986,c	;volatile
  1130                           
  1131                           ;Modules.h: 48: ADCON1=0X0F;
  1132  000C' 0E0F               	movlw	15
  1133  000E' 6EC1               	movwf	4033,c	;volatile
  1134                           
  1135                           ;Modules.h: 50: LATB=0;
  1136  0010' 0E00               	movlw	0
  1137  0012' 6E8A               	movwf	3978,c	;volatile
  1138                           
  1139                           ;Modules.h: 51: PORTB=0;
  1140  0014' 0E00               	movlw	0
  1141  0016' 6E81               	movwf	3969,c	;volatile
  1142                           
  1143                           ;Modules.h: 52: TRISB=0X01;
  1144  0018' 0E01               	movlw	1
  1145  001A' 6E93               	movwf	3987,c	;volatile
  1146                           
  1147                           ;Modules.h: 54: LATD=0;
  1148  001C' 0E00               	movlw	0
  1149  001E' 6E8C               	movwf	3980,c	;volatile
  1150                           
  1151                           ;Modules.h: 55: PORTD=0;
  1152  0020' 0E00               	movlw	0
  1153  0022' 6E83               	movwf	3971,c	;volatile
  1154                           
  1155                           ;Modules.h: 56: TRISD=0;
  1156  0024' 0E00               	movlw	0
  1157  0026' 6E95               	movwf	3989,c	;volatile
  1158                           
  1159                           ;Modules.h: 57: TRISD&=~(0xFF);
  1160  0028' 0E00               	movlw	0
  1161  002A' 6E95               	movwf	3989,c	;volatile
  1162                           
  1163                           ;Modules.h: 58: PSPCON=0;
  1164  002C' 0E00               	movlw	0
  1165  002E' 6EB0               	movwf	4016,c	;volatile
  1166  0030' 0012               	return		;funcret
  1167  0032'                    __end_of_DigitalIO:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _ClockSetup *****************
  1178 ;; Defined at:
  1179 ;;		line 36 in file "Modules.h"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_InitConf
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text12
  1207  0000'                    __ptext12:
  1208                           	opt stack 0
  1209  0000'                    _ClockSetup:
  1210                           	opt stack 29
  1211                           
  1212                           ;Modules.h: 38: OSCCON=0x60|0x00;
  1213                           
  1214                           ;incstack = 0
  1215  0000' 0E60               	movlw	96
  1216  0002' 6ED3               	movwf	4051,c	;volatile
  1217                           
  1218                           ;Modules.h: 39: OSCTUNE = 0x00;
  1219  0004' 0E00               	movlw	0
  1220  0006' 6E9B               	movwf	3995,c	;volatile
  1221  0008' 0012               	return		;funcret
  1222  000A'                    __end_of_ClockSetup:
  1223                           	opt stack 0
  1224                           tblptru	equ	0xFF8
  1225                           tblptrh	equ	0xFF7
  1226                           tblptrl	equ	0xFF6
  1227                           tablat	equ	0xFF5
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           status	equ	0xFD8
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           status	equ	0xFD8
  1238                           
  1239                           	psect	rparam
  1240  0000                     tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[4]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3184
                          _InitAdc10
                           _InitConf
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                              6 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0     732
                                              5 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    1547
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           1     1      0     732
                                              5 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitAdc10                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitAdc10
   _InitConf
     _ClockSetup
     _DigitalIO
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F      8      18       1       25.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      32        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jan 20 23:51:42 2017

                      l33 000012                        l35 00001A               ?_LCDPutChar 000000  
                      l36 00001C                        u77 000004                        u87 00000A  
                      u97 000028               ?_LCDPutInst 000000               __CFG_BORV$3 000000  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               __CFG_OSC$HS 000000              __CFG_CP4$OFF 000000  
            __CFG_CP5$OFF 000000     SendByteBBSPI@bitcount 000001              __CFG_CP6$OFF 000000  
            __CFG_CP7$OFF 000000                       l129 00000C                       l750 00000A  
                     l760 00002C                       l758 000026                       l964 000002  
                     l968 000016              __CFG_CPB$OFF 000000                       u107 000004  
            __CFG_CPD$OFF 000000                       wreg 000FE8              __CFG_MODE$MC 000000  
         __end_of_LCDInit 00004E              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    STR_1 000001                      STR_2 00000C                      _LATA 000F89  
                    _LATB 000F8A                      _LATD 000F8C                      _decN 000002  
                    _cenN 000000                      _main 000000                      _milN 000004  
        ?_WritePort_BBSPI 000003                      start 000000*       __size_of_LCDPutStr 000000  
           __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000              ___param_bank 000010  
              _ClockSetup 000000             __CFG_WAIT$OFF 000000                     ?_main 000000  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTD 000F83  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000             __CFG_WRT4$OFF 000000  
           __CFG_WRT5$OFF 000000             __CFG_WRT6$OFF 000000             __CFG_WRT7$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000           __end_of_ejemplo 00002A            __CFG_EBTR3$OFF 000000  
          __CFG_EBTR4$OFF 000000            __CFG_EBTR5$OFF 000000            __CFG_EBTR6$OFF 000000  
          __CFG_EBTR7$OFF 000000             __CFG_WRTB$OFF 000000   __size_of_Port_BBSPIInit 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
                   _unitN 000006                     _volti 00000A                     _volts 00000C  
          __pbitbssCOMRAM 000000            __CFG_BOREN$OFF 000000                     tablat 000FF5  
     __size_of_LCDPutChar 000000       __size_of_LCDPutInst 000000                     status 000FD8  
         __initialization 000000              __end_of_main 00000E          __end_of_InitConf 00000A  
                  ??_main 000008        __size_of_DigitalIO 000000             __activetblptr 000001  
               ??_LCDInit 000006              LCDPutChar@ch 000005         __end_of_LCDPutStr 00002A  
                  _ADCON1 000FC1        __size_of_InitBBSPI 000000              LCDPutInst@ch 000005  
         __CFG_BBSIZ$BB2K 000000                    _OSCCON 000FD3                    _PSPCON 000FB0  
            LCDPutStr@ptr 000006            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
             ?_ClockSetup 000000                    clear_0 000008                 ??_ejemplo 000008  
  Port_BBSPIInit@port_dir 000003              __mediumconst 000000*                   tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 000000* 
 __end_of__initialization 00000E         __end_of_DigitalIO 000032             ___rparam_used 000001  
  __size_of_SendByteBBSPI 000000            __pcstackCOMRAM 000000         __end_of_InitBBSPI 000012  
            ??_LCDPutChar 000005              ??_LCDPutInst 000005            _Port_BBSPIInit 000000  
               ?_InitConf 000000       __size_of_ClockSetup 000000        __end_of_LCDPutChar 000038  
      __end_of_LCDPutInst 000038    __end_of_Port_BBSPIInit 00001A                   _LCDInit 000000  
           _SendByteBBSPI 000000                   _OSCTUNE 000F9B                ??_InitConf 000000  
        WritePort_BBSPI@a 000003                   __Hparam 000000                   __Lparam 000000  
__size_of_WritePort_BBSPI 000000              __psmallconst 000000                   __pcinit 000000  
                 __ramtop 000000*                  __ptext0 000000                   __ptext1 000000  
                 __ptext2 000000                   __ptext3 000000                   __ptext4 000000  
                 __ptext5 000000                   __ptext6 000000                   __ptext7 000000  
                 __ptext8 000000                   __ptext9 000000                   _ejemplo 000000  
          ?_SendByteBBSPI 000000           ?_Port_BBSPIInit 000000                   _mostrar 000000  
               _LCDPutStr 000000                   _voltage 000008      end_of_initialization 00000E  
                 postinc0 000FEE              ??_ClockSetup 000000                 _TRISAbits 000F92  
               _TRISCbits 000F94                 _TRISFbits 000F97                ?_LCDPutStr 000006  
     SendByteBBSPI@output 000000        __end_of_ClockSetup 00000A                 _DigitalIO 000000  
         ??_SendByteBBSPI 000000                 _InitBBSPI 000000                 _InitAdc10 000000* 
       ??_WritePort_BBSPI 000004       start_initialization 000000         __size_of_InitConf 000000  
              ?_DigitalIO 000000          __CFG_LPT1OSC$OFF 000000                ?_InitBBSPI 000000  
                ?_LCDInit 000000                ?_InitAdc10 000000               __pbssCOMRAM 000000  
             ??_LCDPutStr 000008         __CFG_CCP2MX$PORTC 000000          ??_Port_BBSPIInit 000003  
                ?_ejemplo 000000               __smallconst 000000*                 _LATAbits 000F89  
                _LATCbits 000F8B                  _LATFbits 000F8E     __CFG_DATABW$DATA16BIT 000000  
             ??_DigitalIO 000000          __CFG_WDTPS$32768 000000         __CFG_ECCPMX$PORTE 000000  
             ??_InitBBSPI 000000        SendByteBBSPI@input 000002               ??_InitAdc10 000000  
        __size_of_LCDInit 000000                  _InitConf 000000                  __Hrparam 000000* 
                __Lrparam 000000*             __Lsmallconst 000000*          _WritePort_BBSPI 000000  
        __size_of_ejemplo 000000                  _asciiLCD 00000E                  __ptext10 000000  
                __ptext11 000000                  __ptext12 000000             __size_of_main 000000  
              _LCDPutChar 000000                _LCDPutInst 000000     __end_of_SendByteBBSPI 000050  
   __CFG_ADDRBW$ADDR20BIT 000000   __end_of_WritePort_BBSPI 00001A   WritePort_BBSPI@port_add 000004  
