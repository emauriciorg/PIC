

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Jan 21 15:23:15 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataCOMRAM
    33  00133A                     __pidataCOMRAM:
    34                           	opt stack 0
    35                           
    36                           ;initializer for _recibido
    37  00133A  30                 	db	48
    38  0000                     _ADCON1	set	4033
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _LATA	set	3977
    41  0000                     _LATAbits	set	3977
    42  0000                     _LATB	set	3978
    43  0000                     _LATC	set	3979
    44  0000                     _LATCbits	set	3979
    45  0000                     _LATD	set	3980
    46  0000                     _LATE	set	3981
    47  0000                     _LATFbits	set	3982
    48  0000                     _OSCCON	set	4051
    49  0000                     _OSCTUNE	set	3995
    50  0000                     _PIR1bits	set	3998
    51  0000                     _PORTA	set	3968
    52  0000                     _PORTB	set	3969
    53  0000                     _PORTD	set	3971
    54  0000                     _PSPCON	set	4016
    55  0000                     _RCREG	set	4014
    56  0000                     _RCSTA	set	4011
    57  0000                     _SPBRG	set	4015
    58  0000                     _SPBRGH	set	3967
    59  0000                     _TRISA	set	3986
    60  0000                     _TRISAbits	set	3986
    61  0000                     _TRISB	set	3987
    62  0000                     _TRISC	set	3988
    63  0000                     _TRISCbits	set	3988
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISE	set	3990
    66  0000                     _TRISFbits	set	3991
    67  0000                     _TXREG	set	4013
    68  0000                     _TXSTA	set	4012
    69                           
    70                           	psect	smallconst
    71  001000                     __psmallconst:
    72                           	opt stack 0
    73  001000  00                 	db	0
    74  001001                     STR_3:
    75  001001  45                 	db	69	;'E'
    76  001002  6A                 	db	106	;'j'
    77  001003  65                 	db	101	;'e'
    78  001004  6D                 	db	109	;'m'
    79  001005  70                 	db	112	;'p'
    80  001006  6C                 	db	108	;'l'
    81  001007  6F                 	db	111	;'o'
    82  001008  5F                 	db	95	;'_'
    83  001009  30                 	db	48	;'0'
    84  00100A  30                 	db	48	;'0'
    85  00100B  39                 	db	57	;'9'
    86  00100C  20                 	db	32
    87  00100D  45                 	db	69	;'E'
    88  00100E  75                 	db	117	;'u'
    89  00100F  73                 	db	115	;'s'
    90  001010  61                 	db	97	;'a'
    91  001011  72                 	db	114	;'r'
    92  001012  74                 	db	116	;'t'
    93  001013  0A                 	db	10
    94  001014  0D                 	db	13
    95  001015  00                 	db	0
    96  001016                     STR_1:
    97  001016  45                 	db	69	;'E'
    98  001017  6A                 	db	106	;'j'
    99  001018  65                 	db	101	;'e'
   100  001019  6D                 	db	109	;'m'
   101  00101A  70                 	db	112	;'p'
   102  00101B  6C                 	db	108	;'l'
   103  00101C  6F                 	db	111	;'o'
   104  00101D  5F                 	db	95	;'_'
   105  00101E  30                 	db	48	;'0'
   106  00101F  30                 	db	48	;'0'
   107  001020  39                 	db	57	;'9'
   108  001021  00                 	db	0
   109  001022                     STR_2:
   110  001022  45                 	db	69	;'E'
   111  001023  75                 	db	117	;'u'
   112  001024  73                 	db	115	;'s'
   113  001025  61                 	db	97	;'a'
   114  001026  72                 	db	114	;'r'
   115  001027  74                 	db	116	;'t'
   116  001028  00                 	db	0
   117                           
   118                           ; #config settings
   119  001029  00                 	db	0	; dummy byte at the end
   120  0000                     
   121                           	psect	cinit
   122  0011E6                     __pcinit:
   123                           	opt stack 0
   124  0011E6                     start_initialization:
   125                           	opt stack 0
   126  0011E6                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Initialize objects allocated to COMRAM (1 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131  0011E6  0E3A               	movlw	low __pidataCOMRAM
   132  0011E8  6EF6               	movwf	tblptrl,c
   133  0011EA  0E13               	movlw	high __pidataCOMRAM
   134  0011EC  6EF7               	movwf	tblptrh,c
   135  0011EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136  0011F0  6EF8               	movwf	tblptru,c
   137  0011F2  0009               	tblrd		*+	;fetch initializer
   138  0011F4  CFF5 F019          	movff	tablat,__pdataCOMRAM
   139                           
   140                           ; Clear objects allocated to COMRAM (15 bytes)
   141  0011F8  EE00  F001         	lfsr	0,__pbssCOMRAM
   142  0011FC  0E0F               	movlw	15
   143  0011FE                     clear_0:
   144  0011FE  6AEE               	clrf	postinc0,c
   145  001200  06E8               	decf	wreg,f,c
   146  001202  E1FD               	bnz	clear_0
   147  001204                     end_of_initialization:
   148                           	opt stack 0
   149  001204                     __end_of__initialization:
   150                           	opt stack 0
   151  001204  0E00               	movlw	low (__Lsmallconst shr (0+16))
   152  001206  6EF8               	movwf	tblptru,c
   153  001208  0E10               	movlw	high __Lsmallconst
   154  00120A  6EF7               	movwf	tblptrh,c
   155  00120C  0100               	movlb	0
   156  00120E  EF6F  F009         	goto	_main	;jump to C main() function
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           	psect	bssCOMRAM
   165  000001                     __pbssCOMRAM:
   166                           	opt stack 0
   167  000001                     _cenN:
   168                           	opt stack 0
   169  000001                     	ds	2
   170  000003                     _decN:
   171                           	opt stack 0
   172  000003                     	ds	2
   173  000005                     _milN:
   174                           	opt stack 0
   175  000005                     	ds	2
   176  000007                     _unitN:
   177                           	opt stack 0
   178  000007                     	ds	2
   179  000009                     _voltage:
   180                           	opt stack 0
   181  000009                     	ds	2
   182  00000B                     _volti:
   183                           	opt stack 0
   184  00000B                     	ds	2
   185  00000D                     _volts:
   186                           	opt stack 0
   187  00000D                     	ds	2
   188  00000F                     _asciiLCD:
   189                           	opt stack 0
   190  00000F                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	dataCOMRAM
   199  000019                     __pdataCOMRAM:
   200                           	opt stack 0
   201  000019                     _recibido:
   202                           	opt stack 0
   203  000019                     	ds	1
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	cstackCOMRAM
   212  000010                     __pcstackCOMRAM:
   213                           	opt stack 0
   214  000010                     SendByteBBSPI@output:
   215                           	opt stack 0
   216  000010                     EUSART1_Write@txData:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  000010                     	ds	1
   221  000011                     SendByteBBSPI@bitcount:
   222                           	opt stack 0
   223  000011                     putch@txData:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x1
   227  000011                     	ds	1
   228  000012                     ?_printf:
   229                           	opt stack 0
   230  000012                     SendByteBBSPI@input:
   231                           	opt stack 0
   232  000012                     printf@f:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x2
   236  000012                     	ds	1
   237  000013                     Port_BBSPIInit@port_dir:
   238                           	opt stack 0
   239  000013                     WritePort_BBSPI@a:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x3
   243  000013                     	ds	1
   244  000014                     WritePort_BBSPI@port_add:
   245                           	opt stack 0
   246  000014                     printf@ap:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x4
   250  000014                     	ds	1
   251  000015                     ??_LCDPutInst:
   252  000015                     ??_LCDPutChar:
   253                           
   254                           ; 1 bytes @ 0x5
   255  000015                     	ds	1
   256  000016                     LCDPutChar@ch:
   257                           	opt stack 0
   258  000016                     LCDPutInst@ch:
   259                           	opt stack 0
   260  000016                     printf@c:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x6
   264  000016                     	ds	1
   265  000017                     ??_LCDInit:
   266  000017                     LCDPutStr@ptr:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x7
   270  000017                     	ds	2
   271  000019                     tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           postinc0	equ	0xFEE
   276                           wreg	equ	0xFE8
   277                           
   278                           ; 1 bytes @ 0x9
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 16 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called:    5
   304 ;; This function calls:
   305 ;;		_EUSART1_Initialize
   306 ;;		_InitConf
   307 ;;		_ejemplo
   308 ;;		_test_uart
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text0
   315  0012DE                     __ptext0:
   316                           	opt stack 0
   317  0012DE                     _main:
   318                           	opt stack 26
   319                           
   320                           ;main.c: 18: InitConf();
   321                           
   322                           ;incstack = 0
   323  0012DE  EC93  F009         	call	_InitConf	;wreg free
   324                           
   325                           ;main.c: 19: EUSART1_Initialize();
   326  0012E2  EC62  F009         	call	_EUSART1_Initialize	;wreg free
   327                           
   328                           ;main.c: 20: ejemplo();
   329  0012E6  EC1E  F009         	call	_ejemplo	;wreg free
   330  0012EA                     l1048:
   331                           
   332                           ;main.c: 23: {
   333                           ;main.c: 24: test_uart();
   334  0012EA  EC81  F009         	call	_test_uart	;wreg free
   335  0012EE  D7FD               	goto	l1048
   336  0012F0                     __end_of_main:
   337                           	opt stack 0
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345 ;; *************** function _test_uart *****************
   346 ;; Defined at:
   347 ;;		line 29 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; Hardware stack levels required when called:    3
   368 ;; This function calls:
   369 ;;		_printf
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376  001302                     __ptext1:
   377                           	opt stack 0
   378  001302                     _test_uart:
   379                           	opt stack 27
   380                           
   381                           ;main.c: 31: printf("Ejemplo_009 Eusart\n\r");
   382                           
   383                           ;incstack = 0
   384  001302  0E01               	movlw	low STR_3
   385  001304  6E12               	movwf	printf@f,c
   386  001306  0E10               	movlw	high STR_3
   387  001308  6E13               	movwf	printf@f+1,c
   388  00130A  EC09  F009         	call	_printf	;wreg free
   389  00130E  0012               	return		;funcret
   390  001310                     __end_of_test_uart:
   391                           	opt stack 0
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           
   399 ;; *************** function _printf *****************
   400 ;; Defined at:
   401 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  f               2    2[COMRAM] PTR const unsigned char 
   404 ;;		 -> STR_3(21), 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  tmpval          4    0        struct .
   407 ;;  cp              3    0        PTR const unsigned char 
   408 ;;  ap              2    4[COMRAM] PTR void [1]
   409 ;;		 -> ?_printf(2), 
   410 ;;  len             2    0        unsigned int 
   411 ;;  val             2    0        unsigned int 
   412 ;;  c               1    6[COMRAM] char 
   413 ;;  flag            1    0        unsigned char 
   414 ;;  prec            1    0        char 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  2    2[COMRAM] int 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;Total ram usage:        5 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    2
   431 ;; This function calls:
   432 ;;		_putch
   433 ;; This function is called by:
   434 ;;		_test_uart
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text2
   439  001212                     __ptext2:
   440                           	opt stack 0
   441  001212                     _printf:
   442                           	opt stack 27
   443                           
   444                           ;doprnt.c: 466: va_list ap;
   445                           ;doprnt.c: 499: signed char c;
   446                           ;doprnt.c: 506: signed char prec;
   447                           ;doprnt.c: 508: unsigned char flag;
   448                           ;doprnt.c: 523: union {
   449                           ;doprnt.c: 524: unsigned long vd;
   450                           ;doprnt.c: 525: double integ;
   451                           ;doprnt.c: 526: } tmpval;
   452                           ;doprnt.c: 528: unsigned int val;
   453                           ;doprnt.c: 529: unsigned len;
   454                           ;doprnt.c: 530: const char * cp;
   455                           ;doprnt.c: 533: *ap = __va_start();
   456                           
   457                           ;incstack = 0
   458  001212  0E14               	movlw	low (?_printf+2)
   459  001214  6E14               	movwf	printf@ap,c
   460  001216  0E00               	movlw	high (?_printf+2)
   461  001218  6E15               	movwf	printf@ap+1,c
   462                           
   463                           ;doprnt.c: 536: while(c = *f++) {
   464  00121A  D003               	goto	l1034
   465  00121C                     l1032:
   466                           
   467                           ;doprnt.c: 540: {
   468                           ;doprnt.c: 541: (putch(c) );
   469  00121C  5016               	movf	printf@c,w,c
   470  00121E  EC8E  F009         	call	_putch
   471  001222                     l1034:
   472  001222  C012  FFF6         	movff	printf@f,tblptrl
   473  001226  C013  FFF7         	movff	printf@f+1,tblptrh
   474  00122A  4A12               	infsnz	printf@f,f,c
   475  00122C  2A13               	incf	printf@f+1,f,c
   476  00122E                     	if	0	;tblptru may be non-zero
   477  00122E                     	endif
   478  00122E                     	if	0	;tblptru may be non-zero
   479  00122E                     	endif
   480  00122E  0008               	tblrd		*
   481  001230  CFF5 F016          	movff	tablat,printf@c
   482  001234  5016               	movf	printf@c,w,c
   483  001236  B4D8               	btfsc	status,2,c
   484  001238  0012               	return	
   485  00123A  D7F0               	goto	l1032
   486  00123C                     __end_of_printf:
   487                           	opt stack 0
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           status	equ	0xFD8
   495                           
   496 ;; *************** function _putch *****************
   497 ;; Defined at:
   498 ;;		line 48 in file "eusart1.h"
   499 ;; Parameters:    Size  Location     Type
   500 ;;  txData          1    wreg     unsigned char 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  txData          1    1[COMRAM] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;Total ram usage:        1 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    1
   519 ;; This function calls:
   520 ;;		_EUSART1_Write
   521 ;; This function is called by:
   522 ;;		_printf
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text3
   527  00131C                     __ptext3:
   528                           	opt stack 0
   529  00131C                     _putch:
   530                           	opt stack 27
   531                           
   532                           ;incstack = 0
   533                           ;putch@txData stored from wreg
   534  00131C  6E11               	movwf	putch@txData,c
   535                           
   536                           ;eusart1.h: 50: EUSART1_Write(txData);
   537  00131E  5011               	movf	putch@txData,w,c
   538  001320  EC88  F009         	call	_EUSART1_Write
   539  001324  0012               	return		;funcret
   540  001326                     __end_of_putch:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           status	equ	0xFD8
   549                           
   550 ;; *************** function _EUSART1_Write *****************
   551 ;; Defined at:
   552 ;;		line 37 in file "eusart1.h"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  txData          1    wreg     unsigned char 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  txData          1    0[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_putch
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text4
   580  001310                     __ptext4:
   581                           	opt stack 0
   582  001310                     _EUSART1_Write:
   583                           	opt stack 27
   584                           
   585                           ;incstack = 0
   586                           ;EUSART1_Write@txData stored from wreg
   587  001310  6E10               	movwf	EUSART1_Write@txData,c
   588  001312                     l123:
   589  001312  A89E               	btfss	3998,4,c	;volatile
   590  001314  D7FE               	goto	l123
   591                           
   592                           ;eusart1.h: 41: }
   593                           ;eusart1.h: 43: TXREG = txData;
   594  001316  C010  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   595  00131A  0012               	return		;funcret
   596  00131C                     __end_of_EUSART1_Write:
   597                           	opt stack 0
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           status	equ	0xFD8
   605                           
   606 ;; *************** function _ejemplo *****************
   607 ;; Defined at:
   608 ;;		line 18 in file "Ejemplo.h"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    4
   629 ;; This function calls:
   630 ;;		_LCDInit
   631 ;;		_LCDPutInst
   632 ;;		_LCDPutStr
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text5
   639  00123C                     __ptext5:
   640                           	opt stack 0
   641  00123C                     _ejemplo:
   642                           	opt stack 26
   643                           
   644                           ;Ejemplo.h: 20: LCDInit();
   645                           
   646                           ;incstack = 0
   647  00123C  EC7B  F008         	call	_LCDInit	;wreg free
   648                           
   649                           ;Ejemplo.h: 21: LCDPutInst(0x80);
   650  001240  0E80               	movlw	128
   651  001242  EC48  F008         	call	_LCDPutInst
   652                           
   653                           ;Ejemplo.h: 22: LCDPutStr("Ejemplo_009");
   654  001246  0E16               	movlw	low STR_1
   655  001248  6E17               	movwf	LCDPutStr@ptr,c
   656  00124A  0E10               	movlw	high STR_1
   657  00124C  6E18               	movwf	LCDPutStr@ptr+1,c
   658  00124E  EC33  F009         	call	_LCDPutStr	;wreg free
   659                           
   660                           ;Ejemplo.h: 23: LCDPutInst(0xC0);
   661  001252  0EC0               	movlw	192
   662  001254  EC48  F008         	call	_LCDPutInst
   663                           
   664                           ;Ejemplo.h: 24: LCDPutStr("Eusart");
   665  001258  0E22               	movlw	low STR_2
   666  00125A  6E17               	movwf	LCDPutStr@ptr,c
   667  00125C  0E10               	movlw	high STR_2
   668  00125E  6E18               	movwf	LCDPutStr@ptr+1,c
   669  001260  EC33  F009         	call	_LCDPutStr	;wreg free
   670  001264  0012               	return		;funcret
   671  001266                     __end_of_ejemplo:
   672                           	opt stack 0
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           status	equ	0xFD8
   680                           
   681 ;; *************** function _LCDPutStr *****************
   682 ;; Defined at:
   683 ;;		line 198 in file "BBSPI_LCD.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
   686 ;;		 -> STR_2(7), STR_1(12), 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;Total ram usage:        2 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    3
   705 ;; This function calls:
   706 ;;		_LCDPutChar
   707 ;; This function is called by:
   708 ;;		_ejemplo
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text6
   713  001266                     __ptext6:
   714                           	opt stack 0
   715  001266                     _LCDPutStr:
   716                           	opt stack 26
   717                           
   718                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   719                           
   720                           ;incstack = 0
   721  001266  D00A               	goto	l1028
   722  001268                     l1024:
   723  001268  C017  FFF6         	movff	LCDPutStr@ptr,tblptrl
   724  00126C  C018  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   725  001270                     	if	0	;tblptru may be non-zero
   726  001270                     	endif
   727  001270                     	if	0	;tblptru may be non-zero
   728  001270                     	endif
   729  001270  0008               	tblrd		*
   730  001272  50F5               	movf	tablat,w,c
   731  001274  EC15  F008         	call	_LCDPutChar
   732  001278  4A17               	infsnz	LCDPutStr@ptr,f,c
   733  00127A  2A18               	incf	LCDPutStr@ptr+1,f,c
   734  00127C                     l1028:
   735  00127C  C017  FFF6         	movff	LCDPutStr@ptr,tblptrl
   736  001280  C018  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   737  001284                     	if	0	;tblptru may be non-zero
   738  001284                     	endif
   739  001284                     	if	0	;tblptru may be non-zero
   740  001284                     	endif
   741  001284  0008               	tblrd		*
   742  001286  50F5               	movf	tablat,w,c
   743  001288  0900               	iorlw	0
   744  00128A  B4D8               	btfsc	status,2,c
   745  00128C  0012               	return	
   746  00128E  D7EC               	goto	l1024
   747  001290                     __end_of_LCDPutStr:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           status	equ	0xFD8
   756                           
   757 ;; *************** function _LCDPutChar *****************
   758 ;; Defined at:
   759 ;;		line 160 in file "BBSPI_LCD.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  ch              1    wreg     unsigned char 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  ch              1    6[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:        2 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		_WritePort_BBSPI
   782 ;; This function is called by:
   783 ;;		_LCDPutStr
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text7
   788  00102A                     __ptext7:
   789                           	opt stack 0
   790  00102A                     _LCDPutChar:
   791                           	opt stack 26
   792                           
   793                           ;incstack = 0
   794                           ;LCDPutChar@ch stored from wreg
   795  00102A  6E16               	movwf	LCDPutChar@ch,c
   796                           
   797                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(10000000/4000.0)));
   798  00102C  0E11               	movlw	17
   799  00102E  6E15               	movwf	??_LCDPutChar& (0+255),c
   800  001030  0E3A               	movlw	58
   801  001032                     u107:
   802  001032  2EE8               	decfsz	wreg,f,c
   803  001034  D7FE               	goto	u107
   804  001036  2E15               	decfsz	??_LCDPutChar& (0+255),f,c
   805  001038  D7FC               	goto	u107
   806  00103A  D000               	nop2	
   807                           
   808                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   809  00103C  0E80               	movlw	128
   810  00103E  6E13               	movwf	WritePort_BBSPI@a,c
   811  001040  0E12               	movlw	18
   812  001042  EC55  F009         	call	_WritePort_BBSPI
   813                           
   814                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(10000000/4000.0)));
   815  001046  0E04               	movlw	4
   816  001048  6E15               	movwf	??_LCDPutChar& (0+255),c
   817  00104A  0E3E               	movlw	62
   818  00104C                     u117:
   819  00104C  2EE8               	decfsz	wreg,f,c
   820  00104E  D7FE               	goto	u117
   821  001050  2E15               	decfsz	??_LCDPutChar& (0+255),f,c
   822  001052  D7FC               	goto	u117
   823                           
   824                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   825  001054  C016  F013         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   826  001058  0E13               	movlw	19
   827  00105A  EC55  F009         	call	_WritePort_BBSPI
   828                           
   829                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(10000000/4000.0)));
   830  00105E  0E04               	movlw	4
   831  001060  6E15               	movwf	??_LCDPutChar& (0+255),c
   832  001062  0E3E               	movlw	62
   833  001064                     u127:
   834  001064  2EE8               	decfsz	wreg,f,c
   835  001066  D7FE               	goto	u127
   836  001068  2E15               	decfsz	??_LCDPutChar& (0+255),f,c
   837  00106A  D7FC               	goto	u127
   838                           
   839                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   840  00106C  0EC0               	movlw	192
   841  00106E  6E13               	movwf	WritePort_BBSPI@a,c
   842  001070  0E12               	movlw	18
   843  001072  EC55  F009         	call	_WritePort_BBSPI
   844                           
   845                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(10000000/4000.0)));
   846  001076  0E04               	movlw	4
   847  001078  6E15               	movwf	??_LCDPutChar& (0+255),c
   848  00107A  0E3E               	movlw	62
   849  00107C                     u137:
   850  00107C  2EE8               	decfsz	wreg,f,c
   851  00107E  D7FE               	goto	u137
   852  001080  2E15               	decfsz	??_LCDPutChar& (0+255),f,c
   853  001082  D7FC               	goto	u137
   854                           
   855                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   856  001084  0E00               	movlw	0
   857  001086  6E13               	movwf	WritePort_BBSPI@a,c
   858  001088  0E12               	movlw	18
   859  00108A  EC55  F009         	call	_WritePort_BBSPI
   860  00108E  0012               	return		;funcret
   861  001090                     __end_of_LCDPutChar:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _LCDInit *****************
   872 ;; Defined at:
   873 ;;		line 45 in file "BBSPI_LCD.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    3
   894 ;; This function calls:
   895 ;;		_InitBBSPI
   896 ;;		_LCDPutInst
   897 ;;		_Port_BBSPIInit
   898 ;;		_WritePort_BBSPI
   899 ;; This function is called by:
   900 ;;		_ejemplo
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text8
   905  0010F6                     __ptext8:
   906                           	opt stack 0
   907  0010F6                     _LCDInit:
   908                           	opt stack 26
   909                           
   910                           ;BBSPI_LCD.c: 47: InitBBSPI();
   911                           
   912                           ;incstack = 0
   913  0010F6  EC78  F009         	call	_InitBBSPI	;wreg free
   914                           
   915                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   916  0010FA  9C97               	bcf	3991,6,c	;volatile
   917                           
   918                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   919  0010FC  9C8E               	bcf	3982,6,c	;volatile
   920                           
   921                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(10000000/4000.0)));
   922  0010FE  0E11               	movlw	17
   923  001100  6E17               	movwf	??_LCDInit& (0+255),c
   924  001102  0E3A               	movlw	58
   925  001104                     u147:
   926  001104  2EE8               	decfsz	wreg,f,c
   927  001106  D7FE               	goto	u147
   928  001108  2E17               	decfsz	??_LCDInit& (0+255),f,c
   929  00110A  D7FC               	goto	u147
   930  00110C  D000               	nop2	
   931                           
   932                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   933  00110E  8C8E               	bsf	3982,6,c	;volatile
   934                           
   935                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   936  001110  0E00               	movlw	0
   937  001112  EC48  F009         	call	_Port_BBSPIInit
   938                           
   939                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   940  001116  0E01               	movlw	1
   941  001118  EC48  F009         	call	_Port_BBSPIInit
   942                           
   943                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   944  00111C  0E00               	movlw	0
   945  00111E  6E13               	movwf	WritePort_BBSPI@a,c
   946  001120  0E12               	movlw	18
   947  001122  EC55  F009         	call	_WritePort_BBSPI
   948                           
   949                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(10000000/4000.0)));
   950  001126  0E31               	movlw	49
   951  001128  6E17               	movwf	??_LCDInit& (0+255),c
   952  00112A  0EB2               	movlw	178
   953  00112C                     u157:
   954  00112C  2EE8               	decfsz	wreg,f,c
   955  00112E  D7FE               	goto	u157
   956  001130  2E17               	decfsz	??_LCDInit& (0+255),f,c
   957  001132  D7FC               	goto	u157
   958  001134  D000               	nop2	
   959                           
   960                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   961  001136  0E32               	movlw	50
   962  001138  EC48  F008         	call	_LCDPutInst
   963                           
   964                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   965  00113C  0E3C               	movlw	60
   966  00113E  EC48  F008         	call	_LCDPutInst
   967                           
   968                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   969  001142  0E0C               	movlw	12
   970  001144  EC48  F008         	call	_LCDPutInst
   971                           
   972                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   973  001148  0E01               	movlw	1
   974  00114A  EC48  F008         	call	_LCDPutInst
   975                           
   976                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   977  00114E  0E06               	movlw	6
   978  001150  EC48  F008         	call	_LCDPutInst
   979  001154  0012               	return		;funcret
   980  001156                     __end_of_LCDInit:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           status	equ	0xFD8
   989                           
   990 ;; *************** function _Port_BBSPIInit *****************
   991 ;; Defined at:
   992 ;;		line 123 in file "BBSPI_LCD.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  port_dir        1    wreg     unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  port_dir        1    3[COMRAM] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        1 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    1
  1013 ;; This function calls:
  1014 ;;		_SendByteBBSPI
  1015 ;; This function is called by:
  1016 ;;		_LCDInit
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text9
  1021  001290                     __ptext9:
  1022                           	opt stack 0
  1023  001290                     _Port_BBSPIInit:
  1024                           	opt stack 27
  1025                           
  1026                           ;incstack = 0
  1027                           ;Port_BBSPIInit@port_dir stored from wreg
  1028  001290  6E13               	movwf	Port_BBSPIInit@port_dir,c
  1029                           
  1030                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
  1031  001292  9489               	bcf	3977,2,c	;volatile
  1032                           
  1033                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
  1034  001294  0E40               	movlw	64
  1035  001296  ECAB  F008         	call	_SendByteBBSPI
  1036                           
  1037                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
  1038  00129A  5013               	movf	Port_BBSPIInit@port_dir,w,c
  1039  00129C  ECAB  F008         	call	_SendByteBBSPI
  1040                           
  1041                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
  1042  0012A0  0E00               	movlw	0
  1043  0012A2  ECAB  F008         	call	_SendByteBBSPI
  1044                           
  1045                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
  1046  0012A6  8489               	bsf	3977,2,c	;volatile
  1047  0012A8  0012               	return		;funcret
  1048  0012AA                     __end_of_Port_BBSPIInit:
  1049                           	opt stack 0
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           status	equ	0xFD8
  1057                           
  1058 ;; *************** function _LCDPutInst *****************
  1059 ;; Defined at:
  1060 ;;		line 179 in file "BBSPI_LCD.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  ch              1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  ch              1    6[COMRAM] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:        2 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		_WritePort_BBSPI
  1083 ;; This function is called by:
  1084 ;;		_LCDInit
  1085 ;;		_ejemplo
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text10
  1090  001090                     __ptext10:
  1091                           	opt stack 0
  1092  001090                     _LCDPutInst:
  1093                           	opt stack 27
  1094                           
  1095                           ;incstack = 0
  1096                           ;LCDPutInst@ch stored from wreg
  1097  001090  6E16               	movwf	LCDPutInst@ch,c
  1098                           
  1099                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(10000000/4000.0)));
  1100  001092  0E11               	movlw	17
  1101  001094  6E15               	movwf	??_LCDPutInst& (0+255),c
  1102  001096  0E3A               	movlw	58
  1103  001098                     u167:
  1104  001098  2EE8               	decfsz	wreg,f,c
  1105  00109A  D7FE               	goto	u167
  1106  00109C  2E15               	decfsz	??_LCDPutInst& (0+255),f,c
  1107  00109E  D7FC               	goto	u167
  1108  0010A0  D000               	nop2	
  1109                           
  1110                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
  1111  0010A2  0E00               	movlw	0
  1112  0010A4  6E13               	movwf	WritePort_BBSPI@a,c
  1113  0010A6  0E12               	movlw	18
  1114  0010A8  EC55  F009         	call	_WritePort_BBSPI
  1115                           
  1116                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(10000000/4000.0)));
  1117  0010AC  0E04               	movlw	4
  1118  0010AE  6E15               	movwf	??_LCDPutInst& (0+255),c
  1119  0010B0  0E3E               	movlw	62
  1120  0010B2                     u177:
  1121  0010B2  2EE8               	decfsz	wreg,f,c
  1122  0010B4  D7FE               	goto	u177
  1123  0010B6  2E15               	decfsz	??_LCDPutInst& (0+255),f,c
  1124  0010B8  D7FC               	goto	u177
  1125                           
  1126                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
  1127  0010BA  C016  F013         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  1128  0010BE  0E13               	movlw	19
  1129  0010C0  EC55  F009         	call	_WritePort_BBSPI
  1130                           
  1131                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(10000000/4000.0)));
  1132  0010C4  0E04               	movlw	4
  1133  0010C6  6E15               	movwf	??_LCDPutInst& (0+255),c
  1134  0010C8  0E3E               	movlw	62
  1135  0010CA                     u187:
  1136  0010CA  2EE8               	decfsz	wreg,f,c
  1137  0010CC  D7FE               	goto	u187
  1138  0010CE  2E15               	decfsz	??_LCDPutInst& (0+255),f,c
  1139  0010D0  D7FC               	goto	u187
  1140                           
  1141                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
  1142  0010D2  0E40               	movlw	64
  1143  0010D4  6E13               	movwf	WritePort_BBSPI@a,c
  1144  0010D6  0E12               	movlw	18
  1145  0010D8  EC55  F009         	call	_WritePort_BBSPI
  1146                           
  1147                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(10000000/4000.0)));
  1148  0010DC  0E04               	movlw	4
  1149  0010DE  6E15               	movwf	??_LCDPutInst& (0+255),c
  1150  0010E0  0E3E               	movlw	62
  1151  0010E2                     u197:
  1152  0010E2  2EE8               	decfsz	wreg,f,c
  1153  0010E4  D7FE               	goto	u197
  1154  0010E6  2E15               	decfsz	??_LCDPutInst& (0+255),f,c
  1155  0010E8  D7FC               	goto	u197
  1156                           
  1157                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
  1158  0010EA  0E00               	movlw	0
  1159  0010EC  6E13               	movwf	WritePort_BBSPI@a,c
  1160  0010EE  0E12               	movlw	18
  1161  0010F0  EC55  F009         	call	_WritePort_BBSPI
  1162  0010F4  0012               	return		;funcret
  1163  0010F6                     __end_of_LCDPutInst:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function _WritePort_BBSPI *****************
  1174 ;; Defined at:
  1175 ;;		line 144 in file "BBSPI_LCD.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  port_add        1    wreg     unsigned char 
  1178 ;;  a               1    3[COMRAM] unsigned char 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  port_add        1    4[COMRAM] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1190 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;Total ram usage:        2 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    1
  1197 ;; This function calls:
  1198 ;;		_SendByteBBSPI
  1199 ;; This function is called by:
  1200 ;;		_LCDInit
  1201 ;;		_LCDPutChar
  1202 ;;		_LCDPutInst
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text11
  1207  0012AA                     __ptext11:
  1208                           	opt stack 0
  1209  0012AA                     _WritePort_BBSPI:
  1210                           	opt stack 26
  1211                           
  1212                           ;incstack = 0
  1213                           ;WritePort_BBSPI@port_add stored from wreg
  1214  0012AA  6E14               	movwf	WritePort_BBSPI@port_add,c
  1215                           
  1216                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
  1217  0012AC  9489               	bcf	3977,2,c	;volatile
  1218                           
  1219                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
  1220  0012AE  0E40               	movlw	64
  1221  0012B0  ECAB  F008         	call	_SendByteBBSPI
  1222                           
  1223                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
  1224  0012B4  5014               	movf	WritePort_BBSPI@port_add,w,c
  1225  0012B6  ECAB  F008         	call	_SendByteBBSPI
  1226                           
  1227                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
  1228  0012BA  5013               	movf	WritePort_BBSPI@a,w,c
  1229  0012BC  ECAB  F008         	call	_SendByteBBSPI
  1230                           
  1231                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
  1232  0012C0  8489               	bsf	3977,2,c	;volatile
  1233  0012C2  0012               	return		;funcret
  1234  0012C4                     __end_of_WritePort_BBSPI:
  1235                           	opt stack 0
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           status	equ	0xFD8
  1243                           
  1244 ;; *************** function _SendByteBBSPI *****************
  1245 ;; Defined at:
  1246 ;;		line 91 in file "BBSPI_LCD.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  output          1    wreg     unsigned char 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  output          1    0[COMRAM] unsigned char 
  1251 ;;  input           1    2[COMRAM] unsigned char 
  1252 ;;  bitcount        1    1[COMRAM] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;Total ram usage:        3 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_Port_BBSPIInit
  1272 ;;		_WritePort_BBSPI
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text12
  1277  001156                     __ptext12:
  1278                           	opt stack 0
  1279  001156                     _SendByteBBSPI:
  1280                           	opt stack 26
  1281                           
  1282                           ;incstack = 0
  1283                           ;SendByteBBSPI@output stored from wreg
  1284  001156  6E10               	movwf	SendByteBBSPI@output,c
  1285                           
  1286                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
  1287                           ;BBSPI_LCD.c: 94: unsigned char input = output;
  1288  001158  C010  F012         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  1289                           
  1290                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
  1291  00115C  0E00               	movlw	0
  1292  00115E  6E11               	movwf	SendByteBBSPI@bitcount,c
  1293  001160                     l796:
  1294  001160  0E07               	movlw	7
  1295  001162  6411               	cpfsgt	SendByteBBSPI@bitcount,c
  1296  001164  D001               	goto	l33
  1297  001166  0012               	return	
  1298  001168                     l33:
  1299                           
  1300                           ;BBSPI_LCD.c: 97: {
  1301                           ;BBSPI_LCD.c: 99: if(output & 0x80)
  1302  001168  AE10               	btfss	SendByteBBSPI@output,7,c
  1303  00116A  D002               	goto	l35
  1304                           
  1305                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
  1306  00116C  8A8B               	bsf	3979,5,c	;volatile
  1307  00116E  D001               	goto	l36
  1308  001170                     l35:
  1309                           
  1310                           ;BBSPI_LCD.c: 101: else
  1311                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
  1312  001170  9A8B               	bcf	3979,5,c	;volatile
  1313  001172                     l36:
  1314                           
  1315                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
  1316  001172  A88B               	btfss	3979,4,c	;volatile
  1317  001174  D003               	goto	l804
  1318                           
  1319                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
  1320  001176  80D8               	bsf	status,0,c
  1321  001178  3612               	rlcf	SendByteBBSPI@input,f,c
  1322  00117A  D003               	goto	l806
  1323  00117C                     l804:
  1324                           
  1325                           ;BBSPI_LCD.c: 106: else
  1326                           ;BBSPI_LCD.c: 107: input = input << 1;
  1327  00117C  5012               	movf	SendByteBBSPI@input,w,c
  1328  00117E  2412               	addwf	SendByteBBSPI@input,w,c
  1329  001180  6E12               	movwf	SendByteBBSPI@input,c
  1330  001182                     l806:
  1331                           
  1332                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
  1333  001182  868B               	bsf	3979,3,c	;volatile
  1334                           
  1335                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
  1336  001184  F000               	nop	
  1337  001186  F000               	nop	
  1338  001188  F000               	nop	
  1339  00118A  F000               	nop	
  1340  00118C  F000               	nop	
  1341  00118E  F000               	nop	
  1342                           
  1343                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
  1344  001190  F000               	nop	
  1345  001192  F000               	nop	
  1346  001194  F000               	nop	
  1347  001196  F000               	nop	
  1348  001198  F000               	nop	
  1349  00119A  F000               	nop	
  1350                           
  1351                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
  1352  00119C  968B               	bcf	3979,3,c	;volatile
  1353                           
  1354                           ;BBSPI_LCD.c: 112: output <<= 1;
  1355  00119E  90D8               	bcf	status,0,c
  1356  0011A0  3610               	rlcf	SendByteBBSPI@output,f,c
  1357  0011A2  2A11               	incf	SendByteBBSPI@bitcount,f,c
  1358  0011A4  D7DD               	goto	l796
  1359  0011A6                     __end_of_SendByteBBSPI:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function _InitBBSPI *****************
  1370 ;; Defined at:
  1371 ;;		line 70 in file "BBSPI_LCD.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		None
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_LCDInit
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text13
  1399  0012F0                     __ptext13:
  1400                           	opt stack 0
  1401  0012F0                     _InitBBSPI:
  1402                           	opt stack 28
  1403                           
  1404                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
  1405                           
  1406                           ;incstack = 0
  1407  0012F0  9492               	bcf	3986,2,c	;volatile
  1408                           
  1409                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
  1410  0012F2  8894               	bsf	3988,4,c	;volatile
  1411                           
  1412                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
  1413  0012F4  9A94               	bcf	3988,5,c	;volatile
  1414                           
  1415                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
  1416  0012F6  9694               	bcf	3988,3,c	;volatile
  1417                           
  1418                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
  1419  0012F8  8489               	bsf	3977,2,c	;volatile
  1420                           
  1421                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
  1422  0012FA  888B               	bsf	3979,4,c	;volatile
  1423                           
  1424                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
  1425  0012FC  9A8B               	bcf	3979,5,c	;volatile
  1426                           
  1427                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
  1428  0012FE  968B               	bcf	3979,3,c	;volatile
  1429  001300  0012               	return		;funcret
  1430  001302                     __end_of_InitBBSPI:
  1431                           	opt stack 0
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _InitConf *****************
  1441 ;; Defined at:
  1442 ;;		line 68 in file "Modules.h"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    1
  1463 ;; This function calls:
  1464 ;;		_ClockSetup
  1465 ;;		_DigitalIO
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text14
  1472  001326                     __ptext14:
  1473                           	opt stack 0
  1474  001326                     _InitConf:
  1475                           	opt stack 29
  1476                           
  1477                           ;Modules.h: 70: ClockSetup();
  1478                           
  1479                           ;incstack = 0
  1480  001326  EC98  F009         	call	_ClockSetup	;wreg free
  1481                           
  1482                           ;Modules.h: 71: DigitalIO();
  1483  00132A  ECD3  F008         	call	_DigitalIO	;wreg free
  1484  00132E  0012               	return		;funcret
  1485  001330                     __end_of_InitConf:
  1486                           	opt stack 0
  1487                           tblptru	equ	0xFF8
  1488                           tblptrh	equ	0xFF7
  1489                           tblptrl	equ	0xFF6
  1490                           tablat	equ	0xFF5
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _DigitalIO *****************
  1496 ;; Defined at:
  1497 ;;		line 40 in file "Modules.h"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_InitConf
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text15
  1525  0011A6                     __ptext15:
  1526                           	opt stack 0
  1527  0011A6                     _DigitalIO:
  1528                           	opt stack 29
  1529                           
  1530                           ;Modules.h: 42: LATA=0;
  1531                           
  1532                           ;incstack = 0
  1533  0011A6  0E00               	movlw	0
  1534  0011A8  6E89               	movwf	3977,c	;volatile
  1535                           
  1536                           ;Modules.h: 43: PORTA=0;
  1537  0011AA  0E00               	movlw	0
  1538  0011AC  6E80               	movwf	3968,c	;volatile
  1539                           
  1540                           ;Modules.h: 44: TRISA=0X20;
  1541  0011AE  0E20               	movlw	32
  1542  0011B0  6E92               	movwf	3986,c	;volatile
  1543                           
  1544                           ;Modules.h: 45: ADCON1=0X0F;
  1545  0011B2  0E0F               	movlw	15
  1546  0011B4  6EC1               	movwf	4033,c	;volatile
  1547                           
  1548                           ;Modules.h: 47: LATB=0;
  1549  0011B6  0E00               	movlw	0
  1550  0011B8  6E8A               	movwf	3978,c	;volatile
  1551                           
  1552                           ;Modules.h: 48: PORTB=0;
  1553  0011BA  0E00               	movlw	0
  1554  0011BC  6E81               	movwf	3969,c	;volatile
  1555                           
  1556                           ;Modules.h: 49: TRISB=0X01;
  1557  0011BE  0E01               	movlw	1
  1558  0011C0  6E93               	movwf	3987,c	;volatile
  1559                           
  1560                           ;Modules.h: 51: LATD=0;
  1561  0011C2  0E00               	movlw	0
  1562  0011C4  6E8C               	movwf	3980,c	;volatile
  1563                           
  1564                           ;Modules.h: 52: PORTD=0;
  1565  0011C6  0E00               	movlw	0
  1566  0011C8  6E83               	movwf	3971,c	;volatile
  1567                           
  1568                           ;Modules.h: 53: TRISD=0;
  1569  0011CA  0E00               	movlw	0
  1570  0011CC  6E95               	movwf	3989,c	;volatile
  1571                           
  1572                           ;Modules.h: 54: PSPCON=0;
  1573  0011CE  0E00               	movlw	0
  1574  0011D0  6EB0               	movwf	4016,c	;volatile
  1575                           
  1576                           ;Modules.h: 57: LATC = 0x00;
  1577  0011D2  0E00               	movlw	0
  1578  0011D4  6E8B               	movwf	3979,c	;volatile
  1579                           
  1580                           ;Modules.h: 58: TRISC = 0xD7;
  1581  0011D6  0ED7               	movlw	215
  1582  0011D8  6E94               	movwf	3988,c	;volatile
  1583                           
  1584                           ;Modules.h: 61: LATE = 0x00;
  1585  0011DA  0E00               	movlw	0
  1586  0011DC  6E8D               	movwf	3981,c	;volatile
  1587                           
  1588                           ;Modules.h: 62: TRISE = 0x07;
  1589  0011DE  0E07               	movlw	7
  1590  0011E0  6E96               	movwf	3990,c	;volatile
  1591                           
  1592                           ;Modules.h: 64: INTCON2bits.nRBPU = 0x01;
  1593  0011E2  8EF1               	bsf	intcon2,7,c	;volatile
  1594  0011E4  0012               	return		;funcret
  1595  0011E6                     __end_of_DigitalIO:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           intcon2	equ	0xFF1
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _ClockSetup *****************
  1607 ;; Defined at:
  1608 ;;		line 30 in file "Modules.h"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_InitConf
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text16
  1636  001330                     __ptext16:
  1637                           	opt stack 0
  1638  001330                     _ClockSetup:
  1639                           	opt stack 29
  1640                           
  1641                           ;Modules.h: 32: OSCCON=0x00 ;
  1642                           
  1643                           ;incstack = 0
  1644  001330  0E00               	movlw	0
  1645  001332  6ED3               	movwf	4051,c	;volatile
  1646                           
  1647                           ;Modules.h: 33: OSCTUNE = 0x00;
  1648  001334  0E00               	movlw	0
  1649  001336  6E9B               	movwf	3995,c	;volatile
  1650  001338  0012               	return		;funcret
  1651  00133A                     __end_of_ClockSetup:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           intcon2	equ	0xFF1
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function _EUSART1_Initialize *****************
  1663 ;; Defined at:
  1664 ;;		line 25 in file "eusart1.h"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text17
  1692  0012C4                     __ptext17:
  1693                           	opt stack 0
  1694  0012C4                     _EUSART1_Initialize:
  1695                           	opt stack 30
  1696                           
  1697                           ;eusart1.h: 27: RCSTA = 0x80;
  1698                           
  1699                           ;incstack = 0
  1700  0012C4  0E80               	movlw	128
  1701  0012C6  6EAB               	movwf	4011,c	;volatile
  1702                           
  1703                           ;eusart1.h: 28: TXSTA = 0x26;
  1704  0012C8  0E26               	movlw	38
  1705  0012CA  6EAC               	movwf	4012,c	;volatile
  1706                           
  1707                           ;eusart1.h: 29: SPBRG = 64;
  1708  0012CC  0E40               	movlw	64
  1709  0012CE  6EAF               	movwf	4015,c	;volatile
  1710                           
  1711                           ;eusart1.h: 30: SPBRGH = 0x00;
  1712  0012D0  0E00               	movlw	0
  1713  0012D2  6E7F               	movwf	3967,c	;volatile
  1714                           
  1715                           ;eusart1.h: 31: TXREG = 0x00;
  1716  0012D4  0E00               	movlw	0
  1717  0012D6  6EAD               	movwf	4013,c	;volatile
  1718                           
  1719                           ;eusart1.h: 32: RCREG = 0x00;
  1720  0012D8  0E00               	movlw	0
  1721  0012DA  6EAE               	movwf	4014,c	;volatile
  1722  0012DC  0012               	return		;funcret
  1723  0012DE                     __end_of_EUSART1_Initialize:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           intcon2	equ	0xFF1
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           status	equ	0xFD8
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           intcon2	equ	0xFF1
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           status	equ	0xFD8
  1741                           
  1742                           	psect	rparam
  1743  0000                     tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           intcon2	equ	0xFF1
  1748                           postinc0	equ	0xFEE
  1749                           wreg	equ	0xFE8
  1750                           status	equ	0xFD8


Data Sizes:
    Strings     40
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_3(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[7]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _test_uart->_printf
    _printf->_putch
    _putch->_EUSART1_Write
    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3324
                 _EUSART1_Initialize
                           _InitConf
                            _ejemplo
                          _test_uart
 ---------------------------------------------------------------------------------
 (1) _test_uart                                            0     0      0     140
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              18    16      2     140
                                              2 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                              7 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1547
                                              7 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _InitConf
     _ClockSetup
     _DigitalIO
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _test_uart
     _printf
       _putch
         _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      19       1       26.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      32        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Jan 21 15:23:15 2017

                         l33 1168                           l35 1170                  ?_LCDPutChar 0010  
                         l36 1172                  ?_LCDPutInst 0010                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000                 __CFG_CP4$OFF 000000  
               __CFG_CP5$OFF 000000        SendByteBBSPI@bitcount 0011                 __CFG_CP6$OFF 000000  
               __CFG_CP7$OFF 000000                          l123 1312                          l804 117C  
                        l806 1182                          l796 1160                 __CFG_CPB$OFF 000000  
                        u107 1032                          u117 104C                          u127 1064  
                        u137 107C                          u147 1104                          u157 112C  
                        u167 1098                          u177 10B2                 __CFG_CPD$OFF 000000  
                        u187 10CA                          u197 10E2                          wreg 000FE8  
               __CFG_MODE$MC 000000              __end_of_LCDInit 1156                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         l1024 1268                         l1032 121C  
                       l1034 1222                         l1028 127C                         l1048 12EA  
                       STR_1 1016                         STR_2 1022                         STR_3 1001  
                       _LATA 000F89                         _LATB 000F8A                         _LATC 000F8B  
                       _LATD 000F8C                         _LATE 000F8D                _EUSART1_Write 1310  
                       _decN 0003                         _cenN 0001                         _main 12DE  
                       _milN 0005             ?_WritePort_BBSPI 0013                         start 0000  
         __size_of_LCDPutStr 002A                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000010                   _ClockSetup 1330                __CFG_WAIT$OFF 000000  
                      ?_main 0010                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTD 000F83                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TXREG 000FAD                        _TXSTA 000FAC                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000                __CFG_WRT4$OFF 000000                __CFG_WRT5$OFF 000000  
              __CFG_WRT6$OFF 000000                __CFG_WRT7$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
            __end_of_ejemplo 1266               __CFG_EBTR3$OFF 000000               __CFG_EBTR4$OFF 000000  
             __CFG_EBTR5$OFF 000000               __CFG_EBTR6$OFF 000000               __CFG_EBTR7$OFF 000000  
              __CFG_WRTB$OFF 000000      __size_of_Port_BBSPIInit 001A                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000                        _unitN 0007  
                      _putch 131C                        _volti 000B                        _volts 000D  
             ?_EUSART1_Write 0010               __CFG_BOREN$OFF 000000                        tablat 000FF5  
        __size_of_LCDPutChar 0066          __size_of_LCDPutInst 0066                        status 000FD8  
            __initialization 11E6   __end_of_EUSART1_Initialize 12DE                 __end_of_main 12F0  
           __end_of_InitConf 1330                       ??_main 0019           __size_of_DigitalIO 0040  
              __activetblptr 000001                    ??_LCDInit 0017                 LCDPutChar@ch 0016  
          __end_of_LCDPutStr 1290                       _ADCON1 000FC1           __size_of_InitBBSPI 0012  
               LCDPutInst@ch 0016                       ?_putch 0010              __CFG_BBSIZ$BB2K 000000  
                     _OSCCON 000FD3                       _SPBRGH 000F7F                       _PSPCON 000FB0  
               LCDPutStr@ptr 0017               __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000  
                ?_ClockSetup 0010                       clear_0 11FE                       _printf 1212  
                  ??_ejemplo 0019                 __pdataCOMRAM 0019       Port_BBSPIInit@port_dir 0013  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8              ??_EUSART1_Write 0010                   __accesstop 0060  
    __end_of__initialization 1204            __end_of_DigitalIO 11E6                ___rparam_used 000001  
     __size_of_SendByteBBSPI 0050               __pcstackCOMRAM 0010            __end_of_InitBBSPI 1302  
               ??_LCDPutChar 0015                 ??_LCDPutInst 0015                __end_of_putch 1326  
             _Port_BBSPIInit 1290                      ??_putch 0011                    ?_InitConf 0010  
        __size_of_ClockSetup 000A           __end_of_LCDPutChar 1090           __end_of_LCDPutInst 10F6  
                    ?_printf 0012       __end_of_Port_BBSPIInit 12AA                      _LCDInit 10F6  
              _SendByteBBSPI 1156           __size_of_test_uart 000E                      _OSCTUNE 000F9B  
                 ??_InitConf 0010             WritePort_BBSPI@a 0013                      __Hparam 0000  
                    __Lparam 0000     __size_of_WritePort_BBSPI 001A                 __psmallconst 1000  
                    __pcinit 11E6                      __ramtop 1000                      __ptext0 12DE  
                    __ptext1 1302                      __ptext2 1212                      __ptext3 131C  
                    __ptext4 1310                      __ptext5 123C                      __ptext6 1266  
                    __ptext7 102A                      __ptext8 10F6                      __ptext9 1290  
                    _ejemplo 123C              __size_of_printf 002A               ?_SendByteBBSPI 0010  
            ?_Port_BBSPIInit 0010           _EUSART1_Initialize 12C4                    _LCDPutStr 1266  
                    _voltage 0009         end_of_initialization 1204          ?_EUSART1_Initialize 0010  
          __end_of_test_uart 1310                      printf@c 0016                      printf@f 0012  
                    postinc0 000FEE                 ??_ClockSetup 0010         ??_EUSART1_Initialize 0010  
                  _TRISAbits 000F92                    _TRISCbits 000F94                    _TRISFbits 000F97  
                 ?_LCDPutStr 0017          EUSART1_Write@txData 0010          SendByteBBSPI@output 0010  
         __end_of_ClockSetup 133A                    _DigitalIO 11A6                __pidataCOMRAM 133A  
            ??_SendByteBBSPI 0010                    _InitBBSPI 12F0               __end_of_printf 123C  
          ??_WritePort_BBSPI 0014          start_initialization 11E6                  putch@txData 0011  
      __end_of_EUSART1_Write 131C            __size_of_InitConf 000A                   ?_DigitalIO 0010  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 0014                   ?_InitBBSPI 0010  
                   ?_LCDInit 0010                  __pbssCOMRAM 0001                  ??_LCDPutStr 0019  
          __CFG_CCP2MX$PORTC 000000             ??_Port_BBSPIInit 0013                     ?_ejemplo 0010  
                __smallconst 1000               __size_of_putch 000A                     _LATAbits 000F89  
                   _LATCbits 000F8B                     _LATFbits 000F8E                     _PIR1bits 000F9E  
      __CFG_DATABW$DATA16BIT 000000                  ??_DigitalIO 0010             __CFG_WDTPS$32768 000000  
                  _test_uart 1302            __CFG_ECCPMX$PORTE 000000                  ??_InitBBSPI 0010  
         SendByteBBSPI@input 0012             __size_of_LCDInit 0060                  _INTCON2bits 000FF1  
                   _InitConf 1326                     __Hrparam 0000                     __Lrparam 0000  
               __Lsmallconst 1000              _WritePort_BBSPI 12AA                   ?_test_uart 0010  
__size_of_EUSART1_Initialize 001A             __size_of_ejemplo 002A                     _asciiLCD 000F  
                   __ptext10 1090                     __ptext11 12AA                     __ptext12 1156  
                   __ptext13 12F0                     __ptext14 1326                     __ptext15 11A6  
                   __ptext16 1330                     __ptext17 12C4                __size_of_main 0012  
                   _recibido 0019                   _LCDPutChar 102A                   _LCDPutInst 1090  
      __end_of_SendByteBBSPI 11A6        __CFG_ADDRBW$ADDR20BIT 000000      __end_of_WritePort_BBSPI 12C4  
                   printf@ap 0014                  ??_test_uart 0017       __size_of_EUSART1_Write 000C  
    WritePort_BBSPI@port_add 0014  
