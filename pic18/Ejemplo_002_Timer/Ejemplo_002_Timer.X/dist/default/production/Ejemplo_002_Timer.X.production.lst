

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Jan 15 21:24:02 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	idataCOMRAM
    31  00132A                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for _Position
    35  00132A  32                 	db	50
    36  0000                     _ADCON1	set	4033
    37  0000                     _LATA	set	3977
    38  0000                     _LATAbits	set	3977
    39  0000                     _LATB	set	3978
    40  0000                     _LATCbits	set	3979
    41  0000                     _LATD	set	3980
    42  0000                     _LATDbits	set	3980
    43  0000                     _LATFbits	set	3982
    44  0000                     _OSCCON	set	4051
    45  0000                     _OSCTUNE	set	3995
    46  0000                     _PIE1	set	3997
    47  0000                     _PIR1	set	3998
    48  0000                     _PORTA	set	3968
    49  0000                     _PORTB	set	3969
    50  0000                     _PORTD	set	3971
    51  0000                     _PR2	set	4043
    52  0000                     _PSPCON	set	4016
    53  0000                     _T2CON	set	4042
    54  0000                     _TMR2	set	4044
    55  0000                     _TRISA	set	3986
    56  0000                     _TRISAbits	set	3986
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISCbits	set	3988
    59  0000                     _TRISD	set	3989
    60  0000                     _TRISDbits	set	3989
    61  0000                     _TRISFbits	set	3991
    62  0000                     _TMR2IF	set	31985
    63                           
    64                           	psect	smallconst
    65  001000                     __psmallconst:
    66                           	opt stack 0
    67  001000  00                 	db	0
    68  001001                     STR_1:
    69  001001  45                 	db	69	;'E'
    70  001002  6A                 	db	106	;'j'
    71  001003  65                 	db	101	;'e'
    72  001004  6D                 	db	109	;'m'
    73  001005  70                 	db	112	;'p'
    74  001006  6C                 	db	108	;'l'
    75  001007  6F                 	db	111	;'o'
    76  001008  5F                 	db	95	;'_'
    77  001009  30                 	db	48	;'0'
    78  00100A  30                 	db	48	;'0'
    79  00100B  32                 	db	50	;'2'
    80  00100C  00                 	db	0
    81  00100D                     STR_2:
    82  00100D  54                 	db	84	;'T'
    83  00100E  69                 	db	105	;'i'
    84  00100F  6D                 	db	109	;'m'
    85  001010  65                 	db	101	;'e'
    86  001011  72                 	db	114	;'r'
    87  001012  20                 	db	32
    88  001013  53                 	db	83	;'S'
    89  001014  65                 	db	101	;'e'
    90  001015  72                 	db	114	;'r'
    91  001016  76                 	db	118	;'v'
    92  001017  6F                 	db	111	;'o'
    93  001018  00                 	db	0
    94                           
    95                           ; #config settings
    96  001019  00                 	db	0	; dummy byte at the end
    97  0000                     
    98                           	psect	cinit
    99  00126C                     __pcinit:
   100                           	opt stack 0
   101  00126C                     start_initialization:
   102                           	opt stack 0
   103  00126C                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Initialize objects allocated to COMRAM (1 bytes)
   107                           ; load TBLPTR registers with __pidataCOMRAM
   108  00126C  0E2A               	movlw	low __pidataCOMRAM
   109  00126E  6EF6               	movwf	tblptrl,c
   110  001270  0E13               	movlw	high __pidataCOMRAM
   111  001272  6EF7               	movwf	tblptrh,c
   112  001274  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   113  001276  6EF8               	movwf	tblptru,c
   114  001278  0009               	tblrd		*+	;fetch initializer
   115  00127A  CFF5 F00A          	movff	tablat,__pdataCOMRAM
   116  00127E                     end_of_initialization:
   117                           	opt stack 0
   118  00127E                     __end_of__initialization:
   119                           	opt stack 0
   120  00127E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   121  001280  6EF8               	movwf	tblptru,c
   122  001282  0E10               	movlw	high __Lsmallconst
   123  001284  6EF7               	movwf	tblptrh,c
   124  001286  0100               	movlb	0
   125  001288  EF6A  F009         	goto	_main	;jump to C main() function
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           tblptrl	equ	0xFF6
   129                           tablat	equ	0xFF5
   130                           
   131                           	psect	dataCOMRAM
   132  00000A                     __pdataCOMRAM:
   133                           	opt stack 0
   134  00000A                     _Position:
   135                           	opt stack 0
   136  00000A                     	ds	1
   137                           tblptru	equ	0xFF8
   138                           tblptrh	equ	0xFF7
   139                           tblptrl	equ	0xFF6
   140                           tablat	equ	0xFF5
   141                           
   142                           	psect	cstackCOMRAM
   143  000001                     __pcstackCOMRAM:
   144                           	opt stack 0
   145  000001                     ??_SendServo:
   146  000001                     SendByteBBSPI@output:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x0
   150  000001                     	ds	1
   151  000002                     SendByteBBSPI@bitcount:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x1
   155  000002                     	ds	1
   156  000003                     SendByteBBSPI@input:
   157                           	opt stack 0
   158                           
   159                           ; 1 bytes @ 0x2
   160  000003                     	ds	1
   161  000004                     SendServo@TimeP:
   162                           	opt stack 0
   163  000004                     Port_BBSPIInit@port_dir:
   164                           	opt stack 0
   165  000004                     WritePort_BBSPI@a:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x3
   169  000004                     	ds	1
   170  000005                     WritePort_BBSPI@port_add:
   171                           	opt stack 0
   172  000005                     SendServo@PostIFG:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x4
   176  000005                     	ds	1
   177  000006                     ??_LCDPutInst:
   178  000006                     ??_LCDPutChar:
   179                           
   180                           ; 1 bytes @ 0x5
   181  000006                     	ds	1
   182  000007                     LCDPutChar@ch:
   183                           	opt stack 0
   184  000007                     LCDPutInst@ch:
   185                           	opt stack 0
   186  000007                     SendServo@Count:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x6
   190  000007                     	ds	1
   191  000008                     ??_LCDInit:
   192  000008                     LCDPutStr@ptr:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x7
   196  000008                     	ds	1
   197  000009                     
   198                           ; 1 bytes @ 0x8
   199  000009                     	ds	1
   200  00000A                     tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           
   205                           ; 1 bytes @ 0x9
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 32 in file "main.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   229 ;;Total ram usage:        0 bytes
   230 ;; Hardware stack levels required when called:    5
   231 ;; This function calls:
   232 ;;		_InitConf
   233 ;;		_InitServo
   234 ;;		_TestServo
   235 ;;		_ejemplo
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text0
   242  0012D4                     __ptext0:
   243                           	opt stack 0
   244  0012D4                     _main:
   245                           	opt stack 26
   246                           
   247                           ;main.c: 34: InitConf();
   248                           
   249                           ;incstack = 0
   250  0012D4  EC8B  F009         	call	_InitConf	;wreg free
   251                           
   252                           ;main.c: 36: ejemplo();
   253  0012D8  EC0C  F009         	call	_ejemplo	;wreg free
   254                           
   255                           ;main.c: 37: InitServo();
   256  0012DC  EC7C  F009         	call	_InitServo	;wreg free
   257  0012E0                     l1068:
   258                           
   259                           ;main.c: 40: {
   260                           ;main.c: 42: TestServo();
   261  0012E0  EC85  F009         	call	_TestServo	;wreg free
   262  0012E4  D7FD               	goto	l1068
   263  0012E6                     __end_of_main:
   264                           	opt stack 0
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           
   270 ;; *************** function _ejemplo *****************
   271 ;; Defined at:
   272 ;;		line 14 in file "Ejemplo.h"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels used:    1
   292 ;; Hardware stack levels required when called:    4
   293 ;; This function calls:
   294 ;;		_LCDInit
   295 ;;		_LCDPutInst
   296 ;;		_LCDPutStr
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text1
   303  001218                     __ptext1:
   304                           	opt stack 0
   305  001218                     _ejemplo:
   306                           	opt stack 26
   307                           
   308                           ;Ejemplo.h: 16: LCDInit();
   309                           
   310                           ;incstack = 0
   311  001218  EC48  F008         	call	_LCDInit	;wreg free
   312                           
   313                           ;Ejemplo.h: 17: LCDPutInst(0x80);
   314  00121C  0E80               	movlw	128
   315  00121E  ECA1  F008         	call	_LCDPutInst
   316                           
   317                           ;Ejemplo.h: 18: LCDPutStr("Ejemplo_002");
   318  001222  0E01               	movlw	low STR_1
   319  001224  6E08               	movwf	LCDPutStr@ptr,c
   320  001226  0E10               	movlw	high STR_1
   321  001228  6E09               	movwf	LCDPutStr@ptr+1,c
   322  00122A  EC21  F009         	call	_LCDPutStr	;wreg free
   323                           
   324                           ;Ejemplo.h: 19: LCDPutInst(0xC0);
   325  00122E  0EC0               	movlw	192
   326  001230  ECA1  F008         	call	_LCDPutInst
   327                           
   328                           ;Ejemplo.h: 20: LCDPutStr("Timer Servo");
   329  001234  0E0D               	movlw	low STR_2
   330  001236  6E08               	movwf	LCDPutStr@ptr,c
   331  001238  0E10               	movlw	high STR_2
   332  00123A  6E09               	movwf	LCDPutStr@ptr+1,c
   333  00123C  EC21  F009         	call	_LCDPutStr	;wreg free
   334  001240  0012               	return		;funcret
   335  001242                     __end_of_ejemplo:
   336                           	opt stack 0
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           
   342 ;; *************** function _LCDPutStr *****************
   343 ;; Defined at:
   344 ;;		line 198 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
   347 ;;		 -> STR_2(12), STR_1(12), 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    3
   366 ;; This function calls:
   367 ;;		_LCDPutChar
   368 ;; This function is called by:
   369 ;;		_ejemplo
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text2
   374  001242                     __ptext2:
   375                           	opt stack 0
   376  001242                     _LCDPutStr:
   377                           	opt stack 26
   378                           
   379                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   380                           
   381                           ;incstack = 0
   382  001242  D00A               	goto	l1054
   383  001244                     l1050:
   384  001244  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   385  001248  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   386  00124C                     	if	0	;tblptru may be non-zero
   387  00124C                     	endif
   388  00124C                     	if	0	;tblptru may be non-zero
   389  00124C                     	endif
   390  00124C  0008               	tblrd		*
   391  00124E  50F5               	movf	tablat,w,c
   392  001250  EC77  F008         	call	_LCDPutChar
   393  001254  4A08               	infsnz	LCDPutStr@ptr,f,c
   394  001256  2A09               	incf	LCDPutStr@ptr+1,f,c
   395  001258                     l1054:
   396  001258  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   397  00125C  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   398  001260                     	if	0	;tblptru may be non-zero
   399  001260                     	endif
   400  001260                     	if	0	;tblptru may be non-zero
   401  001260                     	endif
   402  001260  0008               	tblrd		*
   403  001262  50F5               	movf	tablat,w,c
   404  001264  0900               	iorlw	0
   405  001266  B4D8               	btfsc	status,2,c
   406  001268  0012               	return	
   407  00126A  D7EC               	goto	l1050
   408  00126C                     __end_of_LCDPutStr:
   409                           	opt stack 0
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           status	equ	0xFD8
   415                           
   416 ;; *************** function _LCDPutChar *****************
   417 ;; Defined at:
   418 ;;		line 160 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  ch              1    wreg     unsigned char 
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  ch              1    6[COMRAM] unsigned char 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;Total ram usage:        2 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    2
   439 ;; This function calls:
   440 ;;		_WritePort_BBSPI
   441 ;; This function is called by:
   442 ;;		_LCDPutStr
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text3
   447  0010EE                     __ptext3:
   448                           	opt stack 0
   449  0010EE                     _LCDPutChar:
   450                           	opt stack 26
   451                           
   452                           ;incstack = 0
   453                           ;LCDPutChar@ch stored from wreg
   454  0010EE  6E07               	movwf	LCDPutChar@ch,c
   455                           
   456                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(4000000/4000.0)));
   457  0010F0  0E07               	movlw	7
   458  0010F2  6E06               	movwf	??_LCDPutChar& (0+255),c
   459  0010F4  0E7D               	movlw	125
   460  0010F6                     u177:
   461  0010F6  2EE8               	decfsz	wreg,f,c
   462  0010F8  D7FE               	goto	u177
   463  0010FA  2E06               	decfsz	??_LCDPutChar& (0+255),f,c
   464  0010FC  D7FC               	goto	u177
   465  0010FE  F000               	nop	
   466                           
   467                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   468  001100  0E80               	movlw	128
   469  001102  6E04               	movwf	WritePort_BBSPI@a,c
   470  001104  0E12               	movlw	18
   471  001106  EC53  F009         	call	_WritePort_BBSPI
   472                           
   473                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(4000000/4000.0)));
   474  00110A  0EFA               	movlw	250
   475  00110C                     u187:
   476  00110C  F000               	nop	
   477  00110E  2EE8               	decfsz	wreg,f,c
   478  001110  D7FD               	goto	u187
   479                           
   480                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   481  001112  C007  F004         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   482  001116  0E13               	movlw	19
   483  001118  EC53  F009         	call	_WritePort_BBSPI
   484                           
   485                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(4000000/4000.0)));
   486  00111C  0EFA               	movlw	250
   487  00111E                     u197:
   488  00111E  F000               	nop	
   489  001120  2EE8               	decfsz	wreg,f,c
   490  001122  D7FD               	goto	u197
   491                           
   492                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   493  001124  0EC0               	movlw	192
   494  001126  6E04               	movwf	WritePort_BBSPI@a,c
   495  001128  0E12               	movlw	18
   496  00112A  EC53  F009         	call	_WritePort_BBSPI
   497                           
   498                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(4000000/4000.0)));
   499  00112E  0EFA               	movlw	250
   500  001130                     u207:
   501  001130  F000               	nop	
   502  001132  2EE8               	decfsz	wreg,f,c
   503  001134  D7FD               	goto	u207
   504                           
   505                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   506  001136  0E00               	movlw	0
   507  001138  6E04               	movwf	WritePort_BBSPI@a,c
   508  00113A  0E12               	movlw	18
   509  00113C  EC53  F009         	call	_WritePort_BBSPI
   510  001140  0012               	return		;funcret
   511  001142                     __end_of_LCDPutChar:
   512                           	opt stack 0
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           wreg	equ	0xFE8
   518                           status	equ	0xFD8
   519                           
   520 ;; *************** function _LCDInit *****************
   521 ;; Defined at:
   522 ;;		line 45 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    3
   543 ;; This function calls:
   544 ;;		_InitBBSPI
   545 ;;		_LCDPutInst
   546 ;;		_Port_BBSPIInit
   547 ;;		_WritePort_BBSPI
   548 ;; This function is called by:
   549 ;;		_ejemplo
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text4
   554  001090                     __ptext4:
   555                           	opt stack 0
   556  001090                     _LCDInit:
   557                           	opt stack 26
   558                           
   559                           ;BBSPI_LCD.c: 47: InitBBSPI();
   560                           
   561                           ;incstack = 0
   562  001090  EC73  F009         	call	_InitBBSPI	;wreg free
   563                           
   564                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   565  001094  9C97               	bcf	3991,6,c	;volatile
   566                           
   567                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   568  001096  9C8E               	bcf	3982,6,c	;volatile
   569                           
   570                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(4000000/4000.0)));
   571  001098  0E07               	movlw	7
   572  00109A  6E08               	movwf	??_LCDInit& (0+255),c
   573  00109C  0E7D               	movlw	125
   574  00109E                     u217:
   575  00109E  2EE8               	decfsz	wreg,f,c
   576  0010A0  D7FE               	goto	u217
   577  0010A2  2E08               	decfsz	??_LCDInit& (0+255),f,c
   578  0010A4  D7FC               	goto	u217
   579  0010A6  F000               	nop	
   580                           
   581                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   582  0010A8  8C8E               	bsf	3982,6,c	;volatile
   583                           
   584                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   585  0010AA  0E00               	movlw	0
   586  0010AC  EC46  F009         	call	_Port_BBSPIInit
   587                           
   588                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   589  0010B0  0E01               	movlw	1
   590  0010B2  EC46  F009         	call	_Port_BBSPIInit
   591                           
   592                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   593  0010B6  0E00               	movlw	0
   594  0010B8  6E04               	movwf	WritePort_BBSPI@a,c
   595  0010BA  0E12               	movlw	18
   596  0010BC  EC53  F009         	call	_WritePort_BBSPI
   597                           
   598                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(4000000/4000.0)));
   599  0010C0  0E14               	movlw	20
   600  0010C2  6E08               	movwf	??_LCDInit& (0+255),c
   601  0010C4  0E7A               	movlw	122
   602  0010C6                     u227:
   603  0010C6  2EE8               	decfsz	wreg,f,c
   604  0010C8  D7FE               	goto	u227
   605  0010CA  2E08               	decfsz	??_LCDInit& (0+255),f,c
   606  0010CC  D7FC               	goto	u227
   607                           
   608                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   609  0010CE  0E32               	movlw	50
   610  0010D0  ECA1  F008         	call	_LCDPutInst
   611                           
   612                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   613  0010D4  0E3C               	movlw	60
   614  0010D6  ECA1  F008         	call	_LCDPutInst
   615                           
   616                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   617  0010DA  0E0C               	movlw	12
   618  0010DC  ECA1  F008         	call	_LCDPutInst
   619                           
   620                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   621  0010E0  0E01               	movlw	1
   622  0010E2  ECA1  F008         	call	_LCDPutInst
   623                           
   624                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   625  0010E6  0E06               	movlw	6
   626  0010E8  ECA1  F008         	call	_LCDPutInst
   627  0010EC  0012               	return		;funcret
   628  0010EE                     __end_of_LCDInit:
   629                           	opt stack 0
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           wreg	equ	0xFE8
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _Port_BBSPIInit *****************
   638 ;; Defined at:
   639 ;;		line 123 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  port_dir        1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  port_dir        1    3[COMRAM] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        1 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		_SendByteBBSPI
   662 ;; This function is called by:
   663 ;;		_LCDInit
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text5
   668  00128C                     __ptext5:
   669                           	opt stack 0
   670  00128C                     _Port_BBSPIInit:
   671                           	opt stack 27
   672                           
   673                           ;incstack = 0
   674                           ;Port_BBSPIInit@port_dir stored from wreg
   675  00128C  6E04               	movwf	Port_BBSPIInit@port_dir,c
   676                           
   677                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   678  00128E  9489               	bcf	3977,2,c	;volatile
   679                           
   680                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   681  001290  0E40               	movlw	64
   682  001292  ECCB  F008         	call	_SendByteBBSPI
   683                           
   684                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   685  001296  5004               	movf	Port_BBSPIInit@port_dir,w,c
   686  001298  ECCB  F008         	call	_SendByteBBSPI
   687                           
   688                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   689  00129C  0E00               	movlw	0
   690  00129E  ECCB  F008         	call	_SendByteBBSPI
   691                           
   692                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   693  0012A2  8489               	bsf	3977,2,c	;volatile
   694  0012A4  0012               	return		;funcret
   695  0012A6                     __end_of_Port_BBSPIInit:
   696                           	opt stack 0
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           wreg	equ	0xFE8
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function _LCDPutInst *****************
   705 ;; Defined at:
   706 ;;		line 179 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  ch              1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  ch              1    6[COMRAM] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;Total ram usage:        2 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    2
   727 ;; This function calls:
   728 ;;		_WritePort_BBSPI
   729 ;; This function is called by:
   730 ;;		_ejemplo
   731 ;;		_LCDInit
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text6
   736  001142                     __ptext6:
   737                           	opt stack 0
   738  001142                     _LCDPutInst:
   739                           	opt stack 27
   740                           
   741                           ;incstack = 0
   742                           ;LCDPutInst@ch stored from wreg
   743  001142  6E07               	movwf	LCDPutInst@ch,c
   744                           
   745                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(4000000/4000.0)));
   746  001144  0E07               	movlw	7
   747  001146  6E06               	movwf	??_LCDPutInst& (0+255),c
   748  001148  0E7D               	movlw	125
   749  00114A                     u237:
   750  00114A  2EE8               	decfsz	wreg,f,c
   751  00114C  D7FE               	goto	u237
   752  00114E  2E06               	decfsz	??_LCDPutInst& (0+255),f,c
   753  001150  D7FC               	goto	u237
   754  001152  F000               	nop	
   755                           
   756                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
   757  001154  0E00               	movlw	0
   758  001156  6E04               	movwf	WritePort_BBSPI@a,c
   759  001158  0E12               	movlw	18
   760  00115A  EC53  F009         	call	_WritePort_BBSPI
   761                           
   762                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(4000000/4000.0)));
   763  00115E  0EFA               	movlw	250
   764  001160                     u247:
   765  001160  F000               	nop	
   766  001162  2EE8               	decfsz	wreg,f,c
   767  001164  D7FD               	goto	u247
   768                           
   769                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
   770  001166  C007  F004         	movff	LCDPutInst@ch,WritePort_BBSPI@a
   771  00116A  0E13               	movlw	19
   772  00116C  EC53  F009         	call	_WritePort_BBSPI
   773                           
   774                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(4000000/4000.0)));
   775  001170  0EFA               	movlw	250
   776  001172                     u257:
   777  001172  F000               	nop	
   778  001174  2EE8               	decfsz	wreg,f,c
   779  001176  D7FD               	goto	u257
   780                           
   781                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
   782  001178  0E40               	movlw	64
   783  00117A  6E04               	movwf	WritePort_BBSPI@a,c
   784  00117C  0E12               	movlw	18
   785  00117E  EC53  F009         	call	_WritePort_BBSPI
   786                           
   787                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(4000000/4000.0)));
   788  001182  0EFA               	movlw	250
   789  001184                     u267:
   790  001184  F000               	nop	
   791  001186  2EE8               	decfsz	wreg,f,c
   792  001188  D7FD               	goto	u267
   793                           
   794                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
   795  00118A  0E00               	movlw	0
   796  00118C  6E04               	movwf	WritePort_BBSPI@a,c
   797  00118E  0E12               	movlw	18
   798  001190  EC53  F009         	call	_WritePort_BBSPI
   799  001194  0012               	return		;funcret
   800  001196                     __end_of_LCDPutInst:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           wreg	equ	0xFE8
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _WritePort_BBSPI *****************
   810 ;; Defined at:
   811 ;;		line 144 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  port_add        1    wreg     unsigned char 
   814 ;;  a               1    3[COMRAM] unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  port_add        1    4[COMRAM] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		_SendByteBBSPI
   835 ;; This function is called by:
   836 ;;		_LCDInit
   837 ;;		_LCDPutChar
   838 ;;		_LCDPutInst
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text7
   843  0012A6                     __ptext7:
   844                           	opt stack 0
   845  0012A6                     _WritePort_BBSPI:
   846                           	opt stack 26
   847                           
   848                           ;incstack = 0
   849                           ;WritePort_BBSPI@port_add stored from wreg
   850  0012A6  6E05               	movwf	WritePort_BBSPI@port_add,c
   851                           
   852                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
   853  0012A8  9489               	bcf	3977,2,c	;volatile
   854                           
   855                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
   856  0012AA  0E40               	movlw	64
   857  0012AC  ECCB  F008         	call	_SendByteBBSPI
   858                           
   859                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
   860  0012B0  5005               	movf	WritePort_BBSPI@port_add,w,c
   861  0012B2  ECCB  F008         	call	_SendByteBBSPI
   862                           
   863                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
   864  0012B6  5004               	movf	WritePort_BBSPI@a,w,c
   865  0012B8  ECCB  F008         	call	_SendByteBBSPI
   866                           
   867                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
   868  0012BC  8489               	bsf	3977,2,c	;volatile
   869  0012BE  0012               	return		;funcret
   870  0012C0                     __end_of_WritePort_BBSPI:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           wreg	equ	0xFE8
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _SendByteBBSPI *****************
   880 ;; Defined at:
   881 ;;		line 91 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  output          1    wreg     unsigned char 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  output          1    0[COMRAM] unsigned char 
   886 ;;  input           1    2[COMRAM] unsigned char 
   887 ;;  bitcount        1    1[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:        3 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_Port_BBSPIInit
   907 ;;		_WritePort_BBSPI
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text8
   912  001196                     __ptext8:
   913                           	opt stack 0
   914  001196                     _SendByteBBSPI:
   915                           	opt stack 26
   916                           
   917                           ;incstack = 0
   918                           ;SendByteBBSPI@output stored from wreg
   919  001196  6E01               	movwf	SendByteBBSPI@output,c
   920                           
   921                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
   922                           ;BBSPI_LCD.c: 94: unsigned char input = output;
   923  001198  C001  F003         	movff	SendByteBBSPI@output,SendByteBBSPI@input
   924                           
   925                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
   926  00119C  0E00               	movlw	0
   927  00119E  6E02               	movwf	SendByteBBSPI@bitcount,c
   928  0011A0                     l784:
   929  0011A0  0E07               	movlw	7
   930  0011A2  6402               	cpfsgt	SendByteBBSPI@bitcount,c
   931  0011A4  D001               	goto	l142
   932  0011A6  0012               	return	
   933  0011A8                     l142:
   934                           
   935                           ;BBSPI_LCD.c: 97: {
   936                           ;BBSPI_LCD.c: 99: if(output & 0x80)
   937  0011A8  AE01               	btfss	SendByteBBSPI@output,7,c
   938  0011AA  D002               	goto	l144
   939                           
   940                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
   941  0011AC  8A8B               	bsf	3979,5,c	;volatile
   942  0011AE  D001               	goto	l145
   943  0011B0                     l144:
   944                           
   945                           ;BBSPI_LCD.c: 101: else
   946                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
   947  0011B0  9A8B               	bcf	3979,5,c	;volatile
   948  0011B2                     l145:
   949                           
   950                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
   951  0011B2  A88B               	btfss	3979,4,c	;volatile
   952  0011B4  D003               	goto	l792
   953                           
   954                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
   955  0011B6  80D8               	bsf	status,0,c
   956  0011B8  3603               	rlcf	SendByteBBSPI@input,f,c
   957  0011BA  D003               	goto	l794
   958  0011BC                     l792:
   959                           
   960                           ;BBSPI_LCD.c: 106: else
   961                           ;BBSPI_LCD.c: 107: input = input << 1;
   962  0011BC  5003               	movf	SendByteBBSPI@input,w,c
   963  0011BE  2403               	addwf	SendByteBBSPI@input,w,c
   964  0011C0  6E03               	movwf	SendByteBBSPI@input,c
   965  0011C2                     l794:
   966                           
   967                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
   968  0011C2  868B               	bsf	3979,3,c	;volatile
   969                           
   970                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
   971  0011C4  F000               	nop	
   972  0011C6  F000               	nop	
   973  0011C8  F000               	nop	
   974  0011CA  F000               	nop	
   975  0011CC  F000               	nop	
   976  0011CE  F000               	nop	
   977                           
   978                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
   979  0011D0  F000               	nop	
   980  0011D2  F000               	nop	
   981  0011D4  F000               	nop	
   982  0011D6  F000               	nop	
   983  0011D8  F000               	nop	
   984  0011DA  F000               	nop	
   985                           
   986                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
   987  0011DC  968B               	bcf	3979,3,c	;volatile
   988                           
   989                           ;BBSPI_LCD.c: 112: output <<= 1;
   990  0011DE  90D8               	bcf	status,0,c
   991  0011E0  3601               	rlcf	SendByteBBSPI@output,f,c
   992  0011E2  2A02               	incf	SendByteBBSPI@bitcount,f,c
   993  0011E4  D7DD               	goto	l784
   994  0011E6                     __end_of_SendByteBBSPI:
   995                           	opt stack 0
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           wreg	equ	0xFE8
  1001                           status	equ	0xFD8
  1002                           
  1003 ;; *************** function _InitBBSPI *****************
  1004 ;; Defined at:
  1005 ;;		line 70 in file "../Ejemplo_001_DigitalIO/Ejemplo_001_DigitalIO.X/BBSPI_LCD.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		None
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_LCDInit
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text9
  1033  0012E6                     __ptext9:
  1034                           	opt stack 0
  1035  0012E6                     _InitBBSPI:
  1036                           	opt stack 28
  1037                           
  1038                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
  1039                           
  1040                           ;incstack = 0
  1041  0012E6  9492               	bcf	3986,2,c	;volatile
  1042                           
  1043                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
  1044  0012E8  8894               	bsf	3988,4,c	;volatile
  1045                           
  1046                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
  1047  0012EA  9A94               	bcf	3988,5,c	;volatile
  1048                           
  1049                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
  1050  0012EC  9694               	bcf	3988,3,c	;volatile
  1051                           
  1052                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
  1053  0012EE  8489               	bsf	3977,2,c	;volatile
  1054                           
  1055                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
  1056  0012F0  888B               	bsf	3979,4,c	;volatile
  1057                           
  1058                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
  1059  0012F2  9A8B               	bcf	3979,5,c	;volatile
  1060                           
  1061                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
  1062  0012F4  968B               	bcf	3979,3,c	;volatile
  1063  0012F6  0012               	return		;funcret
  1064  0012F8                     __end_of_InitBBSPI:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           wreg	equ	0xFE8
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function _TestServo *****************
  1074 ;; Defined at:
  1075 ;;		line 45 in file "servo.h"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    1
  1096 ;; This function calls:
  1097 ;;		_ChangePosition
  1098 ;;		_SendServo
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text10
  1105  00130A                     __ptext10:
  1106                           	opt stack 0
  1107  00130A                     _TestServo:
  1108                           	opt stack 29
  1109                           
  1110                           ;servo.h: 47: SendServo(100);
  1111                           
  1112                           ;incstack = 0
  1113  00130A  0E64               	movlw	100
  1114  00130C  EC0D  F008         	call	_SendServo
  1115                           
  1116                           ;servo.h: 48: ChangePosition();
  1117  001310  EC60  F009         	call	_ChangePosition	;wreg free
  1118  001314  0012               	return		;funcret
  1119  001316                     __end_of_TestServo:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           wreg	equ	0xFE8
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _SendServo *****************
  1129 ;; Defined at:
  1130 ;;		line 50 in file "servo.h"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  TimeP           1    wreg     unsigned char 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  TimeP           1    3[COMRAM] unsigned char 
  1135 ;;  Count           2    6[COMRAM] volatile int 
  1136 ;;  PostIFG         2    4[COMRAM] volatile int 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        8 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_TestServo
  1156 ;;		_MoveServo
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text11
  1161  00101A                     __ptext11:
  1162                           	opt stack 0
  1163  00101A                     _SendServo:
  1164                           	opt stack 29
  1165                           
  1166                           ;incstack = 0
  1167                           ;SendServo@TimeP stored from wreg
  1168  00101A  6E04               	movwf	SendServo@TimeP,c
  1169                           
  1170                           ;servo.h: 52: volatile int Count=0, PostIFG=0;
  1171  00101C  0E00               	movlw	0
  1172  00101E  6E08               	movwf	SendServo@Count+1,c	;volatile
  1173  001020  0E00               	movlw	0
  1174  001022  6E07               	movwf	SendServo@Count,c	;volatile
  1175  001024  0E00               	movlw	0
  1176  001026  6E06               	movwf	SendServo@PostIFG+1,c	;volatile
  1177  001028  0E00               	movlw	0
  1178  00102A  6E05               	movwf	SendServo@PostIFG,c	;volatile
  1179                           
  1180                           ;servo.h: 53: while(PostIFG<TimeP)
  1181  00102C  D023               	goto	l890
  1182  00102E                     l80:
  1183  00102E  A29E               	btfss	3998,1,c	;volatile
  1184  001030  D7FE               	goto	l80
  1185                           
  1186                           ;servo.h: 56: TMR2IF=0;
  1187  001032  929E               	bcf	3998,1,c	;volatile
  1188                           
  1189                           ;servo.h: 57: if(Count<Position){LATDbits.LATD0=1;}else{LATDbits.LATD0=0;}
  1190  001034  500A               	movf	_Position,w,c
  1191  001036  6E01               	movwf	??_SendServo& (0+255),c
  1192  001038  6A02               	clrf	(??_SendServo+1)& (0+255),c
  1193  00103A  5001               	movf	??_SendServo,w,c
  1194  00103C  5C07               	subwf	SendServo@Count,w,c	;volatile
  1195  00103E  5008               	movf	SendServo@Count+1,w,c	;volatile
  1196  001040  0A80               	xorlw	128
  1197  001042  6E03               	movwf	(??_SendServo+2)& (0+255),c
  1198  001044  5002               	movf	??_SendServo+1,w,c
  1199  001046  0A80               	xorlw	128
  1200  001048  5803               	subwfb	(??_SendServo+2)& (0+255),w,c
  1201  00104A  B0D8               	btfsc	status,0,c
  1202  00104C  D002               	goto	l83
  1203  00104E  808C               	bsf	3980,0,c	;volatile
  1204  001050  D001               	goto	l882
  1205  001052                     l83:
  1206  001052  908C               	bcf	3980,0,c	;volatile
  1207  001054                     l882:
  1208                           
  1209                           ;servo.h: 60: if(Count==1000){Count=0;PostIFG++;}else{Count++;}
  1210  001054  0EE8               	movlw	232
  1211  001056  1807               	xorwf	SendServo@Count,w,c	;volatile
  1212  001058  E10B               	bnz	l888
  1213  00105A  0E03               	movlw	3
  1214  00105C  1808               	xorwf	SendServo@Count+1,w,c	;volatile
  1215  00105E  A4D8               	btfss	status,2,c
  1216  001060  D007               	goto	l888
  1217  001062  0E00               	movlw	0
  1218  001064  6E08               	movwf	SendServo@Count+1,c	;volatile
  1219  001066  0E00               	movlw	0
  1220  001068  6E07               	movwf	SendServo@Count,c	;volatile
  1221  00106A  4A05               	infsnz	SendServo@PostIFG,f,c	;volatile
  1222  00106C  2A06               	incf	SendServo@PostIFG+1,f,c	;volatile
  1223  00106E  D002               	goto	l890
  1224  001070                     l888:
  1225  001070  4A07               	infsnz	SendServo@Count,f,c	;volatile
  1226  001072  2A08               	incf	SendServo@Count+1,f,c	;volatile
  1227  001074                     l890:
  1228  001074  5004               	movf	SendServo@TimeP,w,c
  1229  001076  6E01               	movwf	??_SendServo& (0+255),c
  1230  001078  6A02               	clrf	(??_SendServo+1)& (0+255),c
  1231  00107A  5001               	movf	??_SendServo,w,c
  1232  00107C  5C05               	subwf	SendServo@PostIFG,w,c	;volatile
  1233  00107E  5006               	movf	SendServo@PostIFG+1,w,c	;volatile
  1234  001080  0A80               	xorlw	128
  1235  001082  6E03               	movwf	(??_SendServo+2)& (0+255),c
  1236  001084  5002               	movf	??_SendServo+1,w,c
  1237  001086  0A80               	xorlw	128
  1238  001088  5803               	subwfb	(??_SendServo+2)& (0+255),w,c
  1239  00108A  B0D8               	btfsc	status,0,c
  1240  00108C  0012               	return	
  1241  00108E  D7CF               	goto	l80
  1242  001090                     __end_of_SendServo:
  1243                           	opt stack 0
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           wreg	equ	0xFE8
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _ChangePosition *****************
  1252 ;; Defined at:
  1253 ;;		line 67 in file "servo.h"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_TestServo
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text12
  1281  0012C0                     __ptext12:
  1282                           	opt stack 0
  1283  0012C0                     _ChangePosition:
  1284                           	opt stack 29
  1285                           
  1286                           ;servo.h: 69: if(Position==110){Position=35;}else{Position=110;}
  1287                           
  1288                           ;incstack = 0
  1289  0012C0  0E6E               	movlw	110
  1290  0012C2  180A               	xorwf	_Position,w,c
  1291  0012C4  A4D8               	btfss	status,2,c
  1292  0012C6  D003               	goto	l896
  1293  0012C8  0E23               	movlw	35
  1294  0012CA  6E0A               	movwf	_Position,c
  1295  0012CC  0012               	return	
  1296  0012CE                     l896:
  1297  0012CE  0E6E               	movlw	110
  1298  0012D0  6E0A               	movwf	_Position,c
  1299  0012D2  0012               	return	
  1300  0012D4                     __end_of_ChangePosition:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           wreg	equ	0xFE8
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _InitServo *****************
  1310 ;; Defined at:
  1311 ;;		line 33 in file "servo.h"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text13
  1339  0012F8                     __ptext13:
  1340                           	opt stack 0
  1341  0012F8                     _InitServo:
  1342                           	opt stack 30
  1343                           
  1344                           ;servo.h: 35: TRISDbits.TRISD0 =0;
  1345                           
  1346                           ;incstack = 0
  1347  0012F8  9095               	bcf	3989,0,c	;volatile
  1348                           
  1349                           ;servo.h: 37: PR2=24;
  1350  0012FA  0E18               	movlw	24
  1351  0012FC  6ECB               	movwf	4043,c	;volatile
  1352                           
  1353                           ;servo.h: 38: T2CON=(0x10>>1)|(0x00);
  1354  0012FE  0E08               	movlw	8
  1355  001300  6ECA               	movwf	4042,c	;volatile
  1356                           
  1357                           ;servo.h: 39: PIE1|=0x02;
  1358  001302  829D               	bsf	3997,1,c	;volatile
  1359                           
  1360                           ;servo.h: 40: PIR1&=~0x02;
  1361  001304  929E               	bcf	3998,1,c	;volatile
  1362                           
  1363                           ;servo.h: 41: T2CON|=0x04;
  1364  001306  84CA               	bsf	4042,2,c	;volatile
  1365  001308  0012               	return		;funcret
  1366  00130A                     __end_of_InitServo:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           wreg	equ	0xFE8
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _InitConf *****************
  1376 ;; Defined at:
  1377 ;;		line 54 in file "Modules.h"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    1
  1398 ;; This function calls:
  1399 ;;		_ClockSetup
  1400 ;;		_DigitalIO
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text14
  1407  001316                     __ptext14:
  1408                           	opt stack 0
  1409  001316                     _InitConf:
  1410                           	opt stack 29
  1411                           
  1412                           ;Modules.h: 56: ClockSetup();
  1413                           
  1414                           ;incstack = 0
  1415  001316  EC90  F009         	call	_ClockSetup	;wreg free
  1416                           
  1417                           ;Modules.h: 57: DigitalIO();
  1418  00131A  ECF3  F008         	call	_DigitalIO	;wreg free
  1419  00131E  0012               	return		;funcret
  1420  001320                     __end_of_InitConf:
  1421                           	opt stack 0
  1422                           tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           wreg	equ	0xFE8
  1427                           status	equ	0xFD8
  1428                           
  1429 ;; *************** function _DigitalIO *****************
  1430 ;; Defined at:
  1431 ;;		line 36 in file "Modules.h"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_InitConf
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text15
  1459  0011E6                     __ptext15:
  1460                           	opt stack 0
  1461  0011E6                     _DigitalIO:
  1462                           	opt stack 29
  1463                           
  1464                           ;Modules.h: 38: LATA=0;
  1465                           
  1466                           ;incstack = 0
  1467  0011E6  0E00               	movlw	0
  1468  0011E8  6E89               	movwf	3977,c	;volatile
  1469                           
  1470                           ;Modules.h: 39: PORTA=0;
  1471  0011EA  0E00               	movlw	0
  1472  0011EC  6E80               	movwf	3968,c	;volatile
  1473                           
  1474                           ;Modules.h: 40: TRISA=0X20;
  1475  0011EE  0E20               	movlw	32
  1476  0011F0  6E92               	movwf	3986,c	;volatile
  1477                           
  1478                           ;Modules.h: 41: ADCON1=0X0F;
  1479  0011F2  0E0F               	movlw	15
  1480  0011F4  6EC1               	movwf	4033,c	;volatile
  1481                           
  1482                           ;Modules.h: 43: LATB=0;
  1483  0011F6  0E00               	movlw	0
  1484  0011F8  6E8A               	movwf	3978,c	;volatile
  1485                           
  1486                           ;Modules.h: 44: PORTB=0;
  1487  0011FA  0E00               	movlw	0
  1488  0011FC  6E81               	movwf	3969,c	;volatile
  1489                           
  1490                           ;Modules.h: 45: TRISB=0X01;
  1491  0011FE  0E01               	movlw	1
  1492  001200  6E93               	movwf	3987,c	;volatile
  1493                           
  1494                           ;Modules.h: 47: LATD=0;
  1495  001202  0E00               	movlw	0
  1496  001204  6E8C               	movwf	3980,c	;volatile
  1497                           
  1498                           ;Modules.h: 48: PORTD=0;
  1499  001206  0E00               	movlw	0
  1500  001208  6E83               	movwf	3971,c	;volatile
  1501                           
  1502                           ;Modules.h: 49: TRISD=0;
  1503  00120A  0E00               	movlw	0
  1504  00120C  6E95               	movwf	3989,c	;volatile
  1505                           
  1506                           ;Modules.h: 50: TRISD&=~(0xFF);
  1507  00120E  0E00               	movlw	0
  1508  001210  6E95               	movwf	3989,c	;volatile
  1509                           
  1510                           ;Modules.h: 51: PSPCON=0;
  1511  001212  0E00               	movlw	0
  1512  001214  6EB0               	movwf	4016,c	;volatile
  1513  001216  0012               	return		;funcret
  1514  001218                     __end_of_DigitalIO:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           tblptrh	equ	0xFF7
  1518                           tblptrl	equ	0xFF6
  1519                           tablat	equ	0xFF5
  1520                           wreg	equ	0xFE8
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _ClockSetup *****************
  1524 ;; Defined at:
  1525 ;;		line 28 in file "Modules.h"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_InitConf
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text16
  1553  001320                     __ptext16:
  1554                           	opt stack 0
  1555  001320                     _ClockSetup:
  1556                           	opt stack 29
  1557                           
  1558                           ;Modules.h: 30: OSCCON=0x60|0x00;
  1559                           
  1560                           ;incstack = 0
  1561  001320  0E60               	movlw	96
  1562  001322  6ED3               	movwf	4051,c	;volatile
  1563                           
  1564                           ;Modules.h: 31: OSCTUNE = 0x00;
  1565  001324  0E00               	movlw	0
  1566  001326  6E9B               	movwf	3995,c	;volatile
  1567  001328  0012               	return		;funcret
  1568  00132A                     __end_of_ClockSetup:
  1569                           	opt stack 0
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           wreg	equ	0xFE8
  1575                           status	equ	0xFD8
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           wreg	equ	0xFE8
  1581                           status	equ	0xFD8
  1582                           
  1583                           	psect	rparam
  1584  0000                     tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           wreg	equ	0xFE8
  1589                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _TestServo->_SendServo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3244
                           _InitConf
                          _InitServo
                          _TestServo
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                              7 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1547
                                              7 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TestServo                                            0     0      0      60
                     _ChangePosition
                          _SendServo
 ---------------------------------------------------------------------------------
 (2) _SendServo                                            8     8      0      60
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (2) _ChangePosition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitServo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitConf
     _ClockSetup
     _DigitalIO
   _InitServo
   _TestServo
     _ChangePosition
     _SendServo
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       A       1       10.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      32        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Jan 15 21:24:02 2017

             ?_LCDPutChar 0001                        l80 102E                        l83 1052  
             ?_LCDPutInst 0001               __CFG_BORV$3 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
             __CFG_OSC$HS 000000              __CFG_CP4$OFF 000000              __CFG_CP5$OFF 000000  
   SendByteBBSPI@bitcount 0002              __CFG_CP6$OFF 000000              __CFG_CP7$OFF 000000  
                     l142 11A8                       l144 11B0                       l145 11B2  
                     l792 11BC                       l784 11A0                       l882 1054  
                     l890 1074                       l794 11C2                       l896 12CE  
                     l888 1070              __CFG_CPB$OFF 000000                       u207 1130  
                     u217 109E                       u227 10C6                       u237 114A  
                     _PR2 000FCB                       u247 1160                       u257 1172  
                     u177 10F6              __CFG_CPD$OFF 000000                       u267 1184  
                     u187 110C                       u197 111E                       wreg 000FE8  
            __CFG_MODE$MC 000000           __end_of_LCDInit 10EE              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1050 1244                      l1054 1258  
                    l1068 12E0                      STR_1 1001                      STR_2 100D  
                    _LATA 000F89                      _LATB 000F8A                      _LATD 000F8C  
                    _PIE1 000F9D                      _PIR1 000F9E                      _TMR2 000FCC  
                    _main 12D4          ?_WritePort_BBSPI 0004                      start 0000  
      __size_of_LCDPutStr 002A             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000010          ??_ChangePosition 0001                _ClockSetup 1320  
           __CFG_WAIT$OFF 000000                     ?_main 0001                     _T2CON 000FCA  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTD 000F83  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000             __CFG_WRT4$OFF 000000  
           __CFG_WRT5$OFF 000000             __CFG_WRT6$OFF 000000             __CFG_WRT7$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000           __end_of_ejemplo 1242            __CFG_EBTR3$OFF 000000  
          __CFG_EBTR4$OFF 000000            __CFG_EBTR5$OFF 000000            __CFG_EBTR6$OFF 000000  
          __CFG_EBTR7$OFF 000000             __CFG_WRTB$OFF 000000   __size_of_Port_BBSPIInit 001A  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
          __CFG_BOREN$OFF 000000                     tablat 000FF5       __size_of_LCDPutChar 0054  
     __size_of_LCDPutInst 0054                     status 000FD8           __initialization 126C  
            __end_of_main 12E6          __end_of_InitConf 1320                    ??_main 000A  
      __size_of_DigitalIO 0032             __activetblptr 000001                 ??_LCDInit 0008  
            LCDPutChar@ch 0007         __end_of_LCDPutStr 126C                    _ADCON1 000FC1  
      __size_of_InitBBSPI 0012              LCDPutInst@ch 0007           __CFG_BBSIZ$BB2K 000000  
          SendServo@Count 0007                    _OSCCON 000FD3            SendServo@TimeP 0004  
                  _TMR2IF 007CF1                    _PSPCON 000FB0              LCDPutStr@ptr 0008  
      __size_of_InitServo 0012            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
      __size_of_SendServo 0076               ?_ClockSetup 0001                 ??_ejemplo 000A  
      __size_of_TestServo 000C              __pdataCOMRAM 000A    Port_BBSPIInit@port_dir 0004  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 127E  
       __end_of_DigitalIO 1218             ___rparam_used 000001    __size_of_SendByteBBSPI 0050  
          __pcstackCOMRAM 0001         __end_of_InitBBSPI 12F8              ??_LCDPutChar 0006  
            ??_LCDPutInst 0006         __end_of_InitServo 130A            _Port_BBSPIInit 128C  
       __end_of_SendServo 1090                 ?_InitConf 0001       __size_of_ClockSetup 000A  
      __end_of_LCDPutChar 1142        __end_of_LCDPutInst 1196         __end_of_TestServo 1316  
  __end_of_Port_BBSPIInit 12A6                   _LCDInit 1090             _SendByteBBSPI 1196  
                 _OSCTUNE 000F9B                ??_InitConf 0001          WritePort_BBSPI@a 0004  
                 __Hparam 0000                   __Lparam 0000  __size_of_WritePort_BBSPI 001A  
            __psmallconst 1000                   __pcinit 126C                   __ramtop 1000  
                 __ptext0 12D4                   __ptext1 1218                   __ptext2 1242  
                 __ptext3 10EE                   __ptext4 1090                   __ptext5 128C  
                 __ptext6 1142                   __ptext7 12A6                   __ptext8 1196  
                 __ptext9 12E6                   _ejemplo 1218            ?_SendByteBBSPI 0001  
         ?_Port_BBSPIInit 0001                 _LCDPutStr 1242      end_of_initialization 127E  
            ??_ClockSetup 0001   __size_of_ChangePosition 0014                 _TRISAbits 000F92  
               _TRISCbits 000F94                 _TRISDbits 000F95                 _TRISFbits 000F97  
              ?_LCDPutStr 0008       SendByteBBSPI@output 0001        __end_of_ClockSetup 132A  
               _DigitalIO 11E6             __pidataCOMRAM 132A           ??_SendByteBBSPI 0001  
               _InitBBSPI 12E6         ??_WritePort_BBSPI 0005       start_initialization 126C  
               _InitServo 12F8                 _SendServo 101A         __size_of_InitConf 000A  
              ?_DigitalIO 0001                 _TestServo 130A          __CFG_LPT1OSC$OFF 000000  
              ?_InitBBSPI 0001                  ?_LCDInit 0001                ?_InitServo 0001  
             ??_LCDPutStr 000A                ?_SendServo 0001         __CFG_CCP2MX$PORTC 000000  
              ?_TestServo 0001          ??_Port_BBSPIInit 0004                  ?_ejemplo 0001  
             __smallconst 1000            _ChangePosition 12C0                  _LATAbits 000F89  
                _LATCbits 000F8B                  _LATDbits 000F8C                  _LATFbits 000F8E  
   __CFG_DATABW$DATA16BIT 000000               ??_DigitalIO 0001          SendServo@PostIFG 0005  
        __CFG_WDTPS$32768 000000         __CFG_ECCPMX$PORTE 000000    __end_of_ChangePosition 12D4  
             ??_InitBBSPI 0001        SendByteBBSPI@input 0003          __size_of_LCDInit 005E  
             ??_InitServo 0001                  _InitConf 1316               ??_SendServo 0001  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 1000  
         _WritePort_BBSPI 12A6               ??_TestServo 0009                  _Position 000A  
         ?_ChangePosition 0001          __size_of_ejemplo 002A                  __ptext10 130A  
                __ptext11 101A                  __ptext12 12C0                  __ptext13 12F8  
                __ptext14 1316                  __ptext15 11E6                  __ptext16 1320  
           __size_of_main 0012                _LCDPutChar 10EE                _LCDPutInst 1142  
   __end_of_SendByteBBSPI 11E6     __CFG_ADDRBW$ADDR20BIT 000000   __end_of_WritePort_BBSPI 12C0  
 WritePort_BBSPI@port_add 0005  
