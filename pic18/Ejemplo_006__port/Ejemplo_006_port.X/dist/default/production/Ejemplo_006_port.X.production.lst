

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jan 20 20:11:03 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     _ADCON1	set	4033
    28  0000                     _INTCON	set	4082
    29  0000                     _INTCON2bits	set	4081
    30  0000                     _INTCON3bits	set	4080
    31  0000                     _INTCONbits	set	4082
    32  0000                     _LATA	set	3977
    33  0000                     _LATAbits	set	3977
    34  0000                     _LATB	set	3978
    35  0000                     _LATCbits	set	3979
    36  0000                     _LATD	set	3980
    37  0000                     _LATFbits	set	3982
    38  0000                     _OSCCON	set	4051
    39  0000                     _OSCTUNE	set	3995
    40  0000                     _PORTA	set	3968
    41  0000                     _PORTB	set	3969
    42  0000                     _PORTD	set	3971
    43  0000                     _PSPCON	set	4016
    44  0000                     _TRISA	set	3986
    45  0000                     _TRISAbits	set	3986
    46  0000                     _TRISB	set	3987
    47  0000                     _TRISCbits	set	3988
    48  0000                     _TRISD	set	3989
    49  0000                     _TRISFbits	set	3991
    50                           
    51                           	psect	smallconst
    52  001000                     __psmallconst:
    53                           	opt stack 0
    54  001000  00                 	db	0
    55  001001                     STR_1:
    56  001001  45                 	db	69	;'E'
    57  001002  6A                 	db	106	;'j'
    58  001003  65                 	db	101	;'e'
    59  001004  6D                 	db	109	;'m'
    60  001005  70                 	db	112	;'p'
    61  001006  6C                 	db	108	;'l'
    62  001007  6F                 	db	111	;'o'
    63  001008  5F                 	db	95	;'_'
    64  001009  30                 	db	48	;'0'
    65  00100A  30                 	db	48	;'0'
    66  00100B  36                 	db	54	;'6'
    67  00100C  20                 	db	32
    68  00100D  50                 	db	80	;'P'
    69  00100E  6F                 	db	111	;'o'
    70  00100F  72                 	db	114	;'r'
    71  001010  74                 	db	116	;'t'
    72  001011  00                 	db	0
    73  001012                     STR_2:
    74  001012  52                 	db	82	;'R'
    75  001013  42                 	db	66	;'B'
    76  001014  30                 	db	48	;'0'
    77  001015  20                 	db	32
    78  001016  49                 	db	73	;'I'
    79  001017  6E                 	db	110	;'n'
    80  001018  74                 	db	116	;'t'
    81  001019  65                 	db	101	;'e'
    82  00101A  72                 	db	114	;'r'
    83  00101B  72                 	db	114	;'r'
    84  00101C  75                 	db	117	;'u'
    85  00101D  70                 	db	112	;'p'
    86  00101E  74                 	db	116	;'t'
    87  00101F  00                 	db	0
    88                           
    89                           ; #config settings
    90  001020  00                 	db	0	; dummy byte at the end
    91  0000                     
    92                           	psect	cinit
    93  001268                     __pcinit:
    94                           	opt stack 0
    95  001268                     start_initialization:
    96                           	opt stack 0
    97  001268                     __initialization:
    98                           	opt stack 0
    99  001268                     end_of_initialization:
   100                           	opt stack 0
   101  001268                     __end_of__initialization:
   102                           	opt stack 0
   103  001268  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   104  00126A  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   105  00126C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   106  00126E  6EF8               	movwf	tblptru,c
   107  001270  0E10               	movlw	high __Lsmallconst
   108  001272  6EF7               	movwf	tblptrh,c
   109  001274  0100               	movlb	0
   110  001276  EF46  F009         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           
   114                           	psect	cstackCOMRAM
   115  000001                     __pcstackCOMRAM:
   116                           	opt stack 0
   117  000001                     ??_portb_interrupt:
   118                           
   119                           ; 1 bytes @ 0x0
   120  000001                     	ds	14
   121  00000F                     SendByteBBSPI@output:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0xE
   125  00000F                     	ds	1
   126  000010                     SendByteBBSPI@bitcount:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0xF
   130  000010                     	ds	1
   131  000011                     SendByteBBSPI@input:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0x10
   135  000011                     	ds	1
   136  000012                     Port_BBSPIInit@port_dir:
   137                           	opt stack 0
   138  000012                     WritePort_BBSPI@a:
   139                           	opt stack 0
   140                           
   141                           ; 1 bytes @ 0x11
   142  000012                     	ds	1
   143  000013                     WritePort_BBSPI@port_add:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0x12
   147  000013                     	ds	1
   148  000014                     LCDPutChar@ch:
   149                           	opt stack 0
   150  000014                     LCDPutInst@ch:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x13
   154  000014                     	ds	1
   155  000015                     LCDPutStr@ptr:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x14
   159  000015                     	ds	2
   160  000017                     tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           
   163                           ; 1 bytes @ 0x16
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 27 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels required when called:    6
   189 ;; This function calls:
   190 ;;		_InitConf
   191 ;;		_TestInterrupt
   192 ;;		_ejemplo
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199  00128C                     __ptext0:
   200                           	opt stack 0
   201  00128C                     _main:
   202                           	opt stack 25
   203                           
   204                           ;main.c: 29: InitConf();
   205                           
   206                           ;incstack = 0
   207  00128C  EC54  F009         	call	_InitConf	;wreg free
   208                           
   209                           ;main.c: 31: ejemplo();
   210  001290  ECF0  F008         	call	_ejemplo	;wreg free
   211                           
   212                           ;main.c: 32: TestInterrupt();
   213  001294  EC4D  F009         	call	_TestInterrupt	;wreg free
   214  001298                     l115:
   215                           
   216                           ;main.c: 34: {
   217  001298  D7FF               	goto	l115
   218  00129A                     __end_of_main:
   219                           	opt stack 0
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           
   223 ;; *************** function _ejemplo *****************
   224 ;; Defined at:
   225 ;;		line 14 in file "Ejemplo.h"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used:    1
   245 ;; Hardware stack levels required when called:    5
   246 ;; This function calls:
   247 ;;		_LCDInit
   248 ;;		_LCDPutInst
   249 ;;		_LCDPutStr
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256  0011E0                     __ptext1:
   257                           	opt stack 0
   258  0011E0                     _ejemplo:
   259                           	opt stack 25
   260                           
   261                           ;Ejemplo.h: 16: LCDInit();
   262                           
   263                           ;incstack = 0
   264  0011E0  EC78  F008         	call	_LCDInit	;wreg free
   265                           
   266                           ;Ejemplo.h: 17: LCDPutInst(0x80);
   267  0011E4  0E80               	movlw	128
   268  0011E6  ECBB  F008         	call	_LCDPutInst
   269                           
   270                           ;Ejemplo.h: 18: LCDPutStr("Ejemplo_006 Port");
   271  0011EA  0E01               	movlw	low STR_1
   272  0011EC  6E15               	movwf	LCDPutStr@ptr,c
   273  0011EE  0E10               	movlw	high STR_1
   274  0011F0  6E16               	movwf	LCDPutStr@ptr+1,c
   275  0011F2  EC05  F009         	call	_LCDPutStr	;wreg free
   276                           
   277                           ;Ejemplo.h: 19: LCDPutInst(0xC0);
   278  0011F6  0EC0               	movlw	192
   279  0011F8  ECBB  F008         	call	_LCDPutInst
   280                           
   281                           ;Ejemplo.h: 20: LCDPutStr("RB0 Interrupt");
   282  0011FC  0E12               	movlw	low STR_2
   283  0011FE  6E15               	movwf	LCDPutStr@ptr,c
   284  001200  0E10               	movlw	high STR_2
   285  001202  6E16               	movwf	LCDPutStr@ptr+1,c
   286  001204  EC05  F009         	call	_LCDPutStr	;wreg free
   287  001208  0012               	return		;funcret
   288  00120A                     __end_of_ejemplo:
   289                           	opt stack 0
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           
   293 ;; *************** function _LCDPutStr *****************
   294 ;; Defined at:
   295 ;;		line 198 in file "BBSPI_LCD.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;  ptr             2   20[COMRAM] PTR const unsigned char 
   298 ;;		 -> STR_2(14), STR_1(17), 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;Total ram usage:        2 bytes
   315 ;; Hardware stack levels used:    1
   316 ;; Hardware stack levels required when called:    4
   317 ;; This function calls:
   318 ;;		_LCDPutChar
   319 ;; This function is called by:
   320 ;;		_ejemplo
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text2
   325  00120A                     __ptext2:
   326                           	opt stack 0
   327  00120A                     _LCDPutStr:
   328                           	opt stack 25
   329                           
   330                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   331                           
   332                           ;incstack = 0
   333  00120A  D00A               	goto	l964
   334  00120C                     l960:
   335  00120C  C015  FFF6         	movff	LCDPutStr@ptr,tblptrl
   336  001210  C016  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   337  001214                     	if	0	;tblptru may be non-zero
   338  001214                     	endif
   339  001214                     	if	0	;tblptru may be non-zero
   340  001214                     	endif
   341  001214  0008               	tblrd		*
   342  001216  50F5               	movf	tablat,w,c
   343  001218  EC9F  F008         	call	_LCDPutChar
   344  00121C  4A15               	infsnz	LCDPutStr@ptr,f,c
   345  00121E  2A16               	incf	LCDPutStr@ptr+1,f,c
   346  001220                     l964:
   347  001220  C015  FFF6         	movff	LCDPutStr@ptr,tblptrl
   348  001224  C016  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   349  001228                     	if	0	;tblptru may be non-zero
   350  001228                     	endif
   351  001228                     	if	0	;tblptru may be non-zero
   352  001228                     	endif
   353  001228  0008               	tblrd		*
   354  00122A  50F5               	movf	tablat,w,c
   355  00122C  0900               	iorlw	0
   356  00122E  B4D8               	btfsc	status,2,c
   357  001230  0012               	return	
   358  001232  D7EC               	goto	l960
   359  001234                     __end_of_LCDPutStr:
   360                           	opt stack 0
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           status	equ	0xFD8
   366                           
   367 ;; *************** function _LCDPutChar *****************
   368 ;; Defined at:
   369 ;;		line 160 in file "BBSPI_LCD.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  ch              1    wreg     unsigned char 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  ch              1   19[COMRAM] unsigned char 
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;Total ram usage:        1 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; Hardware stack levels required when called:    3
   390 ;; This function calls:
   391 ;;		_WritePort_BBSPI
   392 ;; This function is called by:
   393 ;;		_LCDPutStr
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text3
   398  00113E                     __ptext3:
   399                           	opt stack 0
   400  00113E                     _LCDPutChar:
   401                           	opt stack 25
   402                           
   403                           ;incstack = 0
   404                           ;LCDPutChar@ch stored from wreg
   405  00113E  6E14               	movwf	LCDPutChar@ch,c
   406                           
   407                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(10000/4000.0)));
   408  001140  0E04               	movlw	4
   409  001142                     u87:
   410  001142  2EE8               	decfsz	wreg,f,c
   411  001144  D7FE               	goto	u87
   412                           
   413                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   414  001146  0E80               	movlw	128
   415  001148  6E12               	movwf	WritePort_BBSPI@a,c
   416  00114A  0E12               	movlw	18
   417  00114C  EC27  F009         	call	_WritePort_BBSPI
   418                           
   419                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(10000/4000.0)));
   420  001150  D000               	nop2		;2 cycle nop
   421                           
   422                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   423  001152  C014  F012         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   424  001156  0E13               	movlw	19
   425  001158  EC27  F009         	call	_WritePort_BBSPI
   426                           
   427                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(10000/4000.0)));
   428  00115C  D000               	nop2		;2 cycle nop
   429                           
   430                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   431  00115E  0EC0               	movlw	192
   432  001160  6E12               	movwf	WritePort_BBSPI@a,c
   433  001162  0E12               	movlw	18
   434  001164  EC27  F009         	call	_WritePort_BBSPI
   435                           
   436                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(10000/4000.0)));
   437  001168  D000               	nop2		;2 cycle nop
   438                           
   439                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   440  00116A  0E00               	movlw	0
   441  00116C  6E12               	movwf	WritePort_BBSPI@a,c
   442  00116E  0E12               	movlw	18
   443  001170  EC27  F009         	call	_WritePort_BBSPI
   444  001174  0012               	return		;funcret
   445  001176                     __end_of_LCDPutChar:
   446                           	opt stack 0
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           wreg	equ	0xFE8
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _LCDInit *****************
   455 ;; Defined at:
   456 ;;		line 45 in file "BBSPI_LCD.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    4
   477 ;; This function calls:
   478 ;;		_InitBBSPI
   479 ;;		_LCDPutInst
   480 ;;		_Port_BBSPIInit
   481 ;;		_WritePort_BBSPI
   482 ;; This function is called by:
   483 ;;		_ejemplo
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text4
   488  0010F0                     __ptext4:
   489                           	opt stack 0
   490  0010F0                     _LCDInit:
   491                           	opt stack 25
   492                           
   493                           ;BBSPI_LCD.c: 47: InitBBSPI();
   494                           
   495                           ;incstack = 0
   496  0010F0  EC3D  F009         	call	_InitBBSPI	;wreg free
   497                           
   498                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   499  0010F4  9C97               	bcf	3991,6,c	;volatile
   500                           
   501                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   502  0010F6  9C8E               	bcf	3982,6,c	;volatile
   503                           
   504                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(10000/4000.0)));
   505  0010F8  0E04               	movlw	4
   506  0010FA                     u97:
   507  0010FA  2EE8               	decfsz	wreg,f,c
   508  0010FC  D7FE               	goto	u97
   509                           
   510                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   511  0010FE  8C8E               	bsf	3982,6,c	;volatile
   512                           
   513                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   514  001100  0E00               	movlw	0
   515  001102  EC1A  F009         	call	_Port_BBSPIInit
   516                           
   517                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   518  001106  0E01               	movlw	1
   519  001108  EC1A  F009         	call	_Port_BBSPIInit
   520                           
   521                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   522  00110C  0E00               	movlw	0
   523  00110E  6E12               	movwf	WritePort_BBSPI@a,c
   524  001110  0E12               	movlw	18
   525  001112  EC27  F009         	call	_WritePort_BBSPI
   526                           
   527                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(10000/4000.0)));
   528  001116  0E0C               	movlw	12
   529  001118                     u107:
   530  001118  2EE8               	decfsz	wreg,f,c
   531  00111A  D7FE               	goto	u107
   532  00111C  F000               	nop	
   533                           
   534                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   535  00111E  0E32               	movlw	50
   536  001120  ECBB  F008         	call	_LCDPutInst
   537                           
   538                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   539  001124  0E3C               	movlw	60
   540  001126  ECBB  F008         	call	_LCDPutInst
   541                           
   542                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   543  00112A  0E0C               	movlw	12
   544  00112C  ECBB  F008         	call	_LCDPutInst
   545                           
   546                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   547  001130  0E01               	movlw	1
   548  001132  ECBB  F008         	call	_LCDPutInst
   549                           
   550                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   551  001136  0E06               	movlw	6
   552  001138  ECBB  F008         	call	_LCDPutInst
   553  00113C  0012               	return		;funcret
   554  00113E                     __end_of_LCDInit:
   555                           	opt stack 0
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           wreg	equ	0xFE8
   561                           status	equ	0xFD8
   562                           
   563 ;; *************** function _Port_BBSPIInit *****************
   564 ;; Defined at:
   565 ;;		line 123 in file "BBSPI_LCD.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  port_dir        1    wreg     unsigned char 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  port_dir        1   17[COMRAM] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;Total ram usage:        1 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    2
   586 ;; This function calls:
   587 ;;		_SendByteBBSPI
   588 ;; This function is called by:
   589 ;;		_LCDInit
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text5
   594  001234                     __ptext5:
   595                           	opt stack 0
   596  001234                     _Port_BBSPIInit:
   597                           	opt stack 26
   598                           
   599                           ;incstack = 0
   600                           ;Port_BBSPIInit@port_dir stored from wreg
   601  001234  6E12               	movwf	Port_BBSPIInit@port_dir,c
   602                           
   603                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   604  001236  9489               	bcf	3977,2,c	;volatile
   605                           
   606                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   607  001238  0E40               	movlw	64
   608  00123A  EC50  F008         	call	_SendByteBBSPI
   609                           
   610                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   611  00123E  5012               	movf	Port_BBSPIInit@port_dir,w,c
   612  001240  EC50  F008         	call	_SendByteBBSPI
   613                           
   614                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   615  001244  0E00               	movlw	0
   616  001246  EC50  F008         	call	_SendByteBBSPI
   617                           
   618                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   619  00124A  8489               	bsf	3977,2,c	;volatile
   620  00124C  0012               	return		;funcret
   621  00124E                     __end_of_Port_BBSPIInit:
   622                           	opt stack 0
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           wreg	equ	0xFE8
   628                           status	equ	0xFD8
   629                           
   630 ;; *************** function _LCDPutInst *****************
   631 ;; Defined at:
   632 ;;		line 179 in file "BBSPI_LCD.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  ch              1    wreg     unsigned char 
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  ch              1   19[COMRAM] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;Total ram usage:        1 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    3
   653 ;; This function calls:
   654 ;;		_WritePort_BBSPI
   655 ;; This function is called by:
   656 ;;		_LCDInit
   657 ;;		_ejemplo
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text6
   662  001176                     __ptext6:
   663                           	opt stack 0
   664  001176                     _LCDPutInst:
   665                           	opt stack 26
   666                           
   667                           ;incstack = 0
   668                           ;LCDPutInst@ch stored from wreg
   669  001176  6E14               	movwf	LCDPutInst@ch,c
   670                           
   671                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(10000/4000.0)));
   672  001178  0E04               	movlw	4
   673  00117A                     u117:
   674  00117A  2EE8               	decfsz	wreg,f,c
   675  00117C  D7FE               	goto	u117
   676                           
   677                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
   678  00117E  0E00               	movlw	0
   679  001180  6E12               	movwf	WritePort_BBSPI@a,c
   680  001182  0E12               	movlw	18
   681  001184  EC27  F009         	call	_WritePort_BBSPI
   682                           
   683                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(10000/4000.0)));
   684  001188  D000               	nop2		;2 cycle nop
   685                           
   686                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
   687  00118A  C014  F012         	movff	LCDPutInst@ch,WritePort_BBSPI@a
   688  00118E  0E13               	movlw	19
   689  001190  EC27  F009         	call	_WritePort_BBSPI
   690                           
   691                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(10000/4000.0)));
   692  001194  D000               	nop2		;2 cycle nop
   693                           
   694                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
   695  001196  0E40               	movlw	64
   696  001198  6E12               	movwf	WritePort_BBSPI@a,c
   697  00119A  0E12               	movlw	18
   698  00119C  EC27  F009         	call	_WritePort_BBSPI
   699                           
   700                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(10000/4000.0)));
   701  0011A0  D000               	nop2		;2 cycle nop
   702                           
   703                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
   704  0011A2  0E00               	movlw	0
   705  0011A4  6E12               	movwf	WritePort_BBSPI@a,c
   706  0011A6  0E12               	movlw	18
   707  0011A8  EC27  F009         	call	_WritePort_BBSPI
   708  0011AC  0012               	return		;funcret
   709  0011AE                     __end_of_LCDPutInst:
   710                           	opt stack 0
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           wreg	equ	0xFE8
   716                           status	equ	0xFD8
   717                           
   718 ;; *************** function _WritePort_BBSPI *****************
   719 ;; Defined at:
   720 ;;		line 144 in file "BBSPI_LCD.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  port_add        1    wreg     unsigned char 
   723 ;;  a               1   17[COMRAM] unsigned char 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  port_add        1   18[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;Total ram usage:        2 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    2
   742 ;; This function calls:
   743 ;;		_SendByteBBSPI
   744 ;; This function is called by:
   745 ;;		_LCDInit
   746 ;;		_LCDPutChar
   747 ;;		_LCDPutInst
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text7
   752  00124E                     __ptext7:
   753                           	opt stack 0
   754  00124E                     _WritePort_BBSPI:
   755                           	opt stack 25
   756                           
   757                           ;incstack = 0
   758                           ;WritePort_BBSPI@port_add stored from wreg
   759  00124E  6E13               	movwf	WritePort_BBSPI@port_add,c
   760                           
   761                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
   762  001250  9489               	bcf	3977,2,c	;volatile
   763                           
   764                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
   765  001252  0E40               	movlw	64
   766  001254  EC50  F008         	call	_SendByteBBSPI
   767                           
   768                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
   769  001258  5013               	movf	WritePort_BBSPI@port_add,w,c
   770  00125A  EC50  F008         	call	_SendByteBBSPI
   771                           
   772                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
   773  00125E  5012               	movf	WritePort_BBSPI@a,w,c
   774  001260  EC50  F008         	call	_SendByteBBSPI
   775                           
   776                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
   777  001264  8489               	bsf	3977,2,c	;volatile
   778  001266  0012               	return		;funcret
   779  001268                     __end_of_WritePort_BBSPI:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           wreg	equ	0xFE8
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _SendByteBBSPI *****************
   789 ;; Defined at:
   790 ;;		line 91 in file "BBSPI_LCD.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  output          1    wreg     unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  output          1   14[COMRAM] unsigned char 
   795 ;;  input           1   16[COMRAM] unsigned char 
   796 ;;  bitcount        1   15[COMRAM] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;Total ram usage:        3 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_Port_BBSPIInit
   817 ;;		_WritePort_BBSPI
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text8
   822  0010A0                     __ptext8:
   823                           	opt stack 0
   824  0010A0                     _SendByteBBSPI:
   825                           	opt stack 25
   826                           
   827                           ;incstack = 0
   828                           ;SendByteBBSPI@output stored from wreg
   829  0010A0  6E0F               	movwf	SendByteBBSPI@output,c
   830                           
   831                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
   832                           ;BBSPI_LCD.c: 94: unsigned char input = output;
   833  0010A2  C00F  F011         	movff	SendByteBBSPI@output,SendByteBBSPI@input
   834                           
   835                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
   836  0010A6  0E00               	movlw	0
   837  0010A8  6E10               	movwf	SendByteBBSPI@bitcount,c
   838  0010AA                     l740:
   839  0010AA  0E07               	movlw	7
   840  0010AC  6410               	cpfsgt	SendByteBBSPI@bitcount,c
   841  0010AE  D001               	goto	l33
   842  0010B0  0012               	return	
   843  0010B2                     l33:
   844                           
   845                           ;BBSPI_LCD.c: 97: {
   846                           ;BBSPI_LCD.c: 99: if(output & 0x80)
   847  0010B2  AE0F               	btfss	SendByteBBSPI@output,7,c
   848  0010B4  D002               	goto	l35
   849                           
   850                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
   851  0010B6  8A8B               	bsf	3979,5,c	;volatile
   852  0010B8  D001               	goto	l36
   853  0010BA                     l35:
   854                           
   855                           ;BBSPI_LCD.c: 101: else
   856                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
   857  0010BA  9A8B               	bcf	3979,5,c	;volatile
   858  0010BC                     l36:
   859                           
   860                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
   861  0010BC  A88B               	btfss	3979,4,c	;volatile
   862  0010BE  D003               	goto	l748
   863                           
   864                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
   865  0010C0  80D8               	bsf	status,0,c
   866  0010C2  3611               	rlcf	SendByteBBSPI@input,f,c
   867  0010C4  D003               	goto	l750
   868  0010C6                     l748:
   869                           
   870                           ;BBSPI_LCD.c: 106: else
   871                           ;BBSPI_LCD.c: 107: input = input << 1;
   872  0010C6  5011               	movf	SendByteBBSPI@input,w,c
   873  0010C8  2411               	addwf	SendByteBBSPI@input,w,c
   874  0010CA  6E11               	movwf	SendByteBBSPI@input,c
   875  0010CC                     l750:
   876                           
   877                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
   878  0010CC  868B               	bsf	3979,3,c	;volatile
   879                           
   880                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
   881  0010CE  F000               	nop	
   882  0010D0  F000               	nop	
   883  0010D2  F000               	nop	
   884  0010D4  F000               	nop	
   885  0010D6  F000               	nop	
   886  0010D8  F000               	nop	
   887                           
   888                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
   889  0010DA  F000               	nop	
   890  0010DC  F000               	nop	
   891  0010DE  F000               	nop	
   892  0010E0  F000               	nop	
   893  0010E2  F000               	nop	
   894  0010E4  F000               	nop	
   895                           
   896                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
   897  0010E6  968B               	bcf	3979,3,c	;volatile
   898                           
   899                           ;BBSPI_LCD.c: 112: output <<= 1;
   900  0010E8  90D8               	bcf	status,0,c
   901  0010EA  360F               	rlcf	SendByteBBSPI@output,f,c
   902  0010EC  2A10               	incf	SendByteBBSPI@bitcount,f,c
   903  0010EE  D7DD               	goto	l740
   904  0010F0                     __end_of_SendByteBBSPI:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           wreg	equ	0xFE8
   911                           status	equ	0xFD8
   912                           
   913 ;; *************** function _InitBBSPI *****************
   914 ;; Defined at:
   915 ;;		line 70 in file "BBSPI_LCD.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		None
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_LCDInit
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text9
   944  00127A                     __ptext9:
   945                           	opt stack 0
   946  00127A                     _InitBBSPI:
   947                           	opt stack 27
   948                           
   949                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
   950                           
   951                           ;incstack = 0
   952  00127A  9492               	bcf	3986,2,c	;volatile
   953                           
   954                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
   955  00127C  8894               	bsf	3988,4,c	;volatile
   956                           
   957                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
   958  00127E  9A94               	bcf	3988,5,c	;volatile
   959                           
   960                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
   961  001280  9694               	bcf	3988,3,c	;volatile
   962                           
   963                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
   964  001282  8489               	bsf	3977,2,c	;volatile
   965                           
   966                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
   967  001284  888B               	bsf	3979,4,c	;volatile
   968                           
   969                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
   970  001286  9A8B               	bcf	3979,5,c	;volatile
   971                           
   972                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
   973  001288  968B               	bcf	3979,3,c	;volatile
   974  00128A  0012               	return		;funcret
   975  00128C                     __end_of_InitBBSPI:
   976                           	opt stack 0
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           wreg	equ	0xFE8
   982                           status	equ	0xFD8
   983                           
   984 ;; *************** function _TestInterrupt *****************
   985 ;; Defined at:
   986 ;;		line 52 in file "Modules.h"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		None
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text10
  1015  00129A                     __ptext10:
  1016                           	opt stack 0
  1017  00129A                     _TestInterrupt:
  1018                           	opt stack 29
  1019                           
  1020                           ;Modules.h: 55: INTCON2bits.INTEDG0=0;
  1021                           
  1022                           ;incstack = 0
  1023  00129A  9CF1               	bcf	intcon2,6,c	;volatile
  1024                           
  1025                           ;Modules.h: 56: INTCON3bits.INT2IE=1;
  1026  00129C  88F0               	bsf	intcon3,4,c	;volatile
  1027                           
  1028                           ;Modules.h: 57: INTCONbits.RBIE=1;
  1029  00129E  86F2               	bsf	intcon,3,c	;volatile
  1030                           
  1031                           ;Modules.h: 58: INTCONbits.INT0IE=1;
  1032  0012A0  88F2               	bsf	intcon,4,c	;volatile
  1033                           
  1034                           ;Modules.h: 60: INTCONbits.GIE=1;
  1035  0012A2  8EF2               	bsf	intcon,7,c	;volatile
  1036                           
  1037                           ;Modules.h: 61: INTCONbits.PEIE_GIEL=1;
  1038  0012A4  8CF2               	bsf	intcon,6,c	;volatile
  1039  0012A6  0012               	return		;funcret
  1040  0012A8                     __end_of_TestInterrupt:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           intcon	equ	0xFF2
  1047                           intcon2	equ	0xFF1
  1048                           intcon3	equ	0xFF0
  1049                           wreg	equ	0xFE8
  1050                           status	equ	0xFD8
  1051                           
  1052 ;; *************** function _InitConf *****************
  1053 ;; Defined at:
  1054 ;;		line 63 in file "Modules.h"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;Total ram usage:        0 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    2
  1075 ;; This function calls:
  1076 ;;		_ClockSetup
  1077 ;;		_DigitalIO
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text11
  1084  0012A8                     __ptext11:
  1085                           	opt stack 0
  1086  0012A8                     _InitConf:
  1087                           	opt stack 28
  1088                           
  1089                           ;Modules.h: 65: ClockSetup();
  1090                           
  1091                           ;incstack = 0
  1092  0012A8  EC59  F009         	call	_ClockSetup	;wreg free
  1093                           
  1094                           ;Modules.h: 66: DigitalIO();
  1095  0012AC  ECD7  F008         	call	_DigitalIO	;wreg free
  1096  0012B0  0012               	return		;funcret
  1097  0012B2                     __end_of_InitConf:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           intcon	equ	0xFF2
  1104                           intcon2	equ	0xFF1
  1105                           intcon3	equ	0xFF0
  1106                           wreg	equ	0xFE8
  1107                           status	equ	0xFD8
  1108                           
  1109 ;; *************** function _DigitalIO *****************
  1110 ;; Defined at:
  1111 ;;		line 35 in file "Modules.h"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_InitConf
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text12
  1140  0011AE                     __ptext12:
  1141                           	opt stack 0
  1142  0011AE                     _DigitalIO:
  1143                           	opt stack 28
  1144                           
  1145                           ;Modules.h: 37: LATA=0;
  1146                           
  1147                           ;incstack = 0
  1148  0011AE  0E00               	movlw	0
  1149  0011B0  6E89               	movwf	3977,c	;volatile
  1150                           
  1151                           ;Modules.h: 38: PORTA=0;
  1152  0011B2  0E00               	movlw	0
  1153  0011B4  6E80               	movwf	3968,c	;volatile
  1154                           
  1155                           ;Modules.h: 39: TRISA=0X20;
  1156  0011B6  0E20               	movlw	32
  1157  0011B8  6E92               	movwf	3986,c	;volatile
  1158                           
  1159                           ;Modules.h: 40: ADCON1=0X0F;
  1160  0011BA  0E0F               	movlw	15
  1161  0011BC  6EC1               	movwf	4033,c	;volatile
  1162                           
  1163                           ;Modules.h: 42: LATB=0;
  1164  0011BE  0E00               	movlw	0
  1165  0011C0  6E8A               	movwf	3978,c	;volatile
  1166                           
  1167                           ;Modules.h: 43: PORTB=0;
  1168  0011C2  0E00               	movlw	0
  1169  0011C4  6E81               	movwf	3969,c	;volatile
  1170                           
  1171                           ;Modules.h: 44: TRISB=0X01|0X10;
  1172  0011C6  0E11               	movlw	17
  1173  0011C8  6E93               	movwf	3987,c	;volatile
  1174                           
  1175                           ;Modules.h: 46: LATD=0;
  1176  0011CA  0E00               	movlw	0
  1177  0011CC  6E8C               	movwf	3980,c	;volatile
  1178                           
  1179                           ;Modules.h: 47: PORTD=0;
  1180  0011CE  0E00               	movlw	0
  1181  0011D0  6E83               	movwf	3971,c	;volatile
  1182                           
  1183                           ;Modules.h: 48: TRISD=0;
  1184  0011D2  0E00               	movlw	0
  1185  0011D4  6E95               	movwf	3989,c	;volatile
  1186                           
  1187                           ;Modules.h: 49: TRISD&=~(0xFF);
  1188  0011D6  0E00               	movlw	0
  1189  0011D8  6E95               	movwf	3989,c	;volatile
  1190                           
  1191                           ;Modules.h: 50: PSPCON=0;
  1192  0011DA  0E00               	movlw	0
  1193  0011DC  6EB0               	movwf	4016,c	;volatile
  1194  0011DE  0012               	return		;funcret
  1195  0011E0                     __end_of_DigitalIO:
  1196                           	opt stack 0
  1197                           tblptru	equ	0xFF8
  1198                           tblptrh	equ	0xFF7
  1199                           tblptrl	equ	0xFF6
  1200                           tablat	equ	0xFF5
  1201                           intcon	equ	0xFF2
  1202                           intcon2	equ	0xFF1
  1203                           intcon3	equ	0xFF0
  1204                           wreg	equ	0xFE8
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function _ClockSetup *****************
  1208 ;; Defined at:
  1209 ;;		line 27 in file "Modules.h"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_InitConf
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text13
  1238  0012B2                     __ptext13:
  1239                           	opt stack 0
  1240  0012B2                     _ClockSetup:
  1241                           	opt stack 28
  1242                           
  1243                           ;Modules.h: 29: OSCCON=0x60|0x00;
  1244                           
  1245                           ;incstack = 0
  1246  0012B2  0E60               	movlw	96
  1247  0012B4  6ED3               	movwf	4051,c	;volatile
  1248                           
  1249                           ;Modules.h: 30: OSCTUNE = 0x00;
  1250  0012B6  0E00               	movlw	0
  1251  0012B8  6E9B               	movwf	3995,c	;volatile
  1252  0012BA  0012               	return		;funcret
  1253  0012BC                     __end_of_ClockSetup:
  1254                           	opt stack 0
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           intcon	equ	0xFF2
  1260                           intcon2	equ	0xFF1
  1261                           intcon3	equ	0xFF0
  1262                           wreg	equ	0xFE8
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _portb_interrupt *****************
  1266 ;; Defined at:
  1267 ;;		line 43 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;Total ram usage:       14 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		Interrupt level 2
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	intcode
  1295  000008                     __pintcode:
  1296                           	opt stack 0
  1297  000008                     _portb_interrupt:
  1298                           	opt stack 25
  1299                           
  1300                           ;incstack = 0
  1301  000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1302  00000A  CFFA F001          	movff	pclath,??_portb_interrupt
  1303  00000E  CFFB F002          	movff	pclatu,??_portb_interrupt+1
  1304  000012  ED11  F008         	call	int_func,f	;refresh shadow registers
  1305                           pclatu	equ	0xFFB
  1306                           pclath	equ	0xFFA
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           intcon	equ	0xFF2
  1312                           intcon2	equ	0xFF1
  1313                           intcon3	equ	0xFF0
  1314                           wreg	equ	0xFE8
  1315                           status	equ	0xFD8
  1316                           
  1317                           	psect	intcode_body
  1318  001022                     __pintcode_body:
  1319                           	opt stack 25
  1320  001022                     int_func:
  1321                           	opt stack 25
  1322  001022  0006               	pop		; remove dummy address from shadow register refresh
  1323  001024  CFE9 F003          	movff	fsr0l,??_portb_interrupt+2
  1324  001028  CFEA F004          	movff	fsr0h,??_portb_interrupt+3
  1325  00102C  CFE1 F005          	movff	fsr1l,??_portb_interrupt+4
  1326  001030  CFE2 F006          	movff	fsr1h,??_portb_interrupt+5
  1327  001034  CFD9 F007          	movff	fsr2l,??_portb_interrupt+6
  1328  001038  CFDA F008          	movff	fsr2h,??_portb_interrupt+7
  1329  00103C  CFF3 F009          	movff	prodl,??_portb_interrupt+8
  1330  001040  CFF4 F00A          	movff	prodh,??_portb_interrupt+9
  1331  001044  CFF6 F00B          	movff	tblptrl,??_portb_interrupt+10
  1332  001048  CFF7 F00C          	movff	tblptrh,??_portb_interrupt+11
  1333  00104C  CFF8 F00D          	movff	tblptru,??_portb_interrupt+12
  1334  001050  CFF5 F00E          	movff	tablat,??_portb_interrupt+13
  1335                           
  1336                           ;main.c: 45: INTCON&=~(0X80|0X40);
  1337  001054  0E3F               	movlw	63
  1338  001056  16F2               	andwf	intcon,f,c	;volatile
  1339                           
  1340                           ;main.c: 47: if(INTCON&0X02)
  1341  001058  A2F2               	btfss	intcon,1,c	;volatile
  1342  00105A  D002               	goto	i2l890
  1343                           
  1344                           ;main.c: 48: {
  1345                           ;main.c: 49: INTCON&=~0X02;
  1346  00105C  92F2               	bcf	intcon,1,c	;volatile
  1347                           
  1348                           ;main.c: 50: LATD++;
  1349  00105E  2A8C               	incf	3980,f,c	;volatile
  1350  001060                     i2l890:
  1351                           
  1352                           ;main.c: 52: }
  1353                           ;main.c: 54: INTCON|=(0X80|0X40);
  1354  001060  0EC0               	movlw	192
  1355  001062  12F2               	iorwf	intcon,f,c	;volatile
  1356  001064  C00E  FFF5         	movff	??_portb_interrupt+13,tablat
  1357  001068  C00D  FFF8         	movff	??_portb_interrupt+12,tblptru
  1358  00106C  C00C  FFF7         	movff	??_portb_interrupt+11,tblptrh
  1359  001070  C00B  FFF6         	movff	??_portb_interrupt+10,tblptrl
  1360  001074  C00A  FFF4         	movff	??_portb_interrupt+9,prodh
  1361  001078  C009  FFF3         	movff	??_portb_interrupt+8,prodl
  1362  00107C  C008  FFDA         	movff	??_portb_interrupt+7,fsr2h
  1363  001080  C007  FFD9         	movff	??_portb_interrupt+6,fsr2l
  1364  001084  C006  FFE2         	movff	??_portb_interrupt+5,fsr1h
  1365  001088  C005  FFE1         	movff	??_portb_interrupt+4,fsr1l
  1366  00108C  C004  FFEA         	movff	??_portb_interrupt+3,fsr0h
  1367  001090  C003  FFE9         	movff	??_portb_interrupt+2,fsr0l
  1368  001094  C002  FFFB         	movff	??_portb_interrupt+1,pclatu
  1369  001098  C001  FFFA         	movff	??_portb_interrupt,pclath
  1370  00109C  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1371  00109E  0011               	retfie		f
  1372  0010A0                     __end_of_portb_interrupt:
  1373                           	opt stack 0
  1374                           pclatu	equ	0xFFB
  1375                           pclath	equ	0xFFA
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           prodh	equ	0xFF4
  1381                           prodl	equ	0xFF3
  1382                           intcon	equ	0xFF2
  1383                           intcon2	equ	0xFF1
  1384                           intcon3	equ	0xFF0
  1385                           fsr0h	equ	0xFEA
  1386                           fsr0l	equ	0xFE9
  1387                           wreg	equ	0xFE8
  1388                           fsr1h	equ	0xFE2
  1389                           fsr1l	equ	0xFE1
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           pclatu	equ	0xFFB
  1394                           pclath	equ	0xFFA
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           tblptrl	equ	0xFF6
  1398                           tablat	equ	0xFF5
  1399                           prodh	equ	0xFF4
  1400                           prodl	equ	0xFF3
  1401                           intcon	equ	0xFF2
  1402                           intcon2	equ	0xFF1
  1403                           intcon3	equ	0xFF0
  1404                           fsr0h	equ	0xFEA
  1405                           fsr0l	equ	0xFE9
  1406                           wreg	equ	0xFE8
  1407                           fsr1h	equ	0xFE2
  1408                           fsr1l	equ	0xFE1
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413                           	psect	rparam
  1414  0000                     pclatu	equ	0xFFB
  1415                           pclath	equ	0xFFA
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           prodh	equ	0xFF4
  1421                           prodl	equ	0xFF3
  1422                           intcon	equ	0xFF2
  1423                           intcon2	equ	0xFF1
  1424                           intcon3	equ	0xFF0
  1425                           fsr0h	equ	0xFEA
  1426                           fsr0l	equ	0xFE9
  1427                           wreg	equ	0xFE8
  1428                           fsr1h	equ	0xFE2
  1429                           fsr1l	equ	0xFE1
  1430                           fsr2h	equ	0xFDA
  1431                           fsr2l	equ	0xFD9
  1432                           status	equ	0xFD8
  1433                           
  1434                           	psect	temp
  1435  000017                     btemp:
  1436                           	opt stack 0
  1437  000017                     	ds	1
  1438  0000                     int$flags	set	btemp
  1439                           pclatu	equ	0xFFB
  1440                           pclath	equ	0xFFA
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           prodh	equ	0xFF4
  1446                           prodl	equ	0xFF3
  1447                           intcon	equ	0xFF2
  1448                           intcon2	equ	0xFF1
  1449                           intcon3	equ	0xFF0
  1450                           fsr0h	equ	0xFEA
  1451                           fsr0l	equ	0xFE9
  1452                           wreg	equ	0xFE8
  1453                           fsr1h	equ	0xFE2
  1454                           fsr1l	equ	0xFE1
  1455                           fsr2h	equ	0xFDA
  1456                           fsr2l	equ	0xFD9
  1457                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[14]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _portb_interrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _portb_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _portb_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _portb_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _portb_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _portb_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _portb_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _portb_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _portb_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _portb_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _portb_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _portb_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _portb_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _portb_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _portb_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _portb_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _portb_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3184
                           _InitConf
                      _TestInterrupt
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                             20 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0     732
                                             19 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    1547
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                             17 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           1     1      0     732
                                             19 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                             17 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TestInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _portb_interrupt                                     14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitConf
     _ClockSetup
     _DigitalIO
   _TestInterrupt
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 _portb_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     16      16       1       23.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
ABS                  0      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM             F5F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jan 20 20:11:03 2017

                      l33 10B2                        l35 10BA               ?_LCDPutChar 0001  
                      l36 10BC                        u87 1142                        u97 10FA  
             ?_LCDPutInst 0001               __CFG_BORV$3 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
             __CFG_OSC$HS 000000              __CFG_CP4$OFF 000000              __CFG_CP5$OFF 000000  
   SendByteBBSPI@bitcount 0010              __CFG_CP6$OFF 000000              __CFG_CP7$OFF 000000  
                     l115 1298                       l740 10AA                       l750 10CC  
                     l748 10C6                       l960 120C                       l964 1220  
            __CFG_CPB$OFF 000000                       u107 1118                       u117 117A  
            __CFG_CPD$OFF 000000                       wreg 000FE8              __CFG_MODE$MC 000000  
         __end_of_LCDInit 113E              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    STR_1 1001                      STR_2 1012                      _LATA 000F89  
                    _LATB 000F8A                      _LATD 000F8C                      _main 128C  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr0l 000FE9  
                    fsr2h 000FDA                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0017                      pclat 000FFA          ?_WritePort_BBSPI 0012  
                    prodh 000FF4                      prodl 000FF3                      start 0016  
      __size_of_LCDPutStr 002A             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000010                _ClockSetup 12B2             __CFG_WAIT$OFF 000000  
                   ?_main 0001                     i2l890 1060                     _PORTA 000F80  
                   _PORTB 000F81                     _PORTD 000F83                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISD 000F95             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000             __CFG_WRT4$OFF 000000             __CFG_WRT5$OFF 000000  
           __CFG_WRT6$OFF 000000             __CFG_WRT7$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
         __end_of_ejemplo 120A            __CFG_EBTR3$OFF 000000            __CFG_EBTR4$OFF 000000  
          __CFG_EBTR5$OFF 000000          ?_portb_interrupt 0001            __CFG_EBTR6$OFF 000000  
          __CFG_EBTR7$OFF 000000             __CFG_WRTB$OFF 000000   __size_of_Port_BBSPIInit 001A  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
          __CFG_BOREN$OFF 000000                     tablat 000FF5       __size_of_LCDPutChar 0038  
     __size_of_LCDPutInst 0038                     status 000FD8           __initialization 1268  
            __end_of_main 129A          __end_of_InitConf 12B2                    ??_main 0017  
      __size_of_DigitalIO 0032             __activetblptr 000001                 ??_LCDInit 0015  
            LCDPutChar@ch 0014         __end_of_LCDPutStr 1234                    _ADCON1 000FC1  
      __size_of_InitBBSPI 0012              LCDPutInst@ch 0014           __CFG_BBSIZ$BB2K 000000  
                  _INTCON 000FF2                    _OSCCON 000FD3                    _PSPCON 000FB0  
            LCDPutStr@ptr 0015            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
   __end_of_TestInterrupt 12A8               ?_ClockSetup 0001                 ??_ejemplo 0017  
  Port_BBSPIInit@port_dir 0012              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 1268         __end_of_DigitalIO 11E0             ___rparam_used 000001  
  __size_of_SendByteBBSPI 0050            __pcstackCOMRAM 0001         __end_of_InitBBSPI 128C  
            ??_LCDPutChar 0014              ??_LCDPutInst 0014            _Port_BBSPIInit 1234  
               ?_InitConf 0001       __size_of_ClockSetup 000A        __end_of_LCDPutChar 1176  
      __end_of_LCDPutInst 11AE    __end_of_Port_BBSPIInit 124E                   _LCDInit 10F0  
           _SendByteBBSPI 10A0                   _OSCTUNE 000F9B                ??_InitConf 000F  
        WritePort_BBSPI@a 0012                   __Hparam 0000                   __Lparam 0000  
__size_of_WritePort_BBSPI 001A              __psmallconst 1000                   __pcinit 1268  
                 __ramtop 1000                   __ptext0 128C                   __ptext1 11E0  
                 __ptext2 120A                   __ptext3 113E                   __ptext4 10F0  
                 __ptext5 1234                   __ptext6 1176                   __ptext7 124E  
                 __ptext8 10A0                   __ptext9 127A                   _ejemplo 11E0  
          ?_SendByteBBSPI 0001           ?_Port_BBSPIInit 0001                 _LCDPutStr 120A  
          __pintcode_body 1022      end_of_initialization 1268                   int_func 1022  
__size_of_portb_interrupt 1098              ??_ClockSetup 000F                 _TRISAbits 000F92  
               _TRISCbits 000F94                 _TRISFbits 000F97                ?_LCDPutStr 0015  
     SendByteBBSPI@output 000F        __end_of_ClockSetup 12BC                 _DigitalIO 11AE  
         ??_SendByteBBSPI 000F                 _InitBBSPI 127A         ??_WritePort_BBSPI 0013  
     start_initialization 1268    __size_of_TestInterrupt 000E         __size_of_InitConf 000A  
              ?_DigitalIO 0001         ??_portb_interrupt 0001          __CFG_LPT1OSC$OFF 000000  
              ?_InitBBSPI 0001                  ?_LCDInit 0001               ??_LCDPutStr 0017  
       __CFG_CCP2MX$PORTC 000000                 __pintcode 0008          ??_Port_BBSPIInit 0012  
           _TestInterrupt 129A                  ?_ejemplo 0001               __smallconst 1000  
                _LATAbits 000F89                  _LATCbits 000F8B                  _LATFbits 000F8E  
   __CFG_DATABW$DATA16BIT 000000               ??_DigitalIO 000F          __CFG_WDTPS$32768 000000  
          ?_TestInterrupt 0001         __CFG_ECCPMX$PORTE 000000               ??_InitBBSPI 000F  
      SendByteBBSPI@input 0011          __size_of_LCDInit 004E               _INTCON2bits 000FF1  
             _INTCON3bits 000FF0                  _InitConf 12A8                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 1000           _WritePort_BBSPI 124E  
        __size_of_ejemplo 002A                  __ptext10 129A                  __ptext11 12A8  
                __ptext12 11AE                  __ptext13 12B2           _portb_interrupt 0008  
           __size_of_main 000E           ??_TestInterrupt 000F                  int$flags 0017  
              _LCDPutChar 113E                _LCDPutInst 1176     __end_of_SendByteBBSPI 10F0  
   __CFG_ADDRBW$ADDR20BIT 000000                _INTCONbits 000FF2                  intlevel2 0000  
 __end_of_WritePort_BBSPI 1268   WritePort_BBSPI@port_add 0013   __end_of_portb_interrupt 10A0  
