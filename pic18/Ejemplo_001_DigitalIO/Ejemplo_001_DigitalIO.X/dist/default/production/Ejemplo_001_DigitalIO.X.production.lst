

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Jan 16 09:00:08 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     _ADCON1	set	4033
    27  0000                     _LATA	set	3977
    28  0000                     _LATAbits	set	3977
    29  0000                     _LATB	set	3978
    30  0000                     _LATCbits	set	3979
    31  0000                     _LATD	set	3980
    32  0000                     _LATFbits	set	3982
    33  0000                     _OSCCON	set	4051
    34  0000                     _OSCTUNE	set	3995
    35  0000                     _PIE1	set	3997
    36  0000                     _PIR1	set	3998
    37  0000                     _PORTA	set	3968
    38  0000                     _PORTB	set	3969
    39  0000                     _PORTD	set	3971
    40  0000                     _PR2	set	4043
    41  0000                     _T2CON	set	4042
    42  0000                     _TMR2	set	4044
    43  0000                     _TRISA	set	3986
    44  0000                     _TRISAbits	set	3986
    45  0000                     _TRISB	set	3987
    46  0000                     _TRISCbits	set	3988
    47  0000                     _TRISD	set	3989
    48  0000                     _TRISFbits	set	3991
    49                           
    50                           	psect	smallconst
    51  001000                     __psmallconst:
    52                           	opt stack 0
    53  001000  00                 	db	0
    54  001001                     STR_1:
    55  001001  45                 	db	69	;'E'
    56  001002  6A                 	db	106	;'j'
    57  001003  65                 	db	101	;'e'
    58  001004  6D                 	db	109	;'m'
    59  001005  70                 	db	112	;'p'
    60  001006  6C                 	db	108	;'l'
    61  001007  6F                 	db	111	;'o'
    62  001008  5F                 	db	95	;'_'
    63  001009  30                 	db	48	;'0'
    64  00100A  30                 	db	48	;'0'
    65  00100B  31                 	db	49	;'1'
    66  00100C  00                 	db	0
    67  00100D                     STR_2:
    68  00100D  44                 	db	68	;'D'
    69  00100E  69                 	db	105	;'i'
    70  00100F  67                 	db	103	;'g'
    71  001010  69                 	db	105	;'i'
    72  001011  74                 	db	116	;'t'
    73  001012  61                 	db	97	;'a'
    74  001013  6C                 	db	108	;'l'
    75  001014  20                 	db	32
    76  001015  49                 	db	73	;'I'
    77  001016  4F                 	db	79	;'O'
    78  001017  00                 	db	0
    79                           
    80                           ; #config settings
    81  001018  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           	psect	cinit
    84  0012DA                     __pcinit:
    85                           	opt stack 0
    86  0012DA                     start_initialization:
    87                           	opt stack 0
    88  0012DA                     __initialization:
    89                           	opt stack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (1 bytes)
    92  0012DA  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    93  0012DC                     end_of_initialization:
    94                           	opt stack 0
    95  0012DC                     __end_of__initialization:
    96                           	opt stack 0
    97  0012DC  0E00               	movlw	low (__Lsmallconst shr (0+16))
    98  0012DE  6EF8               	movwf	tblptru,c
    99  0012E0  0E10               	movlw	high __Lsmallconst
   100  0012E2  6EF7               	movwf	tblptrh,c
   101  0012E4  0100               	movlb	0
   102  0012E6  EF5B  F009         	goto	_main	;jump to C main() function
   103                           tblptru	equ	0xFF8
   104                           tblptrh	equ	0xFF7
   105                           
   106                           	psect	bssCOMRAM
   107  00000A                     __pbssCOMRAM:
   108                           	opt stack 0
   109  00000A                     _TempValue:
   110                           	opt stack 0
   111  00000A                     	ds	1
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	opt stack 0
   118  000001                     SendByteBBSPI@output:
   119                           	opt stack 0
   120  000001                     Timer2@TMR2Millis:
   121                           	opt stack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124  000001                     	ds	1
   125  000002                     SendByteBBSPI@bitcount:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x1
   129  000002                     	ds	1
   130  000003                     ??_Timer2:
   131  000003                     SendByteBBSPI@input:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0x2
   135  000003                     	ds	1
   136  000004                     Port_BBSPIInit@port_dir:
   137                           	opt stack 0
   138  000004                     WritePort_BBSPI@a:
   139                           	opt stack 0
   140  000004                     Timer2@iTMR2Millis:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x3
   144  000004                     	ds	1
   145  000005                     WritePort_BBSPI@port_add:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x4
   149  000005                     	ds	1
   150  000006                     ??_LCDPutInst:
   151  000006                     ??_Contador:
   152  000006                     ??_LCDPutChar:
   153                           
   154                           ; 1 bytes @ 0x5
   155  000006                     	ds	1
   156  000007                     LCDPutChar@ch:
   157                           	opt stack 0
   158  000007                     LCDPutInst@ch:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x6
   162  000007                     	ds	1
   163  000008                     ??_LCDInit:
   164  000008                     LCDPutStr@ptr:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x7
   168  000008                     	ds	2
   169  00000A                     tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           
   172                           ; 1 bytes @ 0x9
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;; *************** function _main *****************
   177 ;; Defined at:
   178 ;;		line 34 in file "main.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;		None
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   196 ;;Total ram usage:        0 bytes
   197 ;; Hardware stack levels required when called:    5
   198 ;; This function calls:
   199 ;;		_Contador
   200 ;;		_InitConf
   201 ;;		_ejemplo
   202 ;; This function is called by:
   203 ;;		Startup code after reset
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           	psect	text0
   208  0012B6                     __ptext0:
   209                           	opt stack 0
   210  0012B6                     _main:
   211                           	opt stack 26
   212                           
   213                           ;main.c: 36: InitConf();
   214                           
   215                           ;incstack = 0
   216  0012B6  EC75  F009         	call	_InitConf	;wreg free
   217                           
   218                           ;main.c: 37: ejemplo();
   219  0012BA  EC17  F009         	call	_ejemplo	;wreg free
   220                           
   221                           ;main.c: 38: LATD=0X01;
   222  0012BE  0E01               	movlw	1
   223  0012C0  6E8C               	movwf	3980,c	;volatile
   224  0012C2                     l1079:
   225                           
   226                           ;main.c: 40: {
   227                           ;main.c: 43: Contador();
   228  0012C2  EC90  F008         	call	_Contador	;wreg free
   229  0012C6  D7FD               	goto	l1079
   230  0012C8                     __end_of_main:
   231                           	opt stack 0
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           
   235 ;; *************** function _ejemplo *****************
   236 ;; Defined at:
   237 ;;		line 14 in file "Ejemplo.h"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used:    1
   257 ;; Hardware stack levels required when called:    4
   258 ;; This function calls:
   259 ;;		_LCDInit
   260 ;;		_LCDPutInst
   261 ;;		_LCDPutStr
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text1
   268  00122E                     __ptext1:
   269                           	opt stack 0
   270  00122E                     _ejemplo:
   271                           	opt stack 26
   272                           
   273                           ;Ejemplo.h: 16: LCDInit();
   274                           
   275                           ;incstack = 0
   276  00122E  EC0D  F008         	call	_LCDInit	;wreg free
   277                           
   278                           ;Ejemplo.h: 17: LCDPutInst(0x80);
   279  001232  0E80               	movlw	128
   280  001234  EC66  F008         	call	_LCDPutInst
   281                           
   282                           ;Ejemplo.h: 18: LCDPutStr("Ejemplo_001");
   283  001238  0E01               	movlw	low STR_1
   284  00123A  6E08               	movwf	LCDPutStr@ptr,c
   285  00123C  0E10               	movlw	high STR_1
   286  00123E  6E09               	movwf	LCDPutStr@ptr+1,c
   287  001240  EC2C  F009         	call	_LCDPutStr	;wreg free
   288                           
   289                           ;Ejemplo.h: 19: LCDPutInst(0xC0);
   290  001244  0EC0               	movlw	192
   291  001246  EC66  F008         	call	_LCDPutInst
   292                           
   293                           ;Ejemplo.h: 20: LCDPutStr("Digital IO");
   294  00124A  0E0D               	movlw	low STR_2
   295  00124C  6E08               	movwf	LCDPutStr@ptr,c
   296  00124E  0E10               	movlw	high STR_2
   297  001250  6E09               	movwf	LCDPutStr@ptr+1,c
   298  001252  EC2C  F009         	call	_LCDPutStr	;wreg free
   299  001256  0012               	return		;funcret
   300  001258                     __end_of_ejemplo:
   301                           	opt stack 0
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           
   305 ;; *************** function _LCDPutStr *****************
   306 ;; Defined at:
   307 ;;		line 198 in file "BBSPI_LCD.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;  ptr             2    7[COMRAM] PTR const unsigned char 
   310 ;;		 -> STR_2(11), STR_1(12), 
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;Total ram usage:        2 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    3
   329 ;; This function calls:
   330 ;;		_LCDPutChar
   331 ;; This function is called by:
   332 ;;		_ejemplo
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337  001258                     __ptext2:
   338                           	opt stack 0
   339  001258                     _LCDPutStr:
   340                           	opt stack 26
   341                           
   342                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   343                           
   344                           ;incstack = 0
   345  001258  D00A               	goto	l1051
   346  00125A                     l1047:
   347  00125A  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   348  00125E  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   349  001262                     	if	0	;tblptru may be non-zero
   350  001262                     	endif
   351  001262                     	if	0	;tblptru may be non-zero
   352  001262                     	endif
   353  001262  0008               	tblrd		*
   354  001264  50F5               	movf	tablat,w,c
   355  001266  EC3C  F008         	call	_LCDPutChar
   356  00126A  4A08               	infsnz	LCDPutStr@ptr,f,c
   357  00126C  2A09               	incf	LCDPutStr@ptr+1,f,c
   358  00126E                     l1051:
   359  00126E  C008  FFF6         	movff	LCDPutStr@ptr,tblptrl
   360  001272  C009  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   361  001276                     	if	0	;tblptru may be non-zero
   362  001276                     	endif
   363  001276                     	if	0	;tblptru may be non-zero
   364  001276                     	endif
   365  001276  0008               	tblrd		*
   366  001278  50F5               	movf	tablat,w,c
   367  00127A  0900               	iorlw	0
   368  00127C  B4D8               	btfsc	status,2,c
   369  00127E  0012               	return	
   370  001280  D7EC               	goto	l1047
   371  001282                     __end_of_LCDPutStr:
   372                           	opt stack 0
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           status	equ	0xFD8
   378                           
   379 ;; *************** function _LCDPutChar *****************
   380 ;; Defined at:
   381 ;;		line 160 in file "BBSPI_LCD.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;  ch              1    wreg     unsigned char 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  ch              1    6[COMRAM] unsigned char 
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;Total ram usage:        2 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    2
   402 ;; This function calls:
   403 ;;		_WritePort_BBSPI
   404 ;; This function is called by:
   405 ;;		_LCDPutStr
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text3
   410  001078                     __ptext3:
   411                           	opt stack 0
   412  001078                     _LCDPutChar:
   413                           	opt stack 26
   414                           
   415                           ;incstack = 0
   416                           ;LCDPutChar@ch stored from wreg
   417  001078  6E07               	movwf	LCDPutChar@ch,c
   418                           
   419                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(4000000/4000.0)));
   420  00107A  0E07               	movlw	7
   421  00107C  6E06               	movwf	??_LCDPutChar& (0+255),c
   422  00107E  0E7D               	movlw	125
   423  001080                     u257:
   424  001080  2EE8               	decfsz	wreg,f,c
   425  001082  D7FE               	goto	u257
   426  001084  2E06               	decfsz	??_LCDPutChar& (0+255),f,c
   427  001086  D7FC               	goto	u257
   428  001088  F000               	nop	
   429                           
   430                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   431  00108A  0E80               	movlw	128
   432  00108C  6E04               	movwf	WritePort_BBSPI@a,c
   433  00108E  0E12               	movlw	18
   434  001090  EC4E  F009         	call	_WritePort_BBSPI
   435                           
   436                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(4000000/4000.0)));
   437  001094  0EFA               	movlw	250
   438  001096                     u267:
   439  001096  F000               	nop	
   440  001098  2EE8               	decfsz	wreg,f,c
   441  00109A  D7FD               	goto	u267
   442                           
   443                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   444  00109C  C007  F004         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   445  0010A0  0E13               	movlw	19
   446  0010A2  EC4E  F009         	call	_WritePort_BBSPI
   447                           
   448                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(4000000/4000.0)));
   449  0010A6  0EFA               	movlw	250
   450  0010A8                     u277:
   451  0010A8  F000               	nop	
   452  0010AA  2EE8               	decfsz	wreg,f,c
   453  0010AC  D7FD               	goto	u277
   454                           
   455                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   456  0010AE  0EC0               	movlw	192
   457  0010B0  6E04               	movwf	WritePort_BBSPI@a,c
   458  0010B2  0E12               	movlw	18
   459  0010B4  EC4E  F009         	call	_WritePort_BBSPI
   460                           
   461                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(4000000/4000.0)));
   462  0010B8  0EFA               	movlw	250
   463  0010BA                     u287:
   464  0010BA  F000               	nop	
   465  0010BC  2EE8               	decfsz	wreg,f,c
   466  0010BE  D7FD               	goto	u287
   467                           
   468                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   469  0010C0  0E00               	movlw	0
   470  0010C2  6E04               	movwf	WritePort_BBSPI@a,c
   471  0010C4  0E12               	movlw	18
   472  0010C6  EC4E  F009         	call	_WritePort_BBSPI
   473  0010CA  0012               	return		;funcret
   474  0010CC                     __end_of_LCDPutChar:
   475                           	opt stack 0
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           wreg	equ	0xFE8
   481                           status	equ	0xFD8
   482                           
   483 ;; *************** function _LCDInit *****************
   484 ;; Defined at:
   485 ;;		line 45 in file "BBSPI_LCD.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;Total ram usage:        1 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    3
   506 ;; This function calls:
   507 ;;		_InitBBSPI
   508 ;;		_LCDPutInst
   509 ;;		_Port_BBSPIInit
   510 ;;		_WritePort_BBSPI
   511 ;; This function is called by:
   512 ;;		_ejemplo
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text4
   517  00101A                     __ptext4:
   518                           	opt stack 0
   519  00101A                     _LCDInit:
   520                           	opt stack 26
   521                           
   522                           ;BBSPI_LCD.c: 47: InitBBSPI();
   523                           
   524                           ;incstack = 0
   525  00101A  EC64  F009         	call	_InitBBSPI	;wreg free
   526                           
   527                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   528  00101E  9C97               	bcf	3991,6,c	;volatile
   529                           
   530                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   531  001020  9C8E               	bcf	3982,6,c	;volatile
   532                           
   533                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(4000000/4000.0)));
   534  001022  0E07               	movlw	7
   535  001024  6E08               	movwf	??_LCDInit& (0+255),c
   536  001026  0E7D               	movlw	125
   537  001028                     u297:
   538  001028  2EE8               	decfsz	wreg,f,c
   539  00102A  D7FE               	goto	u297
   540  00102C  2E08               	decfsz	??_LCDInit& (0+255),f,c
   541  00102E  D7FC               	goto	u297
   542  001030  F000               	nop	
   543                           
   544                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   545  001032  8C8E               	bsf	3982,6,c	;volatile
   546                           
   547                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   548  001034  0E00               	movlw	0
   549  001036  EC41  F009         	call	_Port_BBSPIInit
   550                           
   551                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   552  00103A  0E01               	movlw	1
   553  00103C  EC41  F009         	call	_Port_BBSPIInit
   554                           
   555                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   556  001040  0E00               	movlw	0
   557  001042  6E04               	movwf	WritePort_BBSPI@a,c
   558  001044  0E12               	movlw	18
   559  001046  EC4E  F009         	call	_WritePort_BBSPI
   560                           
   561                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(4000000/4000.0)));
   562  00104A  0E14               	movlw	20
   563  00104C  6E08               	movwf	??_LCDInit& (0+255),c
   564  00104E  0E7A               	movlw	122
   565  001050                     u307:
   566  001050  2EE8               	decfsz	wreg,f,c
   567  001052  D7FE               	goto	u307
   568  001054  2E08               	decfsz	??_LCDInit& (0+255),f,c
   569  001056  D7FC               	goto	u307
   570                           
   571                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   572  001058  0E32               	movlw	50
   573  00105A  EC66  F008         	call	_LCDPutInst
   574                           
   575                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   576  00105E  0E3C               	movlw	60
   577  001060  EC66  F008         	call	_LCDPutInst
   578                           
   579                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   580  001064  0E0C               	movlw	12
   581  001066  EC66  F008         	call	_LCDPutInst
   582                           
   583                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   584  00106A  0E01               	movlw	1
   585  00106C  EC66  F008         	call	_LCDPutInst
   586                           
   587                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   588  001070  0E06               	movlw	6
   589  001072  EC66  F008         	call	_LCDPutInst
   590  001076  0012               	return		;funcret
   591  001078                     __end_of_LCDInit:
   592                           	opt stack 0
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           wreg	equ	0xFE8
   598                           status	equ	0xFD8
   599                           
   600 ;; *************** function _Port_BBSPIInit *****************
   601 ;; Defined at:
   602 ;;		line 123 in file "BBSPI_LCD.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  port_dir        1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  port_dir        1    3[COMRAM] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    1
   623 ;; This function calls:
   624 ;;		_SendByteBBSPI
   625 ;; This function is called by:
   626 ;;		_LCDInit
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text5
   631  001282                     __ptext5:
   632                           	opt stack 0
   633  001282                     _Port_BBSPIInit:
   634                           	opt stack 27
   635                           
   636                           ;incstack = 0
   637                           ;Port_BBSPIInit@port_dir stored from wreg
   638  001282  6E04               	movwf	Port_BBSPIInit@port_dir,c
   639                           
   640                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   641  001284  9489               	bcf	3977,2,c	;volatile
   642                           
   643                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   644  001286  0E40               	movlw	64
   645  001288  ECB9  F008         	call	_SendByteBBSPI
   646                           
   647                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   648  00128C  5004               	movf	Port_BBSPIInit@port_dir,w,c
   649  00128E  ECB9  F008         	call	_SendByteBBSPI
   650                           
   651                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   652  001292  0E00               	movlw	0
   653  001294  ECB9  F008         	call	_SendByteBBSPI
   654                           
   655                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   656  001298  8489               	bsf	3977,2,c	;volatile
   657  00129A  0012               	return		;funcret
   658  00129C                     __end_of_Port_BBSPIInit:
   659                           	opt stack 0
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           wreg	equ	0xFE8
   665                           status	equ	0xFD8
   666                           
   667 ;; *************** function _LCDPutInst *****************
   668 ;; Defined at:
   669 ;;		line 179 in file "BBSPI_LCD.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  ch              1    wreg     unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  ch              1    6[COMRAM] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;Total ram usage:        2 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    2
   690 ;; This function calls:
   691 ;;		_WritePort_BBSPI
   692 ;; This function is called by:
   693 ;;		_ejemplo
   694 ;;		_LCDInit
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text6
   699  0010CC                     __ptext6:
   700                           	opt stack 0
   701  0010CC                     _LCDPutInst:
   702                           	opt stack 27
   703                           
   704                           ;incstack = 0
   705                           ;LCDPutInst@ch stored from wreg
   706  0010CC  6E07               	movwf	LCDPutInst@ch,c
   707                           
   708                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(4000000/4000.0)));
   709  0010CE  0E07               	movlw	7
   710  0010D0  6E06               	movwf	??_LCDPutInst& (0+255),c
   711  0010D2  0E7D               	movlw	125
   712  0010D4                     u317:
   713  0010D4  2EE8               	decfsz	wreg,f,c
   714  0010D6  D7FE               	goto	u317
   715  0010D8  2E06               	decfsz	??_LCDPutInst& (0+255),f,c
   716  0010DA  D7FC               	goto	u317
   717  0010DC  F000               	nop	
   718                           
   719                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
   720  0010DE  0E00               	movlw	0
   721  0010E0  6E04               	movwf	WritePort_BBSPI@a,c
   722  0010E2  0E12               	movlw	18
   723  0010E4  EC4E  F009         	call	_WritePort_BBSPI
   724                           
   725                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(4000000/4000.0)));
   726  0010E8  0EFA               	movlw	250
   727  0010EA                     u327:
   728  0010EA  F000               	nop	
   729  0010EC  2EE8               	decfsz	wreg,f,c
   730  0010EE  D7FD               	goto	u327
   731                           
   732                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
   733  0010F0  C007  F004         	movff	LCDPutInst@ch,WritePort_BBSPI@a
   734  0010F4  0E13               	movlw	19
   735  0010F6  EC4E  F009         	call	_WritePort_BBSPI
   736                           
   737                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(4000000/4000.0)));
   738  0010FA  0EFA               	movlw	250
   739  0010FC                     u337:
   740  0010FC  F000               	nop	
   741  0010FE  2EE8               	decfsz	wreg,f,c
   742  001100  D7FD               	goto	u337
   743                           
   744                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
   745  001102  0E40               	movlw	64
   746  001104  6E04               	movwf	WritePort_BBSPI@a,c
   747  001106  0E12               	movlw	18
   748  001108  EC4E  F009         	call	_WritePort_BBSPI
   749                           
   750                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(4000000/4000.0)));
   751  00110C  0EFA               	movlw	250
   752  00110E                     u347:
   753  00110E  F000               	nop	
   754  001110  2EE8               	decfsz	wreg,f,c
   755  001112  D7FD               	goto	u347
   756                           
   757                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
   758  001114  0E00               	movlw	0
   759  001116  6E04               	movwf	WritePort_BBSPI@a,c
   760  001118  0E12               	movlw	18
   761  00111A  EC4E  F009         	call	_WritePort_BBSPI
   762  00111E  0012               	return		;funcret
   763  001120                     __end_of_LCDPutInst:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           wreg	equ	0xFE8
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _WritePort_BBSPI *****************
   773 ;; Defined at:
   774 ;;		line 144 in file "BBSPI_LCD.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  port_add        1    wreg     unsigned char 
   777 ;;  a               1    3[COMRAM] unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  port_add        1    4[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        2 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    1
   796 ;; This function calls:
   797 ;;		_SendByteBBSPI
   798 ;; This function is called by:
   799 ;;		_LCDInit
   800 ;;		_LCDPutChar
   801 ;;		_LCDPutInst
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text7
   806  00129C                     __ptext7:
   807                           	opt stack 0
   808  00129C                     _WritePort_BBSPI:
   809                           	opt stack 26
   810                           
   811                           ;incstack = 0
   812                           ;WritePort_BBSPI@port_add stored from wreg
   813  00129C  6E05               	movwf	WritePort_BBSPI@port_add,c
   814                           
   815                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
   816  00129E  9489               	bcf	3977,2,c	;volatile
   817                           
   818                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
   819  0012A0  0E40               	movlw	64
   820  0012A2  ECB9  F008         	call	_SendByteBBSPI
   821                           
   822                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
   823  0012A6  5005               	movf	WritePort_BBSPI@port_add,w,c
   824  0012A8  ECB9  F008         	call	_SendByteBBSPI
   825                           
   826                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
   827  0012AC  5004               	movf	WritePort_BBSPI@a,w,c
   828  0012AE  ECB9  F008         	call	_SendByteBBSPI
   829                           
   830                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
   831  0012B2  8489               	bsf	3977,2,c	;volatile
   832  0012B4  0012               	return		;funcret
   833  0012B6                     __end_of_WritePort_BBSPI:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           wreg	equ	0xFE8
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function _SendByteBBSPI *****************
   843 ;; Defined at:
   844 ;;		line 91 in file "BBSPI_LCD.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  output          1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  output          1    0[COMRAM] unsigned char 
   849 ;;  input           1    2[COMRAM] unsigned char 
   850 ;;  bitcount        1    1[COMRAM] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;Total ram usage:        3 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_Port_BBSPIInit
   870 ;;		_WritePort_BBSPI
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text8
   875  001172                     __ptext8:
   876                           	opt stack 0
   877  001172                     _SendByteBBSPI:
   878                           	opt stack 26
   879                           
   880                           ;incstack = 0
   881                           ;SendByteBBSPI@output stored from wreg
   882  001172  6E01               	movwf	SendByteBBSPI@output,c
   883                           
   884                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
   885                           ;BBSPI_LCD.c: 94: unsigned char input = output;
   886  001174  C001  F003         	movff	SendByteBBSPI@output,SendByteBBSPI@input
   887                           
   888                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
   889  001178  0E00               	movlw	0
   890  00117A  6E02               	movwf	SendByteBBSPI@bitcount,c
   891  00117C                     l763:
   892  00117C  0E07               	movlw	7
   893  00117E  6402               	cpfsgt	SendByteBBSPI@bitcount,c
   894  001180  D001               	goto	l121
   895  001182  0012               	return	
   896  001184                     l121:
   897                           
   898                           ;BBSPI_LCD.c: 97: {
   899                           ;BBSPI_LCD.c: 99: if(output & 0x80)
   900  001184  AE01               	btfss	SendByteBBSPI@output,7,c
   901  001186  D002               	goto	l123
   902                           
   903                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
   904  001188  8A8B               	bsf	3979,5,c	;volatile
   905  00118A  D001               	goto	l124
   906  00118C                     l123:
   907                           
   908                           ;BBSPI_LCD.c: 101: else
   909                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
   910  00118C  9A8B               	bcf	3979,5,c	;volatile
   911  00118E                     l124:
   912                           
   913                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
   914  00118E  A88B               	btfss	3979,4,c	;volatile
   915  001190  D003               	goto	l771
   916                           
   917                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
   918  001192  80D8               	bsf	status,0,c
   919  001194  3603               	rlcf	SendByteBBSPI@input,f,c
   920  001196  D003               	goto	l773
   921  001198                     l771:
   922                           
   923                           ;BBSPI_LCD.c: 106: else
   924                           ;BBSPI_LCD.c: 107: input = input << 1;
   925  001198  5003               	movf	SendByteBBSPI@input,w,c
   926  00119A  2403               	addwf	SendByteBBSPI@input,w,c
   927  00119C  6E03               	movwf	SendByteBBSPI@input,c
   928  00119E                     l773:
   929                           
   930                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
   931  00119E  868B               	bsf	3979,3,c	;volatile
   932                           
   933                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
   934  0011A0  F000               	nop	
   935  0011A2  F000               	nop	
   936  0011A4  F000               	nop	
   937  0011A6  F000               	nop	
   938  0011A8  F000               	nop	
   939  0011AA  F000               	nop	
   940                           
   941                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
   942  0011AC  F000               	nop	
   943  0011AE  F000               	nop	
   944  0011B0  F000               	nop	
   945  0011B2  F000               	nop	
   946  0011B4  F000               	nop	
   947  0011B6  F000               	nop	
   948                           
   949                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
   950  0011B8  968B               	bcf	3979,3,c	;volatile
   951                           
   952                           ;BBSPI_LCD.c: 112: output <<= 1;
   953  0011BA  90D8               	bcf	status,0,c
   954  0011BC  3601               	rlcf	SendByteBBSPI@output,f,c
   955  0011BE  2A02               	incf	SendByteBBSPI@bitcount,f,c
   956  0011C0  D7DD               	goto	l763
   957  0011C2                     __end_of_SendByteBBSPI:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           wreg	equ	0xFE8
   964                           status	equ	0xFD8
   965                           
   966 ;; *************** function _InitBBSPI *****************
   967 ;; Defined at:
   968 ;;		line 70 in file "BBSPI_LCD.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_LCDInit
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text9
   996  0012C8                     __ptext9:
   997                           	opt stack 0
   998  0012C8                     _InitBBSPI:
   999                           	opt stack 28
  1000                           
  1001                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
  1002                           
  1003                           ;incstack = 0
  1004  0012C8  9492               	bcf	3986,2,c	;volatile
  1005                           
  1006                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
  1007  0012CA  8894               	bsf	3988,4,c	;volatile
  1008                           
  1009                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
  1010  0012CC  9A94               	bcf	3988,5,c	;volatile
  1011                           
  1012                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
  1013  0012CE  9694               	bcf	3988,3,c	;volatile
  1014                           
  1015                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
  1016  0012D0  8489               	bsf	3977,2,c	;volatile
  1017                           
  1018                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
  1019  0012D2  888B               	bsf	3979,4,c	;volatile
  1020                           
  1021                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
  1022  0012D4  9A8B               	bcf	3979,5,c	;volatile
  1023                           
  1024                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
  1025  0012D6  968B               	bcf	3979,3,c	;volatile
  1026  0012D8  0012               	return		;funcret
  1027  0012DA                     __end_of_InitBBSPI:
  1028                           	opt stack 0
  1029                           tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           wreg	equ	0xFE8
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _InitConf *****************
  1037 ;; Defined at:
  1038 ;;		line 67 in file "Modules.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    1
  1059 ;; This function calls:
  1060 ;;		_ClockSetup
  1061 ;;		_DigitalIO
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text10
  1068  0012EA                     __ptext10:
  1069                           	opt stack 0
  1070  0012EA                     _InitConf:
  1071                           	opt stack 29
  1072                           
  1073                           ;Modules.h: 69: ClockSetup();
  1074                           
  1075                           ;incstack = 0
  1076  0012EA  EC7A  F009         	call	_ClockSetup	;wreg free
  1077                           
  1078                           ;Modules.h: 70: DigitalIO();
  1079  0012EE  EC00  F009         	call	_DigitalIO	;wreg free
  1080  0012F2  0012               	return		;funcret
  1081  0012F4                     __end_of_InitConf:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           wreg	equ	0xFE8
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _DigitalIO *****************
  1091 ;; Defined at:
  1092 ;;		line 50 in file "Modules.h"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_InitConf
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text11
  1120  001200                     __ptext11:
  1121                           	opt stack 0
  1122  001200                     _DigitalIO:
  1123                           	opt stack 29
  1124                           
  1125                           ;Modules.h: 52: LATA=0;
  1126                           
  1127                           ;incstack = 0
  1128  001200  0E00               	movlw	0
  1129  001202  6E89               	movwf	3977,c	;volatile
  1130                           
  1131                           ;Modules.h: 53: PORTA=0;
  1132  001204  0E00               	movlw	0
  1133  001206  6E80               	movwf	3968,c	;volatile
  1134                           
  1135                           ;Modules.h: 54: TRISA=0X20;
  1136  001208  0E20               	movlw	32
  1137  00120A  6E92               	movwf	3986,c	;volatile
  1138                           
  1139                           ;Modules.h: 55: ADCON1=0X0F;
  1140  00120C  0E0F               	movlw	15
  1141  00120E  6EC1               	movwf	4033,c	;volatile
  1142                           
  1143                           ;Modules.h: 57: LATB=0;
  1144  001210  0E00               	movlw	0
  1145  001212  6E8A               	movwf	3978,c	;volatile
  1146                           
  1147                           ;Modules.h: 58: PORTB=0;
  1148  001214  0E00               	movlw	0
  1149  001216  6E81               	movwf	3969,c	;volatile
  1150                           
  1151                           ;Modules.h: 59: TRISB=0X01;
  1152  001218  0E01               	movlw	1
  1153  00121A  6E93               	movwf	3987,c	;volatile
  1154                           
  1155                           ;Modules.h: 61: LATD=0;
  1156  00121C  0E00               	movlw	0
  1157  00121E  6E8C               	movwf	3980,c	;volatile
  1158                           
  1159                           ;Modules.h: 62: PORTD=0;
  1160  001220  0E00               	movlw	0
  1161  001222  6E83               	movwf	3971,c	;volatile
  1162                           
  1163                           ;Modules.h: 63: TRISD=0;
  1164  001224  0E00               	movlw	0
  1165  001226  6E95               	movwf	3989,c	;volatile
  1166                           
  1167                           ;Modules.h: 64: TRISD&=~(0xFF);
  1168  001228  0E00               	movlw	0
  1169  00122A  6E95               	movwf	3989,c	;volatile
  1170  00122C  0012               	return		;funcret
  1171  00122E                     __end_of_DigitalIO:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           wreg	equ	0xFE8
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _ClockSetup *****************
  1181 ;; Defined at:
  1182 ;;		line 26 in file "Modules.h"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_InitConf
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text12
  1210  0012F4                     __ptext12:
  1211                           	opt stack 0
  1212  0012F4                     _ClockSetup:
  1213                           	opt stack 29
  1214                           
  1215                           ;Modules.h: 28: OSCCON=0x60|0x02;
  1216                           
  1217                           ;incstack = 0
  1218  0012F4  0E62               	movlw	98
  1219  0012F6  6ED3               	movwf	4051,c	;volatile
  1220                           
  1221                           ;Modules.h: 29: OSCTUNE = 0x00;
  1222  0012F8  0E00               	movlw	0
  1223  0012FA  6E9B               	movwf	3995,c	;volatile
  1224  0012FC  0012               	return		;funcret
  1225  0012FE                     __end_of_ClockSetup:
  1226                           	opt stack 0
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           wreg	equ	0xFE8
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _Contador *****************
  1235 ;; Defined at:
  1236 ;;		line 57 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;Total ram usage:        2 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    1
  1257 ;; This function calls:
  1258 ;;		_Timer2
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text13
  1265  001120                     __ptext13:
  1266                           	opt stack 0
  1267  001120                     _Contador:
  1268                           	opt stack 29
  1269                           
  1270                           ;main.c: 60: if(((PORTA&0X20)^0X20) )
  1271                           
  1272                           ;incstack = 0
  1273  001120  5080               	movf	3968,w,c	;volatile
  1274  001122  0B20               	andlw	32
  1275  001124  6E06               	movwf	??_Contador& (0+255),c
  1276  001126  6A07               	clrf	(??_Contador+1)& (0+255),c
  1277  001128  0E20               	movlw	32
  1278  00112A  1A06               	xorwf	??_Contador,f,c
  1279  00112C  0E00               	movlw	0
  1280  00112E  1A07               	xorwf	??_Contador+1,f,c
  1281  001130  5006               	movf	??_Contador,w,c
  1282  001132  1007               	iorwf	??_Contador+1,w,c
  1283  001134  B4D8               	btfsc	status,2,c
  1284  001136  D007               	goto	l1065
  1285                           
  1286                           ;main.c: 61: {
  1287                           ;main.c: 62: TempValue--;
  1288  001138  060A               	decf	_TempValue,f,c	;volatile
  1289                           
  1290                           ;main.c: 63: Timer2(200);
  1291  00113A  0E00               	movlw	0
  1292  00113C  6E02               	movwf	Timer2@TMR2Millis+1,c
  1293  00113E  0EC8               	movlw	200
  1294  001140  6E01               	movwf	Timer2@TMR2Millis,c
  1295  001142  ECE1  F008         	call	_Timer2	;wreg free
  1296  001146                     l1065:
  1297                           
  1298                           ;main.c: 64: }
  1299                           ;main.c: 65: if(((PORTB&0X01)^0X01) )
  1300  001146  5081               	movf	3969,w,c	;volatile
  1301  001148  0B01               	andlw	1
  1302  00114A  6E06               	movwf	??_Contador& (0+255),c
  1303  00114C  6A07               	clrf	(??_Contador+1)& (0+255),c
  1304  00114E  0E01               	movlw	1
  1305  001150  1A06               	xorwf	??_Contador,f,c
  1306  001152  0E00               	movlw	0
  1307  001154  1A07               	xorwf	??_Contador+1,f,c
  1308  001156  5006               	movf	??_Contador,w,c
  1309  001158  1007               	iorwf	??_Contador+1,w,c
  1310  00115A  B4D8               	btfsc	status,2,c
  1311  00115C  D007               	goto	l1071
  1312                           
  1313                           ;main.c: 66: {
  1314                           ;main.c: 67: TempValue++;
  1315  00115E  2A0A               	incf	_TempValue,f,c	;volatile
  1316                           
  1317                           ;main.c: 68: Timer2(200);
  1318  001160  0E00               	movlw	0
  1319  001162  6E02               	movwf	Timer2@TMR2Millis+1,c
  1320  001164  0EC8               	movlw	200
  1321  001166  6E01               	movwf	Timer2@TMR2Millis,c
  1322  001168  ECE1  F008         	call	_Timer2	;wreg free
  1323  00116C                     l1071:
  1324                           
  1325                           ;main.c: 69: }
  1326                           ;main.c: 70: LATD=TempValue;
  1327  00116C  C00A  FF8C         	movff	_TempValue,3980	;volatile
  1328  001170  0012               	return		;funcret
  1329  001172                     __end_of_Contador:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           wreg	equ	0xFE8
  1336                           status	equ	0xFD8
  1337                           
  1338 ;; *************** function _Timer2 *****************
  1339 ;; Defined at:
  1340 ;;		line 31 in file "Modules.h"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  TMR2Millis      2    0[COMRAM] volatile int 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  iTMR2Millis     2    3[COMRAM] volatile int 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        5 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_Contador
  1364 ;;		_ShiftLeds
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text14
  1369  0011C2                     __ptext14:
  1370                           	opt stack 0
  1371  0011C2                     _Timer2:
  1372                           	opt stack 29
  1373                           
  1374                           ;Modules.h: 33: volatile int iTMR2Millis;
  1375                           ;Modules.h: 34: for(iTMR2Millis=0;iTMR2Millis<TMR2Millis;iTMR2Millis++)
  1376                           
  1377                           ;incstack = 0
  1378  0011C2  0E00               	movlw	0
  1379  0011C4  6E05               	movwf	Timer2@iTMR2Millis+1,c	;volatile
  1380  0011C6  0E00               	movlw	0
  1381  0011C8  6E04               	movwf	Timer2@iTMR2Millis,c	;volatile
  1382  0011CA  D00F               	goto	l1015
  1383  0011CC                     l1007:
  1384                           
  1385                           ;Modules.h: 35: {
  1386                           ;Modules.h: 36: PR2=49;
  1387  0011CC  0E31               	movlw	49
  1388  0011CE  6ECB               	movwf	4043,c	;volatile
  1389                           
  1390                           ;Modules.h: 37: T2CON=(0X04<<3)|0X01;
  1391  0011D0  0E21               	movlw	33
  1392  0011D2  6ECA               	movwf	4042,c	;volatile
  1393                           
  1394                           ;Modules.h: 38: TMR2=0;
  1395  0011D4  0E00               	movlw	0
  1396  0011D6  6ECC               	movwf	4044,c	;volatile
  1397                           
  1398                           ;Modules.h: 39: T2CON|=0X04;
  1399  0011D8  84CA               	bsf	4042,2,c	;volatile
  1400                           
  1401                           ;Modules.h: 40: PIE1|=0X02;
  1402  0011DA  829D               	bsf	3997,1,c	;volatile
  1403  0011DC                     l50:
  1404  0011DC  A29E               	btfss	3998,1,c	;volatile
  1405  0011DE  D7FE               	goto	l50
  1406                           
  1407                           ;Modules.h: 42: PIR1&=~0X02;
  1408  0011E0  929E               	bcf	3998,1,c	;volatile
  1409                           
  1410                           ;Modules.h: 43: T2CON&=~0X04;
  1411  0011E2  94CA               	bcf	4042,2,c	;volatile
  1412                           
  1413                           ;Modules.h: 44: PIE1&=~0X02;
  1414  0011E4  929D               	bcf	3997,1,c	;volatile
  1415  0011E6  4A04               	infsnz	Timer2@iTMR2Millis,f,c	;volatile
  1416  0011E8  2A05               	incf	Timer2@iTMR2Millis+1,f,c	;volatile
  1417  0011EA                     l1015:
  1418  0011EA  5001               	movf	Timer2@TMR2Millis,w,c	;volatile
  1419  0011EC  5C04               	subwf	Timer2@iTMR2Millis,w,c	;volatile
  1420  0011EE  5005               	movf	Timer2@iTMR2Millis+1,w,c	;volatile
  1421  0011F0  0A80               	xorlw	128
  1422  0011F2  6E03               	movwf	??_Timer2& (0+255),c
  1423  0011F4  5002               	movf	Timer2@TMR2Millis+1,w,c	;volatile
  1424  0011F6  0A80               	xorlw	128
  1425  0011F8  5803               	subwfb	??_Timer2& (0+255),w,c
  1426  0011FA  B0D8               	btfsc	status,0,c
  1427  0011FC  0012               	return	
  1428  0011FE  D7E6               	goto	l1007
  1429  001200                     __end_of_Timer2:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           wreg	equ	0xFE8
  1436                           status	equ	0xFD8
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           wreg	equ	0xFE8
  1442                           status	equ	0xFD8
  1443                           
  1444                           	psect	rparam
  1445  0000                     tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           wreg	equ	0xFE8
  1450                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[11]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _Contador->_Timer2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3486
                           _Contador
                           _InitConf
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                              7 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1547
                                              7 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           2     2      0     732
                                              5 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Contador                                             2     2      0     302
                                              5 COMRAM     2     2      0
                             _Timer2
 ---------------------------------------------------------------------------------
 (2) _Timer2                                               5     3      2     302
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Contador
     _Timer2
   _InitConf
     _ClockSetup
     _DigitalIO
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       A       1       10.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      32        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Jan 16 09:00:08 2017

                      l50 11DC               ?_LCDPutChar 0001               ?_LCDPutInst 0001  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000              __CFG_CP4$OFF 000000  
            __CFG_CP5$OFF 000000     SendByteBBSPI@bitcount 0002              __CFG_CP6$OFF 000000  
            __CFG_CP7$OFF 000000                       l121 1184                       l123 118C  
                     l124 118E                       l771 1198                       l763 117C  
                     l773 119E              __CFG_CPB$OFF 000000                       u307 1050  
                     u317 10D4                       _PR2 000FCB                       u327 10EA  
                     u337 10FC                       u257 1080              __CFG_CPD$OFF 000000  
                     u347 110E                       u267 1096                       u277 10A8  
                     u287 10BA                       u297 1028                       wreg 000FE8  
            __CFG_MODE$MC 000000           __end_of_LCDInit 1078              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1007 11CC                      l1015 11EA  
                    l1051 126E                      l1071 116C                      l1047 125A  
                    l1065 1146                      l1079 12C2                      STR_1 1001  
                    STR_2 100D                      _LATA 000F89                      _LATB 000F8A  
                    _LATD 000F8C                      _PIE1 000F9D                      _PIR1 000F9E  
                    _TMR2 000FCC                      _main 12B6          ?_WritePort_BBSPI 0004  
                    start 0000        __size_of_LCDPutStr 002A             __CFG_IESO$OFF 000000  
           __CFG_MCLRE$ON 000000              ___param_bank 000010                _ClockSetup 12F4  
           __CFG_WAIT$OFF 000000                     ?_main 0001                     _T2CON 000FCA  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTD 000F83  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000             __CFG_WRT4$OFF 000000  
           __CFG_WRT5$OFF 000000             __CFG_WRT6$OFF 000000             __CFG_WRT7$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000           __end_of_ejemplo 1258            __CFG_EBTR3$OFF 000000  
          __CFG_EBTR4$OFF 000000            __CFG_EBTR5$OFF 000000            __CFG_EBTR6$OFF 000000  
          __CFG_EBTR7$OFF 000000             __CFG_WRTB$OFF 000000   __size_of_Port_BBSPIInit 001A  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
          __CFG_BOREN$OFF 000000                     tablat 000FF5       __size_of_LCDPutChar 0054  
     __size_of_LCDPutInst 0054                     status 000FD8           __initialization 12DA  
        __end_of_Contador 1172              __end_of_main 12C8          __end_of_InitConf 12F4  
                  ??_main 000A        __size_of_DigitalIO 002E             __activetblptr 000001  
               ??_LCDInit 0008              LCDPutChar@ch 0007         __end_of_LCDPutStr 1282  
                  _ADCON1 000FC1        __size_of_InitBBSPI 0012              LCDPutInst@ch 0007  
         __CFG_BBSIZ$BB2K 000000                    _OSCCON 000FD3              LCDPutStr@ptr 0008  
          __CFG_XINST$OFF 000000                    _Timer2 11C2            __CFG_STVREN$ON 000000  
             ?_ClockSetup 0001                 ??_ejemplo 000A    Port_BBSPIInit@port_dir 0004  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 12DC  
       __end_of_DigitalIO 122E             ___rparam_used 000001    __size_of_SendByteBBSPI 0050  
          __pcstackCOMRAM 0001         __end_of_InitBBSPI 12DA              ??_LCDPutChar 0006  
            ??_LCDPutInst 0006         Timer2@iTMR2Millis 0004            _Port_BBSPIInit 1282  
               ?_Contador 0001                 ?_InitConf 0001       __size_of_ClockSetup 000A  
      __end_of_LCDPutChar 10CC        __end_of_LCDPutInst 1120                   ?_Timer2 0001  
  __end_of_Port_BBSPIInit 129C                   _LCDInit 101A             _SendByteBBSPI 1172  
                 _OSCTUNE 000F9B                ??_Contador 0006                ??_InitConf 0001  
        WritePort_BBSPI@a 0004                   __Hparam 0000                   __Lparam 0000  
         __size_of_Timer2 003E  __size_of_WritePort_BBSPI 001A              __psmallconst 1000  
                 __pcinit 12DA                   __ramtop 1000                   __ptext0 12B6  
                 __ptext1 122E                   __ptext2 1258                   __ptext3 1078  
                 __ptext4 101A                   __ptext5 1282                   __ptext6 10CC  
                 __ptext7 129C                   __ptext8 1172                   __ptext9 12C8  
                 _ejemplo 122E            ?_SendByteBBSPI 0001           ?_Port_BBSPIInit 0001  
               _LCDPutStr 1258      end_of_initialization 12DC              ??_ClockSetup 0001  
               _TRISAbits 000F92                 _TRISCbits 000F94                 _TRISFbits 000F97  
              ?_LCDPutStr 0008       SendByteBBSPI@output 0001        __end_of_ClockSetup 12FE  
               _DigitalIO 1200            __end_of_Timer2 1200           ??_SendByteBBSPI 0001  
               _InitBBSPI 12C8         ??_WritePort_BBSPI 0005       start_initialization 12DA  
       __size_of_Contador 0052          __CFG_OSC$INTIO67 000000         __size_of_InitConf 000A  
               _TempValue 000A                  ??_Timer2 0003                ?_DigitalIO 0001  
        __CFG_LPT1OSC$OFF 000000                ?_InitBBSPI 0001                  ?_LCDInit 0001  
             __pbssCOMRAM 000A               ??_LCDPutStr 000A         __CFG_CCP2MX$PORTC 000000  
        ??_Port_BBSPIInit 0004                  ?_ejemplo 0001               __smallconst 1000  
                _LATAbits 000F89                  _LATCbits 000F8B                  _LATFbits 000F8E  
   __CFG_DATABW$DATA16BIT 000000               ??_DigitalIO 0001          __CFG_WDTPS$32768 000000  
       __CFG_ECCPMX$PORTE 000000               ??_InitBBSPI 0001        SendByteBBSPI@input 0003  
        __size_of_LCDInit 005E                  _Contador 1120                  _InitConf 12EA  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 1000  
         _WritePort_BBSPI 129C          __size_of_ejemplo 002A                  __ptext10 12EA  
                __ptext11 1200                  __ptext12 12F4                  __ptext13 1120  
                __ptext14 11C2             __size_of_main 0012                _LCDPutChar 1078  
              _LCDPutInst 10CC     __end_of_SendByteBBSPI 11C2     __CFG_ADDRBW$ADDR20BIT 000000  
 __end_of_WritePort_BBSPI 12B6          Timer2@TMR2Millis 0001   WritePort_BBSPI@port_add 0005  
