

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Jan 16 10:51:07 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     _ADCON1	set	4033
    29  0000                     _CCP4CON	set	3955
    30  0000                     _CCPR4L	set	3956
    31  0000                     _LATA	set	3977
    32  0000                     _LATAbits	set	3977
    33  0000                     _LATB	set	3978
    34  0000                     _LATCbits	set	3979
    35  0000                     _LATD	set	3980
    36  0000                     _LATFbits	set	3982
    37  0000                     _LATG	set	3983
    38  0000                     _OSCCON	set	4051
    39  0000                     _OSCTUNE	set	3995
    40  0000                     _PIR1	set	3998
    41  0000                     _PORTA	set	3968
    42  0000                     _PORTB	set	3969
    43  0000                     _PORTD	set	3971
    44  0000                     _PORTG	set	3974
    45  0000                     _PR2	set	4043
    46  0000                     _PSPCON	set	4016
    47  0000                     _T2CON	set	4042
    48  0000                     _TMR2	set	4044
    49  0000                     _TRISA	set	3986
    50  0000                     _TRISAbits	set	3986
    51  0000                     _TRISB	set	3987
    52  0000                     _TRISCbits	set	3988
    53  0000                     _TRISD	set	3989
    54  0000                     _TRISFbits	set	3991
    55  0000                     _TRISG	set	3992
    56                           
    57                           	psect	smallconst
    58  001000                     __psmallconst:
    59                           	opt stack 0
    60  001000  00                 	db	0
    61  001001                     STR_1:
    62  001001  45                 	db	69	;'E'
    63  001002  6A                 	db	106	;'j'
    64  001003  65                 	db	101	;'e'
    65  001004  6D                 	db	109	;'m'
    66  001005  70                 	db	112	;'p'
    67  001006  6C                 	db	108	;'l'
    68  001007  6F                 	db	111	;'o'
    69  001008  5F                 	db	95	;'_'
    70  001009  30                 	db	48	;'0'
    71  00100A  30                 	db	48	;'0'
    72  00100B  34                 	db	52	;'4'
    73  00100C  00                 	db	0
    74  00100D                     STR_2:
    75  00100D  43                 	db	67	;'C'
    76  00100E  43                 	db	67	;'C'
    77  00100F  50                 	db	80	;'P'
    78  001010  00                 	db	0
    79                           
    80                           ; #config settings
    81  001011  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           	psect	cinit
    84  001200                     __pcinit:
    85                           	opt stack 0
    86  001200                     start_initialization:
    87                           	opt stack 0
    88  001200                     __initialization:
    89                           	opt stack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (6 bytes)
    92  001200  6A0E               	clrf	(__pbssCOMRAM+5)& (0+255),c
    93  001202  6A0D               	clrf	(__pbssCOMRAM+4)& (0+255),c
    94  001204  6A0C               	clrf	(__pbssCOMRAM+3)& (0+255),c
    95  001206  6A0B               	clrf	(__pbssCOMRAM+2)& (0+255),c
    96  001208  6A0A               	clrf	(__pbssCOMRAM+1)& (0+255),c
    97  00120A  6A09               	clrf	__pbssCOMRAM& (0+255),c
    98  00120C                     end_of_initialization:
    99                           	opt stack 0
   100  00120C                     __end_of__initialization:
   101                           	opt stack 0
   102  00120C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   103  00120E  6EF8               	movwf	tblptru,c
   104  001210  0E10               	movlw	high __Lsmallconst
   105  001212  6EF7               	movwf	tblptrh,c
   106  001214  0100               	movlb	0
   107  001216  EF3E  F009         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           
   111                           	psect	bssCOMRAM
   112  000009                     __pbssCOMRAM:
   113                           	opt stack 0
   114  000009                     _PwmDuty:
   115                           	opt stack 0
   116  000009                     	ds	2
   117  00000B                     _tiempo:
   118                           	opt stack 0
   119  00000B                     	ds	2
   120  00000D                     _Latch:
   121                           	opt stack 0
   122  00000D                     	ds	1
   123  00000E                     _Latch2:
   124                           	opt stack 0
   125  00000E                     	ds	1
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           
   129                           	psect	cstackCOMRAM
   130  000001                     __pcstackCOMRAM:
   131                           	opt stack 0
   132  000001                     SendByteBBSPI@output:
   133                           	opt stack 0
   134  000001                     SetPwmCCP4@PwmValue:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000001                     	ds	1
   139  000002                     SendByteBBSPI@bitcount:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x1
   143  000002                     	ds	1
   144  000003                     ??_SetPwmCCP4:
   145  000003                     SendByteBBSPI@input:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x2
   149  000003                     	ds	1
   150  000004                     Port_BBSPIInit@port_dir:
   151                           	opt stack 0
   152  000004                     WritePort_BBSPI@a:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x3
   156  000004                     	ds	1
   157  000005                     WritePort_BBSPI@port_add:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x4
   161  000005                     	ds	1
   162  000006                     LCDPutChar@ch:
   163                           	opt stack 0
   164  000006                     LCDPutInst@ch:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x5
   168  000006                     	ds	1
   169  000007                     LCDPutStr@ptr:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x6
   173  000007                     	ds	2
   174  000009                     tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           
   177                           ; 1 bytes @ 0x8
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 29 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels required when called:    5
   203 ;; This function calls:
   204 ;;		_AutoTestCCP4
   205 ;;		_InitCCP4
   206 ;;		_InitConf
   207 ;;		_ejemplo
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text0
   214  00127C                     __ptext0:
   215                           	opt stack 0
   216  00127C                     _main:
   217                           	opt stack 26
   218                           
   219                           ;main.c: 31: InitConf();
   220                           
   221                           ;incstack = 0
   222  00127C  EC50  F009         	call	_InitConf	;wreg free
   223                           
   224                           ;main.c: 33: ejemplo();
   225  001280  ECD6  F008         	call	_ejemplo	;wreg free
   226                           
   227                           ;main.c: 35: InitCCP4();
   228  001284  EC27  F009         	call	_InitCCP4	;wreg free
   229  001288                     l1091:
   230                           
   231                           ;main.c: 37: {
   232                           ;main.c: 39: AutoTestCCP4();
   233  001288  ECA9  F008         	call	_AutoTestCCP4	;wreg free
   234  00128C  D7FD               	goto	l1091
   235  00128E                     __end_of_main:
   236                           	opt stack 0
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           
   240 ;; *************** function _ejemplo *****************
   241 ;; Defined at:
   242 ;;		line 14 in file "Ejemplo.h"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels used:    1
   262 ;; Hardware stack levels required when called:    4
   263 ;; This function calls:
   264 ;;		_LCDInit
   265 ;;		_LCDPutInst
   266 ;;		_LCDPutStr
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text1
   273  0011AC                     __ptext1:
   274                           	opt stack 0
   275  0011AC                     _ejemplo:
   276                           	opt stack 26
   277                           
   278                           ;Ejemplo.h: 16: LCDInit();
   279                           
   280                           ;incstack = 0
   281  0011AC  EC31  F008         	call	_LCDInit	;wreg free
   282                           
   283                           ;Ejemplo.h: 17: LCDPutInst(0x80);
   284  0011B0  0E80               	movlw	128
   285  0011B2  EC74  F008         	call	_LCDPutInst
   286                           
   287                           ;Ejemplo.h: 18: LCDPutStr("Ejemplo_004");
   288  0011B6  0E01               	movlw	low STR_1
   289  0011B8  6E07               	movwf	LCDPutStr@ptr,c
   290  0011BA  0E10               	movlw	high STR_1
   291  0011BC  6E08               	movwf	LCDPutStr@ptr+1,c
   292  0011BE  ECEB  F008         	call	_LCDPutStr	;wreg free
   293                           
   294                           ;Ejemplo.h: 19: LCDPutInst(0xC0);
   295  0011C2  0EC0               	movlw	192
   296  0011C4  EC74  F008         	call	_LCDPutInst
   297                           
   298                           ;Ejemplo.h: 20: LCDPutStr("CCP");
   299  0011C8  0E0D               	movlw	low STR_2
   300  0011CA  6E07               	movwf	LCDPutStr@ptr,c
   301  0011CC  0E10               	movlw	high STR_2
   302  0011CE  6E08               	movwf	LCDPutStr@ptr+1,c
   303  0011D0  ECEB  F008         	call	_LCDPutStr	;wreg free
   304  0011D4  0012               	return		;funcret
   305  0011D6                     __end_of_ejemplo:
   306                           	opt stack 0
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           
   310 ;; *************** function _LCDPutStr *****************
   311 ;; Defined at:
   312 ;;		line 198 in file "BBSPI_LCD.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;  ptr             2    6[COMRAM] PTR const unsigned char 
   315 ;;		 -> STR_2(4), STR_1(12), 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        2 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; Hardware stack levels required when called:    3
   334 ;; This function calls:
   335 ;;		_LCDPutChar
   336 ;; This function is called by:
   337 ;;		_ejemplo
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342  0011D6                     __ptext2:
   343                           	opt stack 0
   344  0011D6                     _LCDPutStr:
   345                           	opt stack 26
   346                           
   347                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
   348                           
   349                           ;incstack = 0
   350  0011D6  D00A               	goto	l1047
   351  0011D8                     l1043:
   352  0011D8  C007  FFF6         	movff	LCDPutStr@ptr,tblptrl
   353  0011DC  C008  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   354  0011E0                     	if	0	;tblptru may be non-zero
   355  0011E0                     	endif
   356  0011E0                     	if	0	;tblptru may be non-zero
   357  0011E0                     	endif
   358  0011E0  0008               	tblrd		*
   359  0011E2  50F5               	movf	tablat,w,c
   360  0011E4  EC58  F008         	call	_LCDPutChar
   361  0011E8  4A07               	infsnz	LCDPutStr@ptr,f,c
   362  0011EA  2A08               	incf	LCDPutStr@ptr+1,f,c
   363  0011EC                     l1047:
   364  0011EC  C007  FFF6         	movff	LCDPutStr@ptr,tblptrl
   365  0011F0  C008  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   366  0011F4                     	if	0	;tblptru may be non-zero
   367  0011F4                     	endif
   368  0011F4                     	if	0	;tblptru may be non-zero
   369  0011F4                     	endif
   370  0011F4  0008               	tblrd		*
   371  0011F6  50F5               	movf	tablat,w,c
   372  0011F8  0900               	iorlw	0
   373  0011FA  B4D8               	btfsc	status,2,c
   374  0011FC  0012               	return	
   375  0011FE  D7EC               	goto	l1043
   376  001200                     __end_of_LCDPutStr:
   377                           	opt stack 0
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           status	equ	0xFD8
   383                           
   384 ;; *************** function _LCDPutChar *****************
   385 ;; Defined at:
   386 ;;		line 160 in file "BBSPI_LCD.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;  ch              1    wreg     unsigned char 
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  ch              1    5[COMRAM] unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    2
   407 ;; This function calls:
   408 ;;		_WritePort_BBSPI
   409 ;; This function is called by:
   410 ;;		_LCDPutStr
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text3
   415  0010B0                     __ptext3:
   416                           	opt stack 0
   417  0010B0                     _LCDPutChar:
   418                           	opt stack 26
   419                           
   420                           ;incstack = 0
   421                           ;LCDPutChar@ch stored from wreg
   422  0010B0  6E06               	movwf	LCDPutChar@ch,c
   423                           
   424                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(10000/4000.0)));
   425  0010B2  0E04               	movlw	4
   426  0010B4                     u227:
   427  0010B4  2EE8               	decfsz	wreg,f,c
   428  0010B6  D7FE               	goto	u227
   429                           
   430                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
   431  0010B8  0E80               	movlw	128
   432  0010BA  6E04               	movwf	WritePort_BBSPI@a,c
   433  0010BC  0E12               	movlw	18
   434  0010BE  EC1A  F009         	call	_WritePort_BBSPI
   435                           
   436                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(10000/4000.0)));
   437  0010C2  D000               	nop2		;2 cycle nop
   438                           
   439                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
   440  0010C4  C006  F004         	movff	LCDPutChar@ch,WritePort_BBSPI@a
   441  0010C8  0E13               	movlw	19
   442  0010CA  EC1A  F009         	call	_WritePort_BBSPI
   443                           
   444                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(10000/4000.0)));
   445  0010CE  D000               	nop2		;2 cycle nop
   446                           
   447                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
   448  0010D0  0EC0               	movlw	192
   449  0010D2  6E04               	movwf	WritePort_BBSPI@a,c
   450  0010D4  0E12               	movlw	18
   451  0010D6  EC1A  F009         	call	_WritePort_BBSPI
   452                           
   453                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(10000/4000.0)));
   454  0010DA  D000               	nop2		;2 cycle nop
   455                           
   456                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
   457  0010DC  0E00               	movlw	0
   458  0010DE  6E04               	movwf	WritePort_BBSPI@a,c
   459  0010E0  0E12               	movlw	18
   460  0010E2  EC1A  F009         	call	_WritePort_BBSPI
   461  0010E6  0012               	return		;funcret
   462  0010E8                     __end_of_LCDPutChar:
   463                           	opt stack 0
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           wreg	equ	0xFE8
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _LCDInit *****************
   472 ;; Defined at:
   473 ;;		line 45 in file "BBSPI_LCD.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_InitBBSPI
   496 ;;		_LCDPutInst
   497 ;;		_Port_BBSPIInit
   498 ;;		_WritePort_BBSPI
   499 ;; This function is called by:
   500 ;;		_ejemplo
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text4
   505  001062                     __ptext4:
   506                           	opt stack 0
   507  001062                     _LCDInit:
   508                           	opt stack 26
   509                           
   510                           ;BBSPI_LCD.c: 47: InitBBSPI();
   511                           
   512                           ;incstack = 0
   513  001062  EC47  F009         	call	_InitBBSPI	;wreg free
   514                           
   515                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   516  001066  9C97               	bcf	3991,6,c	;volatile
   517                           
   518                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   519  001068  9C8E               	bcf	3982,6,c	;volatile
   520                           
   521                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(10000/4000.0)));
   522  00106A  0E04               	movlw	4
   523  00106C                     u237:
   524  00106C  2EE8               	decfsz	wreg,f,c
   525  00106E  D7FE               	goto	u237
   526                           
   527                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   528  001070  8C8E               	bsf	3982,6,c	;volatile
   529                           
   530                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   531  001072  0E00               	movlw	0
   532  001074  EC0D  F009         	call	_Port_BBSPIInit
   533                           
   534                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   535  001078  0E01               	movlw	1
   536  00107A  EC0D  F009         	call	_Port_BBSPIInit
   537                           
   538                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   539  00107E  0E00               	movlw	0
   540  001080  6E04               	movwf	WritePort_BBSPI@a,c
   541  001082  0E12               	movlw	18
   542  001084  EC1A  F009         	call	_WritePort_BBSPI
   543                           
   544                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(10000/4000.0)));
   545  001088  0E0C               	movlw	12
   546  00108A                     u247:
   547  00108A  2EE8               	decfsz	wreg,f,c
   548  00108C  D7FE               	goto	u247
   549  00108E  F000               	nop	
   550                           
   551                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   552  001090  0E32               	movlw	50
   553  001092  EC74  F008         	call	_LCDPutInst
   554                           
   555                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   556  001096  0E3C               	movlw	60
   557  001098  EC74  F008         	call	_LCDPutInst
   558                           
   559                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   560  00109C  0E0C               	movlw	12
   561  00109E  EC74  F008         	call	_LCDPutInst
   562                           
   563                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   564  0010A2  0E01               	movlw	1
   565  0010A4  EC74  F008         	call	_LCDPutInst
   566                           
   567                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   568  0010A8  0E06               	movlw	6
   569  0010AA  EC74  F008         	call	_LCDPutInst
   570  0010AE  0012               	return		;funcret
   571  0010B0                     __end_of_LCDInit:
   572                           	opt stack 0
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           wreg	equ	0xFE8
   578                           status	equ	0xFD8
   579                           
   580 ;; *************** function _Port_BBSPIInit *****************
   581 ;; Defined at:
   582 ;;		line 123 in file "BBSPI_LCD.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;  port_dir        1    wreg     unsigned char 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  port_dir        1    3[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:        1 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    1
   603 ;; This function calls:
   604 ;;		_SendByteBBSPI
   605 ;; This function is called by:
   606 ;;		_LCDInit
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text5
   611  00121A                     __ptext5:
   612                           	opt stack 0
   613  00121A                     _Port_BBSPIInit:
   614                           	opt stack 27
   615                           
   616                           ;incstack = 0
   617                           ;Port_BBSPIInit@port_dir stored from wreg
   618  00121A  6E04               	movwf	Port_BBSPIInit@port_dir,c
   619                           
   620                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   621  00121C  9489               	bcf	3977,2,c	;volatile
   622                           
   623                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   624  00121E  0E40               	movlw	64
   625  001220  EC09  F008         	call	_SendByteBBSPI
   626                           
   627                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   628  001224  5004               	movf	Port_BBSPIInit@port_dir,w,c
   629  001226  EC09  F008         	call	_SendByteBBSPI
   630                           
   631                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   632  00122A  0E00               	movlw	0
   633  00122C  EC09  F008         	call	_SendByteBBSPI
   634                           
   635                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   636  001230  8489               	bsf	3977,2,c	;volatile
   637  001232  0012               	return		;funcret
   638  001234                     __end_of_Port_BBSPIInit:
   639                           	opt stack 0
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           wreg	equ	0xFE8
   645                           status	equ	0xFD8
   646                           
   647 ;; *************** function _LCDPutInst *****************
   648 ;; Defined at:
   649 ;;		line 179 in file "BBSPI_LCD.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  ch              1    wreg     unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  ch              1    5[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        1 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    2
   670 ;; This function calls:
   671 ;;		_WritePort_BBSPI
   672 ;; This function is called by:
   673 ;;		_LCDInit
   674 ;;		_ejemplo
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text6
   679  0010E8                     __ptext6:
   680                           	opt stack 0
   681  0010E8                     _LCDPutInst:
   682                           	opt stack 27
   683                           
   684                           ;incstack = 0
   685                           ;LCDPutInst@ch stored from wreg
   686  0010E8  6E06               	movwf	LCDPutInst@ch,c
   687                           
   688                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(10000/4000.0)));
   689  0010EA  0E04               	movlw	4
   690  0010EC                     u257:
   691  0010EC  2EE8               	decfsz	wreg,f,c
   692  0010EE  D7FE               	goto	u257
   693                           
   694                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
   695  0010F0  0E00               	movlw	0
   696  0010F2  6E04               	movwf	WritePort_BBSPI@a,c
   697  0010F4  0E12               	movlw	18
   698  0010F6  EC1A  F009         	call	_WritePort_BBSPI
   699                           
   700                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(10000/4000.0)));
   701  0010FA  D000               	nop2		;2 cycle nop
   702                           
   703                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
   704  0010FC  C006  F004         	movff	LCDPutInst@ch,WritePort_BBSPI@a
   705  001100  0E13               	movlw	19
   706  001102  EC1A  F009         	call	_WritePort_BBSPI
   707                           
   708                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(10000/4000.0)));
   709  001106  D000               	nop2		;2 cycle nop
   710                           
   711                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
   712  001108  0E40               	movlw	64
   713  00110A  6E04               	movwf	WritePort_BBSPI@a,c
   714  00110C  0E12               	movlw	18
   715  00110E  EC1A  F009         	call	_WritePort_BBSPI
   716                           
   717                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(10000/4000.0)));
   718  001112  D000               	nop2		;2 cycle nop
   719                           
   720                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
   721  001114  0E00               	movlw	0
   722  001116  6E04               	movwf	WritePort_BBSPI@a,c
   723  001118  0E12               	movlw	18
   724  00111A  EC1A  F009         	call	_WritePort_BBSPI
   725  00111E  0012               	return		;funcret
   726  001120                     __end_of_LCDPutInst:
   727                           	opt stack 0
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           wreg	equ	0xFE8
   733                           status	equ	0xFD8
   734                           
   735 ;; *************** function _WritePort_BBSPI *****************
   736 ;; Defined at:
   737 ;;		line 144 in file "BBSPI_LCD.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  port_add        1    wreg     unsigned char 
   740 ;;  a               1    3[COMRAM] unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  port_add        1    4[COMRAM] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    1
   759 ;; This function calls:
   760 ;;		_SendByteBBSPI
   761 ;; This function is called by:
   762 ;;		_LCDInit
   763 ;;		_LCDPutChar
   764 ;;		_LCDPutInst
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text7
   769  001234                     __ptext7:
   770                           	opt stack 0
   771  001234                     _WritePort_BBSPI:
   772                           	opt stack 26
   773                           
   774                           ;incstack = 0
   775                           ;WritePort_BBSPI@port_add stored from wreg
   776  001234  6E05               	movwf	WritePort_BBSPI@port_add,c
   777                           
   778                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
   779  001236  9489               	bcf	3977,2,c	;volatile
   780                           
   781                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
   782  001238  0E40               	movlw	64
   783  00123A  EC09  F008         	call	_SendByteBBSPI
   784                           
   785                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
   786  00123E  5005               	movf	WritePort_BBSPI@port_add,w,c
   787  001240  EC09  F008         	call	_SendByteBBSPI
   788                           
   789                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
   790  001244  5004               	movf	WritePort_BBSPI@a,w,c
   791  001246  EC09  F008         	call	_SendByteBBSPI
   792                           
   793                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
   794  00124A  8489               	bsf	3977,2,c	;volatile
   795  00124C  0012               	return		;funcret
   796  00124E                     __end_of_WritePort_BBSPI:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           wreg	equ	0xFE8
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function _SendByteBBSPI *****************
   806 ;; Defined at:
   807 ;;		line 91 in file "BBSPI_LCD.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  output          1    wreg     unsigned char 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  output          1    0[COMRAM] unsigned char 
   812 ;;  input           1    2[COMRAM] unsigned char 
   813 ;;  bitcount        1    1[COMRAM] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        3 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_Port_BBSPIInit
   833 ;;		_WritePort_BBSPI
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text8
   838  001012                     __ptext8:
   839                           	opt stack 0
   840  001012                     _SendByteBBSPI:
   841                           	opt stack 26
   842                           
   843                           ;incstack = 0
   844                           ;SendByteBBSPI@output stored from wreg
   845  001012  6E01               	movwf	SendByteBBSPI@output,c
   846                           
   847                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
   848                           ;BBSPI_LCD.c: 94: unsigned char input = output;
   849  001014  C001  F003         	movff	SendByteBBSPI@output,SendByteBBSPI@input
   850                           
   851                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
   852  001018  0E00               	movlw	0
   853  00101A  6E02               	movwf	SendByteBBSPI@bitcount,c
   854  00101C                     l783:
   855  00101C  0E07               	movlw	7
   856  00101E  6402               	cpfsgt	SendByteBBSPI@bitcount,c
   857  001020  D001               	goto	l33
   858  001022  0012               	return	
   859  001024                     l33:
   860                           
   861                           ;BBSPI_LCD.c: 97: {
   862                           ;BBSPI_LCD.c: 99: if(output & 0x80)
   863  001024  AE01               	btfss	SendByteBBSPI@output,7,c
   864  001026  D002               	goto	l35
   865                           
   866                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
   867  001028  8A8B               	bsf	3979,5,c	;volatile
   868  00102A  D001               	goto	l36
   869  00102C                     l35:
   870                           
   871                           ;BBSPI_LCD.c: 101: else
   872                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
   873  00102C  9A8B               	bcf	3979,5,c	;volatile
   874  00102E                     l36:
   875                           
   876                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
   877  00102E  A88B               	btfss	3979,4,c	;volatile
   878  001030  D003               	goto	l791
   879                           
   880                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
   881  001032  80D8               	bsf	status,0,c
   882  001034  3603               	rlcf	SendByteBBSPI@input,f,c
   883  001036  D003               	goto	l793
   884  001038                     l791:
   885                           
   886                           ;BBSPI_LCD.c: 106: else
   887                           ;BBSPI_LCD.c: 107: input = input << 1;
   888  001038  5003               	movf	SendByteBBSPI@input,w,c
   889  00103A  2403               	addwf	SendByteBBSPI@input,w,c
   890  00103C  6E03               	movwf	SendByteBBSPI@input,c
   891  00103E                     l793:
   892                           
   893                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
   894  00103E  868B               	bsf	3979,3,c	;volatile
   895                           
   896                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
   897  001040  F000               	nop	
   898  001042  F000               	nop	
   899  001044  F000               	nop	
   900  001046  F000               	nop	
   901  001048  F000               	nop	
   902  00104A  F000               	nop	
   903                           
   904                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
   905  00104C  F000               	nop	
   906  00104E  F000               	nop	
   907  001050  F000               	nop	
   908  001052  F000               	nop	
   909  001054  F000               	nop	
   910  001056  F000               	nop	
   911                           
   912                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
   913  001058  968B               	bcf	3979,3,c	;volatile
   914                           
   915                           ;BBSPI_LCD.c: 112: output <<= 1;
   916  00105A  90D8               	bcf	status,0,c
   917  00105C  3601               	rlcf	SendByteBBSPI@output,f,c
   918  00105E  2A02               	incf	SendByteBBSPI@bitcount,f,c
   919  001060  D7DD               	goto	l783
   920  001062                     __end_of_SendByteBBSPI:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           wreg	equ	0xFE8
   927                           status	equ	0xFD8
   928                           
   929 ;; *************** function _InitBBSPI *****************
   930 ;; Defined at:
   931 ;;		line 70 in file "BBSPI_LCD.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		None
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_LCDInit
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text9
   959  00128E                     __ptext9:
   960                           	opt stack 0
   961  00128E                     _InitBBSPI:
   962                           	opt stack 28
   963                           
   964                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
   965                           
   966                           ;incstack = 0
   967  00128E  9492               	bcf	3986,2,c	;volatile
   968                           
   969                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
   970  001290  8894               	bsf	3988,4,c	;volatile
   971                           
   972                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
   973  001292  9A94               	bcf	3988,5,c	;volatile
   974                           
   975                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
   976  001294  9694               	bcf	3988,3,c	;volatile
   977                           
   978                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
   979  001296  8489               	bsf	3977,2,c	;volatile
   980                           
   981                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
   982  001298  888B               	bsf	3979,4,c	;volatile
   983                           
   984                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
   985  00129A  9A8B               	bcf	3979,5,c	;volatile
   986                           
   987                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
   988  00129C  968B               	bcf	3979,3,c	;volatile
   989  00129E  0012               	return		;funcret
   990  0012A0                     __end_of_InitBBSPI:
   991                           	opt stack 0
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           wreg	equ	0xFE8
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _InitConf *****************
  1000 ;; Defined at:
  1001 ;;		line 53 in file "Modules.h"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    1
  1022 ;; This function calls:
  1023 ;;		_ClockSetup
  1024 ;;		_DigitalIO
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text10
  1031  0012A0                     __ptext10:
  1032                           	opt stack 0
  1033  0012A0                     _InitConf:
  1034                           	opt stack 29
  1035                           
  1036                           ;Modules.h: 55: ClockSetup();
  1037                           
  1038                           ;incstack = 0
  1039  0012A0  EC55  F009         	call	_ClockSetup	;wreg free
  1040                           
  1041                           ;Modules.h: 56: DigitalIO();
  1042  0012A4  EC90  F008         	call	_DigitalIO	;wreg free
  1043  0012A8  0012               	return		;funcret
  1044  0012AA                     __end_of_InitConf:
  1045                           	opt stack 0
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           wreg	equ	0xFE8
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _DigitalIO *****************
  1054 ;; Defined at:
  1055 ;;		line 35 in file "Modules.h"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_InitConf
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text11
  1083  001120                     __ptext11:
  1084                           	opt stack 0
  1085  001120                     _DigitalIO:
  1086                           	opt stack 29
  1087                           
  1088                           ;Modules.h: 37: LATA=0;
  1089                           
  1090                           ;incstack = 0
  1091  001120  0E00               	movlw	0
  1092  001122  6E89               	movwf	3977,c	;volatile
  1093                           
  1094                           ;Modules.h: 38: PORTA=0;
  1095  001124  0E00               	movlw	0
  1096  001126  6E80               	movwf	3968,c	;volatile
  1097                           
  1098                           ;Modules.h: 39: TRISA=0X20;
  1099  001128  0E20               	movlw	32
  1100  00112A  6E92               	movwf	3986,c	;volatile
  1101                           
  1102                           ;Modules.h: 40: ADCON1=0X0F;
  1103  00112C  0E0F               	movlw	15
  1104  00112E  6EC1               	movwf	4033,c	;volatile
  1105                           
  1106                           ;Modules.h: 42: LATB=0;
  1107  001130  0E00               	movlw	0
  1108  001132  6E8A               	movwf	3978,c	;volatile
  1109                           
  1110                           ;Modules.h: 43: PORTB=0;
  1111  001134  0E00               	movlw	0
  1112  001136  6E81               	movwf	3969,c	;volatile
  1113                           
  1114                           ;Modules.h: 44: TRISB=0X01;
  1115  001138  0E01               	movlw	1
  1116  00113A  6E93               	movwf	3987,c	;volatile
  1117                           
  1118                           ;Modules.h: 46: LATD=0;
  1119  00113C  0E00               	movlw	0
  1120  00113E  6E8C               	movwf	3980,c	;volatile
  1121                           
  1122                           ;Modules.h: 47: PORTD=0;
  1123  001140  0E00               	movlw	0
  1124  001142  6E83               	movwf	3971,c	;volatile
  1125                           
  1126                           ;Modules.h: 48: TRISD=0;
  1127  001144  0E00               	movlw	0
  1128  001146  6E95               	movwf	3989,c	;volatile
  1129                           
  1130                           ;Modules.h: 49: TRISD&=~(0xFF);
  1131  001148  0E00               	movlw	0
  1132  00114A  6E95               	movwf	3989,c	;volatile
  1133                           
  1134                           ;Modules.h: 50: PSPCON=0;
  1135  00114C  0E00               	movlw	0
  1136  00114E  6EB0               	movwf	4016,c	;volatile
  1137  001150  0012               	return		;funcret
  1138  001152                     __end_of_DigitalIO:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           wreg	equ	0xFE8
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _ClockSetup *****************
  1148 ;; Defined at:
  1149 ;;		line 27 in file "Modules.h"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_InitConf
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text12
  1177  0012AA                     __ptext12:
  1178                           	opt stack 0
  1179  0012AA                     _ClockSetup:
  1180                           	opt stack 29
  1181                           
  1182                           ;Modules.h: 29: OSCCON=0x60|0x00;
  1183                           
  1184                           ;incstack = 0
  1185  0012AA  0E60               	movlw	96
  1186  0012AC  6ED3               	movwf	4051,c	;volatile
  1187                           
  1188                           ;Modules.h: 30: OSCTUNE = 0x00;
  1189  0012AE  0E00               	movlw	0
  1190  0012B0  6E9B               	movwf	3995,c	;volatile
  1191  0012B2  0012               	return		;funcret
  1192  0012B4                     __end_of_ClockSetup:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           wreg	equ	0xFE8
  1199                           status	equ	0xFD8
  1200                           
  1201 ;; *************** function _InitCCP4 *****************
  1202 ;; Defined at:
  1203 ;;		line 58 in file "CCP.h"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    1
  1224 ;; This function calls:
  1225 ;;		_Timer2
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text13
  1232  00124E                     __ptext13:
  1233                           	opt stack 0
  1234  00124E                     _InitCCP4:
  1235                           	opt stack 29
  1236                           
  1237                           ;CCP.h: 60: Timer2();
  1238                           
  1239                           ;incstack = 0
  1240  00124E  EC33  F009         	call	_Timer2	;wreg free
  1241                           
  1242                           ;CCP.h: 61: LATG=0;
  1243  001252  0E00               	movlw	0
  1244  001254  6E8F               	movwf	3983,c	;volatile
  1245                           
  1246                           ;CCP.h: 62: PORTG=0;
  1247  001256  0E00               	movlw	0
  1248  001258  6E86               	movwf	3974,c	;volatile
  1249                           
  1250                           ;CCP.h: 63: TRISG&=~0X08;
  1251  00125A  9698               	bcf	3992,3,c	;volatile
  1252                           
  1253                           ;CCP.h: 64: CCP4CON=0x0C;
  1254  00125C  0E0C               	movlw	12
  1255  00125E  6E73               	movwf	3955,c	;volatile
  1256                           
  1257                           ;CCP.h: 65: CCPR4L=0;
  1258  001260  0E00               	movlw	0
  1259  001262  6E74               	movwf	3956,c	;volatile
  1260  001264  0012               	return		;funcret
  1261  001266                     __end_of_InitCCP4:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           wreg	equ	0xFE8
  1268                           status	equ	0xFD8
  1269                           
  1270 ;; *************** function _Timer2 *****************
  1271 ;; Defined at:
  1272 ;;		line 47 in file "CCP.h"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_InitCCP4
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text14
  1300  001266                     __ptext14:
  1301                           	opt stack 0
  1302  001266                     _Timer2:
  1303                           	opt stack 29
  1304                           
  1305                           ;CCP.h: 49: PR2=155;
  1306                           
  1307                           ;incstack = 0
  1308  001266  0E9B               	movlw	155
  1309  001268  6ECB               	movwf	4043,c	;volatile
  1310                           
  1311                           ;CCP.h: 50: T2CON=(0x90>>1)|(0x02);
  1312  00126A  0E4A               	movlw	74
  1313  00126C  6ECA               	movwf	4042,c	;volatile
  1314                           
  1315                           ;CCP.h: 51: TMR2=0;
  1316  00126E  0E00               	movlw	0
  1317  001270  6ECC               	movwf	4044,c	;volatile
  1318                           
  1319                           ;CCP.h: 53: T2CON|=0x04;
  1320  001272  84CA               	bsf	4042,2,c	;volatile
  1321  001274                     l129:
  1322  001274  A29E               	btfss	3998,1,c	;volatile
  1323  001276  D7FE               	goto	l129
  1324                           
  1325                           ;CCP.h: 55: PIR1&=~0x02;
  1326  001278  929E               	bcf	3998,1,c	;volatile
  1327  00127A  0012               	return		;funcret
  1328  00127C                     __end_of_Timer2:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           wreg	equ	0xFE8
  1335                           status	equ	0xFD8
  1336                           
  1337 ;; *************** function _AutoTestCCP4 *****************
  1338 ;; Defined at:
  1339 ;;		line 84 in file "CCP.h"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    1
  1360 ;; This function calls:
  1361 ;;		_SetPwmCCP4
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text15
  1368  001152                     __ptext15:
  1369                           	opt stack 0
  1370  001152                     _AutoTestCCP4:
  1371                           	opt stack 29
  1372  001152                     l148:
  1373  001152  A29E               	btfss	3998,1,c	;volatile
  1374  001154  D7FE               	goto	l148
  1375                           
  1376                           ;CCP.h: 87: PIR1&=~0x02;
  1377  001156  929E               	bcf	3998,1,c	;volatile
  1378                           
  1379                           ;CCP.h: 89: if(PwmDuty<900){PwmDuty+=1;}else{PwmDuty=0;}
  1380  001158  0E84               	movlw	132
  1381  00115A  5C09               	subwf	_PwmDuty,w,c
  1382  00115C  0E03               	movlw	3
  1383  00115E  580A               	subwfb	_PwmDuty+1,w,c
  1384  001160  B0D8               	btfsc	status,0,c
  1385  001162  D003               	goto	l1059
  1386  001164  4A09               	infsnz	_PwmDuty,f,c
  1387  001166  2A0A               	incf	_PwmDuty+1,f,c
  1388  001168  D004               	goto	l1061
  1389  00116A                     l1059:
  1390  00116A  0E00               	movlw	0
  1391  00116C  6E0A               	movwf	_PwmDuty+1,c
  1392  00116E  0E00               	movlw	0
  1393  001170  6E09               	movwf	_PwmDuty,c
  1394  001172                     l1061:
  1395                           
  1396                           ;CCP.h: 90: SetPwmCCP4(PwmDuty);
  1397  001172  C009  F001         	movff	_PwmDuty,SetPwmCCP4@PwmValue
  1398  001176  C00A  F002         	movff	_PwmDuty+1,SetPwmCCP4@PwmValue+1
  1399  00117A  ECC0  F008         	call	_SetPwmCCP4	;wreg free
  1400  00117E  0012               	return		;funcret
  1401  001180                     __end_of_AutoTestCCP4:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           wreg	equ	0xFE8
  1408                           status	equ	0xFD8
  1409                           
  1410 ;; *************** function _SetPwmCCP4 *****************
  1411 ;; Defined at:
  1412 ;;		line 98 in file "CCP.h"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  PwmValue        2    0[COMRAM] unsigned int 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;Total ram usage:        4 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_AutoTestCCP4
  1436 ;;		_TestCCP4
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text16
  1441  001180                     __ptext16:
  1442                           	opt stack 0
  1443  001180                     _SetPwmCCP4:
  1444                           	opt stack 29
  1445                           
  1446                           ;CCP.h: 101: CCP4CON&=~0x30;
  1447                           
  1448                           ;incstack = 0
  1449  001180  0ECF               	movlw	207
  1450  001182  1673               	andwf	3955,f,c	;volatile
  1451                           
  1452                           ;CCP.h: 102: CCP4CON|=(PwmValue&0x03)<<4;
  1453  001184  C001  F003         	movff	SetPwmCCP4@PwmValue,??_SetPwmCCP4
  1454  001188  0E03               	movlw	3
  1455  00118A  1603               	andwf	??_SetPwmCCP4,f,c
  1456  00118C  3803               	swapf	??_SetPwmCCP4,w,c
  1457  00118E  0BF0               	andlw	240
  1458  001190  1273               	iorwf	3955,f,c	;volatile
  1459                           
  1460                           ;CCP.h: 103: CCPR4L=(PwmValue)>>2;
  1461  001192  C001  F003         	movff	SetPwmCCP4@PwmValue,??_SetPwmCCP4
  1462  001196  C002  F004         	movff	SetPwmCCP4@PwmValue+1,??_SetPwmCCP4+1
  1463  00119A  90D8               	bcf	status,0,c
  1464  00119C  3204               	rrcf	??_SetPwmCCP4+1,f,c
  1465  00119E  3203               	rrcf	??_SetPwmCCP4,f,c
  1466  0011A0  90D8               	bcf	status,0,c
  1467  0011A2  3204               	rrcf	??_SetPwmCCP4+1,f,c
  1468  0011A4  3203               	rrcf	??_SetPwmCCP4,f,c
  1469  0011A6  5003               	movf	??_SetPwmCCP4,w,c
  1470  0011A8  6E74               	movwf	3956,c	;volatile
  1471  0011AA  0012               	return		;funcret
  1472  0011AC                     __end_of_SetPwmCCP4:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           wreg	equ	0xFE8
  1479                           status	equ	0xFD8
  1480                           tblptru	equ	0xFF8
  1481                           tblptrh	equ	0xFF7
  1482                           tblptrl	equ	0xFF6
  1483                           tablat	equ	0xFF5
  1484                           wreg	equ	0xFE8
  1485                           status	equ	0xFD8
  1486                           
  1487                           	psect	rparam
  1488  0000                     tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           wreg	equ	0xFE8
  1493                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[4]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI
    _AutoTestCCP4->_SetPwmCCP4

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3356
                       _AutoTestCCP4
                           _InitCCP4
                           _InitConf
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3184
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2     905
                                              6 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0     732
                                              5 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    1547
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                              3 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           1     1      0     732
                                              5 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                              3 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitCCP4                                             0     0      0       0
                             _Timer2
 ---------------------------------------------------------------------------------
 (2) _Timer2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoTestCCP4                                         0     0      0     172
                         _SetPwmCCP4
 ---------------------------------------------------------------------------------
 (2) _SetPwmCCP4                                           4     2      2     172
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoTestCCP4
     _SetPwmCCP4
   _InitCCP4
     _Timer2
   _InitConf
     _ClockSetup
     _DigitalIO
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       E       1       14.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      32        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Jan 16 10:51:07 2017

                      l33 1024                        l35 102C               ?_LCDPutChar 0001  
                      l36 102E               ?_LCDPutInst 0001               __CFG_BORV$3 000000  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               __CFG_OSC$HS 000000              __CFG_CP4$OFF 000000  
            __CFG_CP5$OFF 000000     SendByteBBSPI@bitcount 0002              __CFG_CP6$OFF 000000  
            __CFG_CP7$OFF 000000                       l129 1274                       l148 1152  
                     l791 1038                       l783 101C                       l793 103E  
            __CFG_CPB$OFF 000000                       u227 10B4                       u237 106C  
                     _PR2 000FCB                       u247 108A                       u257 10EC  
            __CFG_CPD$OFF 000000                       wreg 000FE8              __CFG_MODE$MC 000000  
         __end_of_LCDInit 10B0              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    l1043 11D8                      l1061 1172                      l1047 11EC  
                    l1059 116A                      l1091 1288                      STR_1 1001  
                    STR_2 100D                      _LATA 000F89                      _LATB 000F8A  
                    _LATD 000F8C                      _LATG 000F8F                      _PIR1 000F9E  
                    _TMR2 000FCC                      _main 127C            ??_AutoTestCCP4 0005  
        ?_WritePort_BBSPI 0004                      start 0000        __size_of_LCDPutStr 002A  
           __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000              ___param_bank 000010  
              _ClockSetup 12AA             __CFG_WAIT$OFF 000000                     ?_main 0001  
                   _T2CON 000FCA                     _PORTA 000F80                     _PORTB 000F81  
                   _PORTD 000F83                     _PORTG 000F86                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISD 000F95                     _TRISG 000F98  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000                     _Latch 000D             __CFG_WRT3$OFF 000000  
           __CFG_WRT4$OFF 000000             __CFG_WRT5$OFF 000000             __CFG_WRT6$OFF 000000  
           __CFG_WRT7$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000           __end_of_ejemplo 11D6  
          __CFG_EBTR3$OFF 000000            __CFG_EBTR4$OFF 000000            __CFG_EBTR5$OFF 000000  
          __CFG_EBTR6$OFF 000000            __CFG_EBTR7$OFF 000000             __CFG_WRTB$OFF 000000  
 __size_of_Port_BBSPIInit 001A             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000            __CFG_BOREN$OFF 000000                     tablat 000FF5  
     __size_of_LCDPutChar 0038       __size_of_LCDPutInst 0038                     status 000FD8  
         __initialization 1200          __end_of_InitCCP4 1266              __end_of_main 128E  
        __end_of_InitConf 12AA                    ??_main 0009        __size_of_DigitalIO 0032  
           __activetblptr 000001                 ??_LCDInit 0007              LCDPutChar@ch 0006  
       __end_of_LCDPutStr 1200                    _ADCON1 000FC1        __size_of_InitBBSPI 0012  
                  _CCPR4L 000F74              LCDPutInst@ch 0006                _SetPwmCCP4 1180  
         __CFG_BBSIZ$BB2K 000000                    _OSCCON 000FD3                    _PSPCON 000FB0  
            LCDPutStr@ptr 0007                    _Latch2 000E            __CFG_XINST$OFF 000000  
                  _Timer2 1266            __CFG_STVREN$ON 000000               ?_ClockSetup 0001  
                  _tiempo 000B                 ??_ejemplo 0009      __end_of_AutoTestCCP4 1180  
  Port_BBSPIInit@port_dir 0004              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 120C         __end_of_DigitalIO 1152             ___rparam_used 000001  
  __size_of_SendByteBBSPI 0050            __pcstackCOMRAM 0001         __end_of_InitBBSPI 12A0  
            ??_LCDPutChar 0006              ??_LCDPutInst 0006            _Port_BBSPIInit 121A  
               ?_InitCCP4 0001               ?_SetPwmCCP4 0001                 ?_InitConf 0001  
     __size_of_ClockSetup 000A        __end_of_LCDPutChar 10E8        __end_of_LCDPutInst 1120  
                 ?_Timer2 0001                   _CCP4CON 000F73    __end_of_Port_BBSPIInit 1234  
                 _LCDInit 1062             _SendByteBBSPI 1012                   _OSCTUNE 000F9B  
              ??_InitCCP4 0001                ??_InitConf 0001          WritePort_BBSPI@a 0004  
                 __Hparam 0000                   __Lparam 0000                   _PwmDuty 0009  
         __size_of_Timer2 0016     __size_of_AutoTestCCP4 002E  __size_of_WritePort_BBSPI 001A  
            __psmallconst 1000                   __pcinit 1200       __size_of_SetPwmCCP4 002C  
                 __ramtop 1000                   __ptext0 127C                   __ptext1 11AC  
                 __ptext2 11D6                   __ptext3 10B0                   __ptext4 1062  
                 __ptext5 121A                   __ptext6 10E8                   __ptext7 1234  
                 __ptext8 1012                   __ptext9 128E                   _ejemplo 11AC  
          ?_SendByteBBSPI 0001           ?_Port_BBSPIInit 0001                 _LCDPutStr 11D6  
    end_of_initialization 120C              _AutoTestCCP4 1152              ??_ClockSetup 0001  
               _TRISAbits 000F92                 _TRISCbits 000F94                 _TRISFbits 000F97  
              ?_LCDPutStr 0007       SendByteBBSPI@output 0001        __end_of_ClockSetup 12B4  
               _DigitalIO 1120            __end_of_Timer2 127C           ??_SendByteBBSPI 0001  
               _InitBBSPI 128E         ??_WritePort_BBSPI 0005       start_initialization 1200  
            ??_SetPwmCCP4 0003         __size_of_InitCCP4 0018         __size_of_InitConf 000A  
                ??_Timer2 0001                ?_DigitalIO 0001          __CFG_LPT1OSC$OFF 000000  
      __end_of_SetPwmCCP4 11AC                ?_InitBBSPI 0001                  ?_LCDInit 0001  
             __pbssCOMRAM 0009               ??_LCDPutStr 0009         __CFG_CCP2MX$PORTC 000000  
        ??_Port_BBSPIInit 0004                  ?_ejemplo 0001               __smallconst 1000  
                _LATAbits 000F89                  _LATCbits 000F8B                  _LATFbits 000F8E  
   __CFG_DATABW$DATA16BIT 000000               ??_DigitalIO 0001          __CFG_WDTPS$32768 000000  
       __CFG_ECCPMX$PORTE 000000               ??_InitBBSPI 0001        SendByteBBSPI@input 0003  
        __size_of_LCDInit 004E                  _InitCCP4 124E                  _InitConf 12A0  
      SetPwmCCP4@PwmValue 0001                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 1000           _WritePort_BBSPI 1234          __size_of_ejemplo 002A  
                __ptext10 12A0                  __ptext11 1120                  __ptext12 12AA  
                __ptext13 124E                  __ptext14 1266                  __ptext15 1152  
                __ptext16 1180             __size_of_main 0012                _LCDPutChar 10B0  
              _LCDPutInst 10E8     __end_of_SendByteBBSPI 1062     __CFG_ADDRBW$ADDR20BIT 000000  
 __end_of_WritePort_BBSPI 124E   WritePort_BBSPI@port_add 0005             ?_AutoTestCCP4 0001  
