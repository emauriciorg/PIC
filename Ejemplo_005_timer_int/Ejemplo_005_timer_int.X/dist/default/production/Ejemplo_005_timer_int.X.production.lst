

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Jan 16 13:15:07 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     _ADCON1	set	4033
    35  0000                     _INTCON	set	4082
    36  0000                     _INTCONbits	set	4082
    37  0000                     _LATA	set	3977
    38  0000                     _LATAbits	set	3977
    39  0000                     _LATB	set	3978
    40  0000                     _LATCbits	set	3979
    41  0000                     _LATD	set	3980
    42  0000                     _LATFbits	set	3982
    43  0000                     _OSCCON	set	4051
    44  0000                     _OSCTUNE	set	3995
    45  0000                     _PIE1	set	3997
    46  0000                     _PIR1	set	3998
    47  0000                     _PORTA	set	3968
    48  0000                     _PORTB	set	3969
    49  0000                     _PORTD	set	3971
    50  0000                     _PR2	set	4043
    51  0000                     _PSPCON	set	4016
    52  0000                     _T2CON	set	4042
    53  0000                     _TMR2	set	4044
    54  0000                     _TRISA	set	3986
    55  0000                     _TRISAbits	set	3986
    56  0000                     _TRISB	set	3987
    57  0000                     _TRISCbits	set	3988
    58  0000                     _TRISD	set	3989
    59  0000                     _TRISFbits	set	3991
    60                           
    61                           	psect	smallconst
    62  001000                     __psmallconst:
    63                           	opt stack 0
    64  001000  00                 	db	0
    65  001001                     STR_2:
    66  001001  54                 	db	84	;'T'
    67  001002  69                 	db	105	;'i'
    68  001003  6D                 	db	109	;'m'
    69  001004  65                 	db	101	;'e'
    70  001005  72                 	db	114	;'r'
    71  001006  20                 	db	32
    72  001007  49                 	db	73	;'I'
    73  001008  6E                 	db	110	;'n'
    74  001009  74                 	db	116	;'t'
    75  00100A  65                 	db	101	;'e'
    76  00100B  72                 	db	114	;'r'
    77  00100C  72                 	db	114	;'r'
    78  00100D  75                 	db	117	;'u'
    79  00100E  70                 	db	112	;'p'
    80  00100F  74                 	db	116	;'t'
    81  001010  00                 	db	0
    82  001011                     STR_1:
    83  001011  45                 	db	69	;'E'
    84  001012  6A                 	db	106	;'j'
    85  001013  65                 	db	101	;'e'
    86  001014  6D                 	db	109	;'m'
    87  001015  70                 	db	112	;'p'
    88  001016  6C                 	db	108	;'l'
    89  001017  6F                 	db	111	;'o'
    90  001018  5F                 	db	95	;'_'
    91  001019  30                 	db	48	;'0'
    92  00101A  30                 	db	48	;'0'
    93  00101B  35                 	db	53	;'5'
    94  00101C  00                 	db	0
    95  00101D                     STR_4:
    96  00101D  20                 	db	32
    97  00101E  20                 	db	32
    98  00101F  20                 	db	32
    99  001020  20                 	db	32
   100  001021  20                 	db	32
   101  001022  20                 	db	32
   102  001023  20                 	db	32
   103  001024  20                 	db	32
   104  001025  00                 	db	0
   105  001026                     STR_3:
   106  001026  54                 	db	84	;'T'
   107  001027  69                 	db	105	;'i'
   108  001028  6D                 	db	109	;'m'
   109  001029  65                 	db	101	;'e'
   110  00102A  72                 	db	114	;'r'
   111  00102B  49                 	db	73	;'I'
   112  00102C  6E                 	db	110	;'n'
   113  00102D  20                 	db	32
   114  00102E  00                 	db	0
   115                           
   116                           ; #config settings
   117  00102F  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           	psect	cinit
   120  00144A                     __pcinit:
   121                           	opt stack 0
   122  00144A                     start_initialization:
   123                           	opt stack 0
   124  00144A                     __initialization:
   125                           	opt stack 0
   126                           
   127                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   128  00144A  6A20               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   129                           
   130                           ; Clear objects allocated to COMRAM (9 bytes)
   131  00144C  EE00  F017         	lfsr	0,__pbssCOMRAM
   132  001450  0E09               	movlw	9
   133  001452                     clear_0:
   134  001452  6AEE               	clrf	postinc0,c
   135  001454  06E8               	decf	wreg,f,c
   136  001456  E1FD               	bnz	clear_0
   137  001458                     end_of_initialization:
   138                           	opt stack 0
   139  001458                     __end_of__initialization:
   140                           	opt stack 0
   141  001458  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   142  00145A  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   143  00145C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   144  00145E  6EF8               	movwf	tblptru,c
   145  001460  0E10               	movlw	high __Lsmallconst
   146  001462  6EF7               	movwf	tblptrh,c
   147  001464  0100               	movlb	0
   148  001466  EF59  F00A         	goto	_main	;jump to C main() function
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           
   154                           	psect	bitbssCOMRAM
   155  000100                     __pbitbssCOMRAM:
   156                           	opt stack 0
   157  000100                     _mostrar:
   158                           	opt stack 0
   159  000100                     	ds	1
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           
   165                           	psect	bssCOMRAM
   166  000017                     __pbssCOMRAM:
   167                           	opt stack 0
   168  000017                     _PwmDuty:
   169                           	opt stack 0
   170  000017                     	ds	2
   171  000019                     _tiempo:
   172                           	opt stack 0
   173  000019                     	ds	2
   174  00001B                     _CountIFG:
   175                           	opt stack 0
   176  00001B                     	ds	1
   177  00001C                     _Counter:
   178                           	opt stack 0
   179  00001C                     	ds	1
   180  00001D                     _hour:
   181                           	opt stack 0
   182  00001D                     	ds	1
   183  00001E                     _min:
   184                           	opt stack 0
   185  00001E                     	ds	1
   186  00001F                     _sec:
   187                           	opt stack 0
   188  00001F                     	ds	1
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	cstackCOMRAM
   195  000001                     __pcstackCOMRAM:
   196                           	opt stack 0
   197  000001                     ??_Timer0_interrupt:
   198                           
   199                           ; 1 bytes @ 0x0
   200  000001                     	ds	14
   201  00000F                     ?___awdiv:
   202                           	opt stack 0
   203  00000F                     ?___awmod:
   204                           	opt stack 0
   205  00000F                     SendByteBBSPI@output:
   206                           	opt stack 0
   207  00000F                     ___awdiv@dividend:
   208                           	opt stack 0
   209  00000F                     ___awmod@dividend:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0xE
   213  00000F                     	ds	1
   214  000010                     SendByteBBSPI@bitcount:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0xF
   218  000010                     	ds	1
   219  000011                     SendByteBBSPI@input:
   220                           	opt stack 0
   221  000011                     ___awdiv@divisor:
   222                           	opt stack 0
   223  000011                     ___awmod@divisor:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x10
   227  000011                     	ds	1
   228  000012                     Port_BBSPIInit@port_dir:
   229                           	opt stack 0
   230  000012                     WritePort_BBSPI@a:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x11
   234  000012                     	ds	1
   235  000013                     WritePort_BBSPI@port_add:
   236                           	opt stack 0
   237  000013                     ___awdiv@counter:
   238                           	opt stack 0
   239  000013                     ___awmod@counter:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x12
   243  000013                     	ds	1
   244  000014                     LCDPutChar@ch:
   245                           	opt stack 0
   246  000014                     LCDPutInst@ch:
   247                           	opt stack 0
   248  000014                     ___awdiv@sign:
   249                           	opt stack 0
   250  000014                     ___awmod@sign:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x13
   254  000014                     	ds	1
   255  000015                     LCDPutStr@ptr:
   256                           	opt stack 0
   257  000015                     ___awdiv@quotient:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x14
   261  000015                     	ds	2
   262  000017                     tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           
   267                           ; 1 bytes @ 0x16
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 35 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels required when called:    6
   293 ;; This function calls:
   294 ;;		_Clock
   295 ;;		_InitConf
   296 ;;		_InitTimer2Interrupts
   297 ;;		_ejemplo
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text0
   304  0014B2                     __ptext0:
   305                           	opt stack 0
   306  0014B2                     _main:
   307                           	opt stack 25
   308                           
   309                           ;main.c: 37: InitConf();
   310                           
   311                           ;incstack = 0
   312  0014B2  EC70  F00A         	call	_InitConf	;wreg free
   313                           
   314                           ;main.c: 39: ejemplo();
   315  0014B6  ECFB  F009         	call	_ejemplo	;wreg free
   316                           
   317                           ;main.c: 41: InitTimer2Interrupts();
   318  0014BA  EC6B  F00A         	call	_InitTimer2Interrupts	;wreg free
   319  0014BE                     l1282:
   320                           
   321                           ;main.c: 43: {
   322                           ;main.c: 44: Clock();
   323  0014BE  EC18  F008         	call	_Clock	;wreg free
   324  0014C2  D7FD               	goto	l1282
   325  0014C4                     __end_of_main:
   326                           	opt stack 0
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           
   332 ;; *************** function _ejemplo *****************
   333 ;; Defined at:
   334 ;;		line 14 in file "Ejemplo.h"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; Hardware stack levels required when called:    5
   355 ;; This function calls:
   356 ;;		_LCDInit
   357 ;;		_LCDPutInst
   358 ;;		_LCDPutStr
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text1
   365  0013F6                     __ptext1:
   366                           	opt stack 0
   367  0013F6                     _ejemplo:
   368                           	opt stack 25
   369                           
   370                           ;Ejemplo.h: 16: LCDInit();
   371                           
   372                           ;incstack = 0
   373  0013F6  EC83  F009         	call	_LCDInit	;wreg free
   374                           
   375                           ;Ejemplo.h: 17: LCDPutInst(0x80);
   376  0013FA  0E80               	movlw	128
   377  0013FC  ECC6  F009         	call	_LCDPutInst
   378                           
   379                           ;Ejemplo.h: 18: LCDPutStr("Ejemplo_005");
   380  001400  0E11               	movlw	low STR_1
   381  001402  6E15               	movwf	LCDPutStr@ptr,c
   382  001404  0E10               	movlw	high STR_1
   383  001406  6E16               	movwf	LCDPutStr@ptr+1,c
   384  001408  EC10  F00A         	call	_LCDPutStr	;wreg free
   385                           
   386                           ;Ejemplo.h: 19: LCDPutInst(0xC0);
   387  00140C  0EC0               	movlw	192
   388  00140E  ECC6  F009         	call	_LCDPutInst
   389                           
   390                           ;Ejemplo.h: 20: LCDPutStr("Timer Interrupt");
   391  001412  0E01               	movlw	low STR_2
   392  001414  6E15               	movwf	LCDPutStr@ptr,c
   393  001416  0E10               	movlw	high STR_2
   394  001418  6E16               	movwf	LCDPutStr@ptr+1,c
   395  00141A  EC10  F00A         	call	_LCDPutStr	;wreg free
   396  00141E  0012               	return		;funcret
   397  001420                     __end_of_ejemplo:
   398                           	opt stack 0
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           
   404 ;; *************** function _LCDInit *****************
   405 ;; Defined at:
   406 ;;		line 45 in file "BBSPI_LCD.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used:    1
   426 ;; Hardware stack levels required when called:    4
   427 ;; This function calls:
   428 ;;		_InitBBSPI
   429 ;;		_LCDPutInst
   430 ;;		_Port_BBSPIInit
   431 ;;		_WritePort_BBSPI
   432 ;; This function is called by:
   433 ;;		_ejemplo
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text2
   438  001306                     __ptext2:
   439                           	opt stack 0
   440  001306                     _LCDInit:
   441                           	opt stack 25
   442                           
   443                           ;BBSPI_LCD.c: 47: InitBBSPI();
   444                           
   445                           ;incstack = 0
   446  001306  EC62  F00A         	call	_InitBBSPI	;wreg free
   447                           
   448                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   449  00130A  9C97               	bcf	3991,6,c	;volatile
   450                           
   451                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   452  00130C  9C8E               	bcf	3982,6,c	;volatile
   453                           
   454                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(10000/4000.0)));
   455  00130E  0E04               	movlw	4
   456  001310                     u397:
   457  001310  2EE8               	decfsz	wreg,f,c
   458  001312  D7FE               	goto	u397
   459                           
   460                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   461  001314  8C8E               	bsf	3982,6,c	;volatile
   462                           
   463                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   464  001316  0E00               	movlw	0
   465  001318  EC35  F00A         	call	_Port_BBSPIInit
   466                           
   467                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   468  00131C  0E01               	movlw	1
   469  00131E  EC35  F00A         	call	_Port_BBSPIInit
   470                           
   471                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   472  001322  0E00               	movlw	0
   473  001324  6E12               	movwf	WritePort_BBSPI@a,c
   474  001326  0E12               	movlw	18
   475  001328  EC42  F00A         	call	_WritePort_BBSPI
   476                           
   477                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(10000/4000.0)));
   478  00132C  0E0C               	movlw	12
   479  00132E                     u407:
   480  00132E  2EE8               	decfsz	wreg,f,c
   481  001330  D7FE               	goto	u407
   482  001332  F000               	nop	
   483                           
   484                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   485  001334  0E32               	movlw	50
   486  001336  ECC6  F009         	call	_LCDPutInst
   487                           
   488                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   489  00133A  0E3C               	movlw	60
   490  00133C  ECC6  F009         	call	_LCDPutInst
   491                           
   492                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   493  001340  0E0C               	movlw	12
   494  001342  ECC6  F009         	call	_LCDPutInst
   495                           
   496                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   497  001346  0E01               	movlw	1
   498  001348  ECC6  F009         	call	_LCDPutInst
   499                           
   500                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   501  00134C  0E06               	movlw	6
   502  00134E  ECC6  F009         	call	_LCDPutInst
   503  001352  0012               	return		;funcret
   504  001354                     __end_of_LCDInit:
   505                           	opt stack 0
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           
   511 ;; *************** function _Port_BBSPIInit *****************
   512 ;; Defined at:
   513 ;;		line 123 in file "BBSPI_LCD.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  port_dir        1    wreg     unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  port_dir        1   17[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;Total ram usage:        1 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    2
   534 ;; This function calls:
   535 ;;		_SendByteBBSPI
   536 ;; This function is called by:
   537 ;;		_LCDInit
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text3
   542  00146A                     __ptext3:
   543                           	opt stack 0
   544  00146A                     _Port_BBSPIInit:
   545                           	opt stack 26
   546                           
   547                           ;incstack = 0
   548                           ;Port_BBSPIInit@port_dir stored from wreg
   549  00146A  6E12               	movwf	Port_BBSPIInit@port_dir,c
   550                           
   551                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   552  00146C  9489               	bcf	3977,2,c	;volatile
   553                           
   554                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   555  00146E  0E40               	movlw	64
   556  001470  EC5B  F009         	call	_SendByteBBSPI
   557                           
   558                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   559  001474  5012               	movf	Port_BBSPIInit@port_dir,w,c
   560  001476  EC5B  F009         	call	_SendByteBBSPI
   561                           
   562                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
   563  00147A  0E00               	movlw	0
   564  00147C  EC5B  F009         	call	_SendByteBBSPI
   565                           
   566                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
   567  001480  8489               	bsf	3977,2,c	;volatile
   568  001482  0012               	return		;funcret
   569  001484                     __end_of_Port_BBSPIInit:
   570                           	opt stack 0
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           
   576 ;; *************** function _InitBBSPI *****************
   577 ;; Defined at:
   578 ;;		line 70 in file "BBSPI_LCD.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		None
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_LCDInit
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text4
   607  0014C4                     __ptext4:
   608                           	opt stack 0
   609  0014C4                     _InitBBSPI:
   610                           	opt stack 27
   611                           
   612                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
   613                           
   614                           ;incstack = 0
   615  0014C4  9492               	bcf	3986,2,c	;volatile
   616                           
   617                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
   618  0014C6  8894               	bsf	3988,4,c	;volatile
   619                           
   620                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
   621  0014C8  9A94               	bcf	3988,5,c	;volatile
   622                           
   623                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
   624  0014CA  9694               	bcf	3988,3,c	;volatile
   625                           
   626                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
   627  0014CC  8489               	bsf	3977,2,c	;volatile
   628                           
   629                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
   630  0014CE  888B               	bsf	3979,4,c	;volatile
   631                           
   632                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
   633  0014D0  9A8B               	bcf	3979,5,c	;volatile
   634                           
   635                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
   636  0014D2  968B               	bcf	3979,3,c	;volatile
   637  0014D4  0012               	return		;funcret
   638  0014D6                     __end_of_InitBBSPI:
   639                           	opt stack 0
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           
   645 ;; *************** function _InitTimer2Interrupts *****************
   646 ;; Defined at:
   647 ;;		line 54 in file "timer.h"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		_EnableInterrupts
   670 ;;		_Timer2
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text5
   677  0014D6                     __ptext5:
   678                           	opt stack 0
   679  0014D6                     _InitTimer2Interrupts:
   680                           	opt stack 28
   681                           
   682                           ;timer.h: 57: Timer2();
   683                           
   684                           ;incstack = 0
   685  0014D6  EC4F  F00A         	call	_Timer2	;wreg free
   686                           
   687                           ;timer.h: 58: EnableInterrupts();
   688  0014DA  EC7A  F00A         	call	_EnableInterrupts	;wreg free
   689  0014DE  0012               	return		;funcret
   690  0014E0                     __end_of_InitTimer2Interrupts:
   691                           	opt stack 0
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           
   697 ;; *************** function _Timer2 *****************
   698 ;; Defined at:
   699 ;;		line 62 in file "timer.h"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_InitTimer2Interrupts
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text6
   728  00149E                     __ptext6:
   729                           	opt stack 0
   730  00149E                     _Timer2:
   731                           	opt stack 28
   732                           
   733                           ;timer.h: 64: PR2=96;
   734                           
   735                           ;incstack = 0
   736  00149E  0E60               	movlw	96
   737  0014A0  6ECB               	movwf	4043,c	;volatile
   738                           
   739                           ;timer.h: 65: T2CON=(0xF0>>1)|(0x02);
   740  0014A2  0E7A               	movlw	122
   741  0014A4  6ECA               	movwf	4042,c	;volatile
   742                           
   743                           ;timer.h: 66: TMR2=0;
   744  0014A6  0E00               	movlw	0
   745  0014A8  6ECC               	movwf	4044,c	;volatile
   746                           
   747                           ;timer.h: 67: PIE1|=0x02;
   748  0014AA  829D               	bsf	3997,1,c	;volatile
   749                           
   750                           ;timer.h: 68: T2CON|=0x04;
   751  0014AC  84CA               	bsf	4042,2,c	;volatile
   752                           
   753                           ;timer.h: 70: PIR1&=~0x02;
   754  0014AE  929E               	bcf	3998,1,c	;volatile
   755  0014B0  0012               	return		;funcret
   756  0014B2                     __end_of_Timer2:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           
   763 ;; *************** function _EnableInterrupts *****************
   764 ;; Defined at:
   765 ;;		line 74 in file "timer.h"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		None
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_InitTimer2Interrupts
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text7
   794  0014F4                     __ptext7:
   795                           	opt stack 0
   796  0014F4                     _EnableInterrupts:
   797                           	opt stack 28
   798                           
   799                           ;timer.h: 76: INTCONbits.GIE=1;
   800                           
   801                           ;incstack = 0
   802  0014F4  8EF2               	bsf	intcon,7,c	;volatile
   803                           
   804                           ;timer.h: 77: INTCONbits.PEIE_GIEL=1;
   805  0014F6  8CF2               	bsf	intcon,6,c	;volatile
   806  0014F8  0012               	return		;funcret
   807  0014FA                     __end_of_EnableInterrupts:
   808                           	opt stack 0
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           intcon	equ	0xFF2
   812                           postinc0	equ	0xFEE
   813                           wreg	equ	0xFE8
   814                           
   815 ;; *************** function _InitConf *****************
   816 ;; Defined at:
   817 ;;		line 53 in file "Modules.h"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    2
   838 ;; This function calls:
   839 ;;		_ClockSetup
   840 ;;		_DigitalIO
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text8
   847  0014E0                     __ptext8:
   848                           	opt stack 0
   849  0014E0                     _InitConf:
   850                           	opt stack 28
   851                           
   852                           ;Modules.h: 55: ClockSetup();
   853                           
   854                           ;incstack = 0
   855  0014E0  EC75  F00A         	call	_ClockSetup	;wreg free
   856                           
   857                           ;Modules.h: 56: DigitalIO();
   858  0014E4  ECE2  F009         	call	_DigitalIO	;wreg free
   859  0014E8  0012               	return		;funcret
   860  0014EA                     __end_of_InitConf:
   861                           	opt stack 0
   862                           tblptru	equ	0xFF8
   863                           tblptrh	equ	0xFF7
   864                           intcon	equ	0xFF2
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           
   868 ;; *************** function _DigitalIO *****************
   869 ;; Defined at:
   870 ;;		line 35 in file "Modules.h"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;Total ram usage:        0 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_InitConf
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text9
   899  0013C4                     __ptext9:
   900                           	opt stack 0
   901  0013C4                     _DigitalIO:
   902                           	opt stack 28
   903                           
   904                           ;Modules.h: 37: LATA=0;
   905                           
   906                           ;incstack = 0
   907  0013C4  0E00               	movlw	0
   908  0013C6  6E89               	movwf	3977,c	;volatile
   909                           
   910                           ;Modules.h: 38: PORTA=0;
   911  0013C8  0E00               	movlw	0
   912  0013CA  6E80               	movwf	3968,c	;volatile
   913                           
   914                           ;Modules.h: 39: TRISA=0X20;
   915  0013CC  0E20               	movlw	32
   916  0013CE  6E92               	movwf	3986,c	;volatile
   917                           
   918                           ;Modules.h: 40: ADCON1=0X0F;
   919  0013D0  0E0F               	movlw	15
   920  0013D2  6EC1               	movwf	4033,c	;volatile
   921                           
   922                           ;Modules.h: 42: LATB=0;
   923  0013D4  0E00               	movlw	0
   924  0013D6  6E8A               	movwf	3978,c	;volatile
   925                           
   926                           ;Modules.h: 43: PORTB=0;
   927  0013D8  0E00               	movlw	0
   928  0013DA  6E81               	movwf	3969,c	;volatile
   929                           
   930                           ;Modules.h: 44: TRISB=0X01;
   931  0013DC  0E01               	movlw	1
   932  0013DE  6E93               	movwf	3987,c	;volatile
   933                           
   934                           ;Modules.h: 46: LATD=0;
   935  0013E0  0E00               	movlw	0
   936  0013E2  6E8C               	movwf	3980,c	;volatile
   937                           
   938                           ;Modules.h: 47: PORTD=0;
   939  0013E4  0E00               	movlw	0
   940  0013E6  6E83               	movwf	3971,c	;volatile
   941                           
   942                           ;Modules.h: 48: TRISD=0;
   943  0013E8  0E00               	movlw	0
   944  0013EA  6E95               	movwf	3989,c	;volatile
   945                           
   946                           ;Modules.h: 49: TRISD&=~(0xFF);
   947  0013EC  0E00               	movlw	0
   948  0013EE  6E95               	movwf	3989,c	;volatile
   949                           
   950                           ;Modules.h: 50: PSPCON=0;
   951  0013F0  0E00               	movlw	0
   952  0013F2  6EB0               	movwf	4016,c	;volatile
   953  0013F4  0012               	return		;funcret
   954  0013F6                     __end_of_DigitalIO:
   955                           	opt stack 0
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           intcon	equ	0xFF2
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           
   962 ;; *************** function _ClockSetup *****************
   963 ;; Defined at:
   964 ;;		line 27 in file "Modules.h"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_InitConf
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text10
   993  0014EA                     __ptext10:
   994                           	opt stack 0
   995  0014EA                     _ClockSetup:
   996                           	opt stack 28
   997                           
   998                           ;Modules.h: 29: OSCCON=0x60|0x00;
   999                           
  1000                           ;incstack = 0
  1001  0014EA  0E60               	movlw	96
  1002  0014EC  6ED3               	movwf	4051,c	;volatile
  1003                           
  1004                           ;Modules.h: 30: OSCTUNE = 0x00;
  1005  0014EE  0E00               	movlw	0
  1006  0014F0  6E9B               	movwf	3995,c	;volatile
  1007  0014F2  0012               	return		;funcret
  1008  0014F4                     __end_of_ClockSetup:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           intcon	equ	0xFF2
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           
  1016 ;; *************** function _Clock *****************
  1017 ;; Defined at:
  1018 ;;		line 53 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    5
  1039 ;; This function calls:
  1040 ;;		_LCDPutChar
  1041 ;;		_LCDPutInst
  1042 ;;		_LCDPutStr
  1043 ;;		___awdiv
  1044 ;;		___awmod
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text11
  1051  001030                     __ptext11:
  1052                           	opt stack 0
  1053  001030                     _Clock:
  1054                           	opt stack 25
  1055                           
  1056                           ;main.c: 55: if(mostrar==1){
  1057                           
  1058                           ;incstack = 0
  1059  001030  A020               	btfss	_mostrar/(0+8),_mostrar& (0+7),c
  1060  001032  0012               	return	
  1061                           
  1062                           ;main.c: 56: mostrar=0;
  1063  001034  9020               	bcf	_mostrar/(0+8),_mostrar& (0+7),c
  1064                           
  1065                           ;main.c: 57: LCDPutInst(0xC0);
  1066  001036  0EC0               	movlw	192
  1067  001038  ECC6  F009         	call	_LCDPutInst
  1068                           
  1069                           ;main.c: 58: LCDPutStr("TimerIn ");
  1070  00103C  0E26               	movlw	low STR_3
  1071  00103E  6E15               	movwf	LCDPutStr@ptr,c
  1072  001040  0E10               	movlw	high STR_3
  1073  001042  6E16               	movwf	LCDPutStr@ptr+1,c
  1074  001044  EC10  F00A         	call	_LCDPutStr	;wreg free
  1075                           
  1076                           ;main.c: 59: LCDPutChar(hour/10+'0');
  1077  001048  C01D  F00F         	movff	_hour,___awdiv@dividend
  1078  00104C  6A10               	clrf	___awdiv@dividend+1,c
  1079  00104E  0E00               	movlw	0
  1080  001050  6E12               	movwf	___awdiv@divisor+1,c
  1081  001052  0E0A               	movlw	10
  1082  001054  6E11               	movwf	___awdiv@divisor,c
  1083  001056  ECE1  F008         	call	___awdiv	;wreg free
  1084  00105A  500F               	movf	?___awdiv,w,c
  1085  00105C  0F30               	addlw	48
  1086  00105E  ECAA  F009         	call	_LCDPutChar
  1087                           
  1088                           ;main.c: 60: LCDPutChar(hour%10+'0');
  1089  001062  C01D  F00F         	movff	_hour,___awmod@dividend
  1090  001066  6A10               	clrf	___awmod@dividend+1,c
  1091  001068  0E00               	movlw	0
  1092  00106A  6E12               	movwf	___awmod@divisor+1,c
  1093  00106C  0E0A               	movlw	10
  1094  00106E  6E11               	movwf	___awmod@divisor,c
  1095  001070  EC23  F009         	call	___awmod	;wreg free
  1096  001074  500F               	movf	?___awmod,w,c
  1097  001076  0F30               	addlw	48
  1098  001078  ECAA  F009         	call	_LCDPutChar
  1099                           
  1100                           ;main.c: 61: LCDPutChar(':');
  1101  00107C  0E3A               	movlw	58
  1102  00107E  ECAA  F009         	call	_LCDPutChar
  1103                           
  1104                           ;main.c: 62: LCDPutChar(min/10+'0');
  1105  001082  C01E  F00F         	movff	_min,___awdiv@dividend
  1106  001086  6A10               	clrf	___awdiv@dividend+1,c
  1107  001088  0E00               	movlw	0
  1108  00108A  6E12               	movwf	___awdiv@divisor+1,c
  1109  00108C  0E0A               	movlw	10
  1110  00108E  6E11               	movwf	___awdiv@divisor,c
  1111  001090  ECE1  F008         	call	___awdiv	;wreg free
  1112  001094  500F               	movf	?___awdiv,w,c
  1113  001096  0F30               	addlw	48
  1114  001098  ECAA  F009         	call	_LCDPutChar
  1115                           
  1116                           ;main.c: 63: LCDPutChar(min%10+'0');
  1117  00109C  C01E  F00F         	movff	_min,___awmod@dividend
  1118  0010A0  6A10               	clrf	___awmod@dividend+1,c
  1119  0010A2  0E00               	movlw	0
  1120  0010A4  6E12               	movwf	___awmod@divisor+1,c
  1121  0010A6  0E0A               	movlw	10
  1122  0010A8  6E11               	movwf	___awmod@divisor,c
  1123  0010AA  EC23  F009         	call	___awmod	;wreg free
  1124  0010AE  500F               	movf	?___awmod,w,c
  1125  0010B0  0F30               	addlw	48
  1126  0010B2  ECAA  F009         	call	_LCDPutChar
  1127                           
  1128                           ;main.c: 64: LCDPutChar(':');
  1129  0010B6  0E3A               	movlw	58
  1130  0010B8  ECAA  F009         	call	_LCDPutChar
  1131                           
  1132                           ;main.c: 65: LCDPutChar(sec/10+'0');
  1133  0010BC  C01F  F00F         	movff	_sec,___awdiv@dividend
  1134  0010C0  6A10               	clrf	___awdiv@dividend+1,c
  1135  0010C2  0E00               	movlw	0
  1136  0010C4  6E12               	movwf	___awdiv@divisor+1,c
  1137  0010C6  0E0A               	movlw	10
  1138  0010C8  6E11               	movwf	___awdiv@divisor,c
  1139  0010CA  ECE1  F008         	call	___awdiv	;wreg free
  1140  0010CE  500F               	movf	?___awdiv,w,c
  1141  0010D0  0F30               	addlw	48
  1142  0010D2  ECAA  F009         	call	_LCDPutChar
  1143                           
  1144                           ;main.c: 66: LCDPutChar(sec%10+'0');
  1145  0010D6  C01F  F00F         	movff	_sec,___awmod@dividend
  1146  0010DA  6A10               	clrf	___awmod@dividend+1,c
  1147  0010DC  0E00               	movlw	0
  1148  0010DE  6E12               	movwf	___awmod@divisor+1,c
  1149  0010E0  0E0A               	movlw	10
  1150  0010E2  6E11               	movwf	___awmod@divisor,c
  1151  0010E4  EC23  F009         	call	___awmod	;wreg free
  1152  0010E8  500F               	movf	?___awmod,w,c
  1153  0010EA  0F30               	addlw	48
  1154  0010EC  ECAA  F009         	call	_LCDPutChar
  1155                           
  1156                           ;main.c: 67: LCDPutStr("        ");
  1157  0010F0  0E1D               	movlw	low STR_4
  1158  0010F2  6E15               	movwf	LCDPutStr@ptr,c
  1159  0010F4  0E10               	movlw	high STR_4
  1160  0010F6  6E16               	movwf	LCDPutStr@ptr+1,c
  1161  0010F8  EC10  F00A         	call	_LCDPutStr	;wreg free
  1162  0010FC  0012               	return	
  1163  0010FE                     __end_of_Clock:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           intcon	equ	0xFF2
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           
  1171 ;; *************** function ___awmod *****************
  1172 ;; Defined at:
  1173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  dividend        2   14[COMRAM] int 
  1176 ;;  divisor         2   16[COMRAM] int 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  sign            1   19[COMRAM] unsigned char 
  1179 ;;  counter         1   18[COMRAM] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2   14[COMRAM] int 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        6 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_Clock
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text12
  1204  001246                     __ptext12:
  1205                           	opt stack 0
  1206  001246                     ___awmod:
  1207                           	opt stack 28
  1208                           
  1209                           ;incstack = 0
  1210  001246  0E00               	movlw	0
  1211  001248  6E14               	movwf	___awmod@sign,c
  1212  00124A  AE10               	btfss	___awmod@dividend+1,7,c
  1213  00124C  D006               	goto	l1216
  1214  00124E  6C0F               	negf	___awmod@dividend,c
  1215  001250  1E10               	comf	___awmod@dividend+1,f,c
  1216  001252  B0D8               	btfsc	status,0,c
  1217  001254  2A10               	incf	___awmod@dividend+1,f,c
  1218  001256  0E01               	movlw	1
  1219  001258  6E14               	movwf	___awmod@sign,c
  1220  00125A                     l1216:
  1221  00125A  AE12               	btfss	___awmod@divisor+1,7,c
  1222  00125C  D004               	goto	l1220
  1223  00125E  6C11               	negf	___awmod@divisor,c
  1224  001260  1E12               	comf	___awmod@divisor+1,f,c
  1225  001262  B0D8               	btfsc	status,0,c
  1226  001264  2A12               	incf	___awmod@divisor+1,f,c
  1227  001266                     l1220:
  1228  001266  5011               	movf	___awmod@divisor,w,c
  1229  001268  1012               	iorwf	___awmod@divisor+1,w,c
  1230  00126A  B4D8               	btfsc	status,2,c
  1231  00126C  D018               	goto	l1236
  1232  00126E  0E01               	movlw	1
  1233  001270  6E13               	movwf	___awmod@counter,c
  1234  001272  D004               	goto	l1226
  1235  001274                     l1224:
  1236  001274  90D8               	bcf	status,0,c
  1237  001276  3611               	rlcf	___awmod@divisor,f,c
  1238  001278  3612               	rlcf	___awmod@divisor+1,f,c
  1239  00127A  2A13               	incf	___awmod@counter,f,c
  1240  00127C                     l1226:
  1241  00127C  AE12               	btfss	___awmod@divisor+1,7,c
  1242  00127E  D7FA               	goto	l1224
  1243  001280                     l1228:
  1244  001280  5011               	movf	___awmod@divisor,w,c
  1245  001282  5C0F               	subwf	___awmod@dividend,w,c
  1246  001284  5012               	movf	___awmod@divisor+1,w,c
  1247  001286  5810               	subwfb	___awmod@dividend+1,w,c
  1248  001288  A0D8               	btfss	status,0,c
  1249  00128A  D004               	goto	l1232
  1250  00128C  5011               	movf	___awmod@divisor,w,c
  1251  00128E  5E0F               	subwf	___awmod@dividend,f,c
  1252  001290  5012               	movf	___awmod@divisor+1,w,c
  1253  001292  5A10               	subwfb	___awmod@dividend+1,f,c
  1254  001294                     l1232:
  1255  001294  90D8               	bcf	status,0,c
  1256  001296  3212               	rrcf	___awmod@divisor+1,f,c
  1257  001298  3211               	rrcf	___awmod@divisor,f,c
  1258  00129A  2E13               	decfsz	___awmod@counter,f,c
  1259  00129C  D7F1               	goto	l1228
  1260  00129E                     l1236:
  1261  00129E  5014               	movf	___awmod@sign,w,c
  1262  0012A0  B4D8               	btfsc	status,2,c
  1263  0012A2  D004               	goto	l1240
  1264  0012A4  6C0F               	negf	___awmod@dividend,c
  1265  0012A6  1E10               	comf	___awmod@dividend+1,f,c
  1266  0012A8  B0D8               	btfsc	status,0,c
  1267  0012AA  2A10               	incf	___awmod@dividend+1,f,c
  1268  0012AC                     l1240:
  1269  0012AC  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1270  0012B0  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1271  0012B4  0012               	return	
  1272  0012B6                     __end_of___awmod:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           intcon	equ	0xFF2
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           status	equ	0xFD8
  1280                           
  1281 ;; *************** function ___awdiv *****************
  1282 ;; Defined at:
  1283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  dividend        2   14[COMRAM] int 
  1286 ;;  divisor         2   16[COMRAM] int 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  quotient        2   20[COMRAM] int 
  1289 ;;  sign            1   19[COMRAM] unsigned char 
  1290 ;;  counter         1   18[COMRAM] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2   14[COMRAM] int 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        8 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_Clock
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text13
  1315  0011C2                     __ptext13:
  1316                           	opt stack 0
  1317  0011C2                     ___awdiv:
  1318                           	opt stack 28
  1319                           
  1320                           ;incstack = 0
  1321  0011C2  0E00               	movlw	0
  1322  0011C4  6E14               	movwf	___awdiv@sign,c
  1323  0011C6  AE12               	btfss	___awdiv@divisor+1,7,c
  1324  0011C8  D006               	goto	l1172
  1325  0011CA  6C11               	negf	___awdiv@divisor,c
  1326  0011CC  1E12               	comf	___awdiv@divisor+1,f,c
  1327  0011CE  B0D8               	btfsc	status,0,c
  1328  0011D0  2A12               	incf	___awdiv@divisor+1,f,c
  1329  0011D2  0E01               	movlw	1
  1330  0011D4  6E14               	movwf	___awdiv@sign,c
  1331  0011D6                     l1172:
  1332  0011D6  AE10               	btfss	___awdiv@dividend+1,7,c
  1333  0011D8  D006               	goto	l1178
  1334  0011DA  6C0F               	negf	___awdiv@dividend,c
  1335  0011DC  1E10               	comf	___awdiv@dividend+1,f,c
  1336  0011DE  B0D8               	btfsc	status,0,c
  1337  0011E0  2A10               	incf	___awdiv@dividend+1,f,c
  1338  0011E2  0E01               	movlw	1
  1339  0011E4  1A14               	xorwf	___awdiv@sign,f,c
  1340  0011E6                     l1178:
  1341  0011E6  0E00               	movlw	0
  1342  0011E8  6E16               	movwf	___awdiv@quotient+1,c
  1343  0011EA  0E00               	movlw	0
  1344  0011EC  6E15               	movwf	___awdiv@quotient,c
  1345  0011EE  5011               	movf	___awdiv@divisor,w,c
  1346  0011F0  1012               	iorwf	___awdiv@divisor+1,w,c
  1347  0011F2  B4D8               	btfsc	status,2,c
  1348  0011F4  D01C               	goto	l1200
  1349  0011F6  0E01               	movlw	1
  1350  0011F8  6E13               	movwf	___awdiv@counter,c
  1351  0011FA  D004               	goto	l1186
  1352  0011FC                     l1184:
  1353  0011FC  90D8               	bcf	status,0,c
  1354  0011FE  3611               	rlcf	___awdiv@divisor,f,c
  1355  001200  3612               	rlcf	___awdiv@divisor+1,f,c
  1356  001202  2A13               	incf	___awdiv@counter,f,c
  1357  001204                     l1186:
  1358  001204  AE12               	btfss	___awdiv@divisor+1,7,c
  1359  001206  D7FA               	goto	l1184
  1360  001208                     l1188:
  1361  001208  90D8               	bcf	status,0,c
  1362  00120A  3615               	rlcf	___awdiv@quotient,f,c
  1363  00120C  3616               	rlcf	___awdiv@quotient+1,f,c
  1364  00120E  5011               	movf	___awdiv@divisor,w,c
  1365  001210  5C0F               	subwf	___awdiv@dividend,w,c
  1366  001212  5012               	movf	___awdiv@divisor+1,w,c
  1367  001214  5810               	subwfb	___awdiv@dividend+1,w,c
  1368  001216  A0D8               	btfss	status,0,c
  1369  001218  D005               	goto	l1196
  1370  00121A  5011               	movf	___awdiv@divisor,w,c
  1371  00121C  5E0F               	subwf	___awdiv@dividend,f,c
  1372  00121E  5012               	movf	___awdiv@divisor+1,w,c
  1373  001220  5A10               	subwfb	___awdiv@dividend+1,f,c
  1374  001222  8015               	bsf	___awdiv@quotient,0,c
  1375  001224                     l1196:
  1376  001224  90D8               	bcf	status,0,c
  1377  001226  3212               	rrcf	___awdiv@divisor+1,f,c
  1378  001228  3211               	rrcf	___awdiv@divisor,f,c
  1379  00122A  2E13               	decfsz	___awdiv@counter,f,c
  1380  00122C  D7ED               	goto	l1188
  1381  00122E                     l1200:
  1382  00122E  5014               	movf	___awdiv@sign,w,c
  1383  001230  B4D8               	btfsc	status,2,c
  1384  001232  D004               	goto	l1204
  1385  001234  6C15               	negf	___awdiv@quotient,c
  1386  001236  1E16               	comf	___awdiv@quotient+1,f,c
  1387  001238  B0D8               	btfsc	status,0,c
  1388  00123A  2A16               	incf	___awdiv@quotient+1,f,c
  1389  00123C                     l1204:
  1390  00123C  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  1391  001240  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  1392  001244  0012               	return	
  1393  001246                     __end_of___awdiv:
  1394                           	opt stack 0
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           intcon	equ	0xFF2
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _LCDPutStr *****************
  1403 ;; Defined at:
  1404 ;;		line 198 in file "BBSPI_LCD.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  ptr             2   20[COMRAM] PTR const unsigned char 
  1407 ;;		 -> STR_4(9), STR_3(9), STR_2(16), STR_1(12), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        2 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		_LCDPutChar
  1428 ;; This function is called by:
  1429 ;;		_ejemplo
  1430 ;;		_Clock
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text14
  1435  001420                     __ptext14:
  1436                           	opt stack 0
  1437  001420                     _LCDPutStr:
  1438                           	opt stack 25
  1439                           
  1440                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
  1441                           
  1442                           ;incstack = 0
  1443  001420  D00A               	goto	l1162
  1444  001422                     l1158:
  1445  001422  C015  FFF6         	movff	LCDPutStr@ptr,tblptrl
  1446  001426  C016  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  1447  00142A                     	if	0	;tblptru may be non-zero
  1448  00142A                     	endif
  1449  00142A                     	if	0	;tblptru may be non-zero
  1450  00142A                     	endif
  1451  00142A  0008               	tblrd		*
  1452  00142C  50F5               	movf	tablat,w,c
  1453  00142E  ECAA  F009         	call	_LCDPutChar
  1454  001432  4A15               	infsnz	LCDPutStr@ptr,f,c
  1455  001434  2A16               	incf	LCDPutStr@ptr+1,f,c
  1456  001436                     l1162:
  1457  001436  C015  FFF6         	movff	LCDPutStr@ptr,tblptrl
  1458  00143A  C016  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  1459  00143E                     	if	0	;tblptru may be non-zero
  1460  00143E                     	endif
  1461  00143E                     	if	0	;tblptru may be non-zero
  1462  00143E                     	endif
  1463  00143E  0008               	tblrd		*
  1464  001440  50F5               	movf	tablat,w,c
  1465  001442  0900               	iorlw	0
  1466  001444  B4D8               	btfsc	status,2,c
  1467  001446  0012               	return	
  1468  001448  D7EC               	goto	l1158
  1469  00144A                     __end_of_LCDPutStr:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           intcon	equ	0xFF2
  1476                           postinc0	equ	0xFEE
  1477                           wreg	equ	0xFE8
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _LCDPutChar *****************
  1481 ;; Defined at:
  1482 ;;		line 160 in file "BBSPI_LCD.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  ch              1    wreg     unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  ch              1   19[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:        1 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    3
  1503 ;; This function calls:
  1504 ;;		_WritePort_BBSPI
  1505 ;; This function is called by:
  1506 ;;		_LCDPutStr
  1507 ;;		_Clock
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text15
  1512  001354                     __ptext15:
  1513                           	opt stack 0
  1514  001354                     _LCDPutChar:
  1515                           	opt stack 25
  1516                           
  1517                           ;incstack = 0
  1518                           ;LCDPutChar@ch stored from wreg
  1519  001354  6E14               	movwf	LCDPutChar@ch,c
  1520                           
  1521                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(10000/4000.0)));
  1522  001356  0E04               	movlw	4
  1523  001358                     u417:
  1524  001358  2EE8               	decfsz	wreg,f,c
  1525  00135A  D7FE               	goto	u417
  1526                           
  1527                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
  1528  00135C  0E80               	movlw	128
  1529  00135E  6E12               	movwf	WritePort_BBSPI@a,c
  1530  001360  0E12               	movlw	18
  1531  001362  EC42  F00A         	call	_WritePort_BBSPI
  1532                           
  1533                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(10000/4000.0)));
  1534  001366  D000               	nop2		;2 cycle nop
  1535                           
  1536                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
  1537  001368  C014  F012         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  1538  00136C  0E13               	movlw	19
  1539  00136E  EC42  F00A         	call	_WritePort_BBSPI
  1540                           
  1541                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(10000/4000.0)));
  1542  001372  D000               	nop2		;2 cycle nop
  1543                           
  1544                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
  1545  001374  0EC0               	movlw	192
  1546  001376  6E12               	movwf	WritePort_BBSPI@a,c
  1547  001378  0E12               	movlw	18
  1548  00137A  EC42  F00A         	call	_WritePort_BBSPI
  1549                           
  1550                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(10000/4000.0)));
  1551  00137E  D000               	nop2		;2 cycle nop
  1552                           
  1553                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
  1554  001380  0E00               	movlw	0
  1555  001382  6E12               	movwf	WritePort_BBSPI@a,c
  1556  001384  0E12               	movlw	18
  1557  001386  EC42  F00A         	call	_WritePort_BBSPI
  1558  00138A  0012               	return		;funcret
  1559  00138C                     __end_of_LCDPutChar:
  1560                           	opt stack 0
  1561                           tblptru	equ	0xFF8
  1562                           tblptrh	equ	0xFF7
  1563                           tblptrl	equ	0xFF6
  1564                           tablat	equ	0xFF5
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _LCDPutInst *****************
  1571 ;; Defined at:
  1572 ;;		line 179 in file "BBSPI_LCD.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  ch              1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  ch              1   19[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		_WritePort_BBSPI
  1595 ;; This function is called by:
  1596 ;;		_LCDInit
  1597 ;;		_ejemplo
  1598 ;;		_Clock
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text16
  1603  00138C                     __ptext16:
  1604                           	opt stack 0
  1605  00138C                     _LCDPutInst:
  1606                           	opt stack 26
  1607                           
  1608                           ;incstack = 0
  1609                           ;LCDPutInst@ch stored from wreg
  1610  00138C  6E14               	movwf	LCDPutInst@ch,c
  1611                           
  1612                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(10000/4000.0)));
  1613  00138E  0E04               	movlw	4
  1614  001390                     u427:
  1615  001390  2EE8               	decfsz	wreg,f,c
  1616  001392  D7FE               	goto	u427
  1617                           
  1618                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
  1619  001394  0E00               	movlw	0
  1620  001396  6E12               	movwf	WritePort_BBSPI@a,c
  1621  001398  0E12               	movlw	18
  1622  00139A  EC42  F00A         	call	_WritePort_BBSPI
  1623                           
  1624                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(10000/4000.0)));
  1625  00139E  D000               	nop2		;2 cycle nop
  1626                           
  1627                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
  1628  0013A0  C014  F012         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  1629  0013A4  0E13               	movlw	19
  1630  0013A6  EC42  F00A         	call	_WritePort_BBSPI
  1631                           
  1632                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(10000/4000.0)));
  1633  0013AA  D000               	nop2		;2 cycle nop
  1634                           
  1635                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
  1636  0013AC  0E40               	movlw	64
  1637  0013AE  6E12               	movwf	WritePort_BBSPI@a,c
  1638  0013B0  0E12               	movlw	18
  1639  0013B2  EC42  F00A         	call	_WritePort_BBSPI
  1640                           
  1641                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(10000/4000.0)));
  1642  0013B6  D000               	nop2		;2 cycle nop
  1643                           
  1644                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
  1645  0013B8  0E00               	movlw	0
  1646  0013BA  6E12               	movwf	WritePort_BBSPI@a,c
  1647  0013BC  0E12               	movlw	18
  1648  0013BE  EC42  F00A         	call	_WritePort_BBSPI
  1649  0013C2  0012               	return		;funcret
  1650  0013C4                     __end_of_LCDPutInst:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           intcon	equ	0xFF2
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _WritePort_BBSPI *****************
  1662 ;; Defined at:
  1663 ;;		line 144 in file "BBSPI_LCD.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  port_add        1    wreg     unsigned char 
  1666 ;;  a               1   17[COMRAM] unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  port_add        1   18[COMRAM] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		_SendByteBBSPI
  1687 ;; This function is called by:
  1688 ;;		_LCDInit
  1689 ;;		_LCDPutChar
  1690 ;;		_LCDPutInst
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text17
  1695  001484                     __ptext17:
  1696                           	opt stack 0
  1697  001484                     _WritePort_BBSPI:
  1698                           	opt stack 25
  1699                           
  1700                           ;incstack = 0
  1701                           ;WritePort_BBSPI@port_add stored from wreg
  1702  001484  6E13               	movwf	WritePort_BBSPI@port_add,c
  1703                           
  1704                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
  1705  001486  9489               	bcf	3977,2,c	;volatile
  1706                           
  1707                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
  1708  001488  0E40               	movlw	64
  1709  00148A  EC5B  F009         	call	_SendByteBBSPI
  1710                           
  1711                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
  1712  00148E  5013               	movf	WritePort_BBSPI@port_add,w,c
  1713  001490  EC5B  F009         	call	_SendByteBBSPI
  1714                           
  1715                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
  1716  001494  5012               	movf	WritePort_BBSPI@a,w,c
  1717  001496  EC5B  F009         	call	_SendByteBBSPI
  1718                           
  1719                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
  1720  00149A  8489               	bsf	3977,2,c	;volatile
  1721  00149C  0012               	return		;funcret
  1722  00149E                     __end_of_WritePort_BBSPI:
  1723                           	opt stack 0
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           intcon	equ	0xFF2
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _SendByteBBSPI *****************
  1734 ;; Defined at:
  1735 ;;		line 91 in file "BBSPI_LCD.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  output          1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  output          1   14[COMRAM] unsigned char 
  1740 ;;  input           1   16[COMRAM] unsigned char 
  1741 ;;  bitcount        1   15[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        3 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_Port_BBSPIInit
  1762 ;;		_WritePort_BBSPI
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text18
  1767  0012B6                     __ptext18:
  1768                           	opt stack 0
  1769  0012B6                     _SendByteBBSPI:
  1770                           	opt stack 25
  1771                           
  1772                           ;incstack = 0
  1773                           ;SendByteBBSPI@output stored from wreg
  1774  0012B6  6E0F               	movwf	SendByteBBSPI@output,c
  1775                           
  1776                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
  1777                           ;BBSPI_LCD.c: 94: unsigned char input = output;
  1778  0012B8  C00F  F011         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  1779                           
  1780                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
  1781  0012BC  0E00               	movlw	0
  1782  0012BE  6E10               	movwf	SendByteBBSPI@bitcount,c
  1783  0012C0                     l786:
  1784  0012C0  0E07               	movlw	7
  1785  0012C2  6410               	cpfsgt	SendByteBBSPI@bitcount,c
  1786  0012C4  D001               	goto	l33
  1787  0012C6  0012               	return	
  1788  0012C8                     l33:
  1789                           
  1790                           ;BBSPI_LCD.c: 97: {
  1791                           ;BBSPI_LCD.c: 99: if(output & 0x80)
  1792  0012C8  AE0F               	btfss	SendByteBBSPI@output,7,c
  1793  0012CA  D002               	goto	l35
  1794                           
  1795                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
  1796  0012CC  8A8B               	bsf	3979,5,c	;volatile
  1797  0012CE  D001               	goto	l36
  1798  0012D0                     l35:
  1799                           
  1800                           ;BBSPI_LCD.c: 101: else
  1801                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
  1802  0012D0  9A8B               	bcf	3979,5,c	;volatile
  1803  0012D2                     l36:
  1804                           
  1805                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
  1806  0012D2  A88B               	btfss	3979,4,c	;volatile
  1807  0012D4  D003               	goto	l794
  1808                           
  1809                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
  1810  0012D6  80D8               	bsf	status,0,c
  1811  0012D8  3611               	rlcf	SendByteBBSPI@input,f,c
  1812  0012DA  D003               	goto	l796
  1813  0012DC                     l794:
  1814                           
  1815                           ;BBSPI_LCD.c: 106: else
  1816                           ;BBSPI_LCD.c: 107: input = input << 1;
  1817  0012DC  5011               	movf	SendByteBBSPI@input,w,c
  1818  0012DE  2411               	addwf	SendByteBBSPI@input,w,c
  1819  0012E0  6E11               	movwf	SendByteBBSPI@input,c
  1820  0012E2                     l796:
  1821                           
  1822                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
  1823  0012E2  868B               	bsf	3979,3,c	;volatile
  1824                           
  1825                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
  1826  0012E4  F000               	nop	
  1827  0012E6  F000               	nop	
  1828  0012E8  F000               	nop	
  1829  0012EA  F000               	nop	
  1830  0012EC  F000               	nop	
  1831  0012EE  F000               	nop	
  1832                           
  1833                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
  1834  0012F0  F000               	nop	
  1835  0012F2  F000               	nop	
  1836  0012F4  F000               	nop	
  1837  0012F6  F000               	nop	
  1838  0012F8  F000               	nop	
  1839  0012FA  F000               	nop	
  1840                           
  1841                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
  1842  0012FC  968B               	bcf	3979,3,c	;volatile
  1843                           
  1844                           ;BBSPI_LCD.c: 112: output <<= 1;
  1845  0012FE  90D8               	bcf	status,0,c
  1846  001300  360F               	rlcf	SendByteBBSPI@output,f,c
  1847  001302  2A10               	incf	SendByteBBSPI@bitcount,f,c
  1848  001304  D7DD               	goto	l786
  1849  001306                     __end_of_SendByteBBSPI:
  1850                           	opt stack 0
  1851                           tblptru	equ	0xFF8
  1852                           tblptrh	equ	0xFF7
  1853                           tblptrl	equ	0xFF6
  1854                           tablat	equ	0xFF5
  1855                           intcon	equ	0xFF2
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _Timer0_interrupt *****************
  1861 ;; Defined at:
  1862 ;;		line 70 in file "main.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;Total ram usage:       14 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		Interrupt level 2
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	intcode
  1890  000008                     __pintcode:
  1891                           	opt stack 0
  1892  000008                     _Timer0_interrupt:
  1893                           	opt stack 25
  1894                           
  1895                           ;incstack = 0
  1896  000008  8221               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1897  00000A  CFFA F001          	movff	pclath,??_Timer0_interrupt
  1898  00000E  CFFB F002          	movff	pclatu,??_Timer0_interrupt+1
  1899  000012  ED7F  F008         	call	int_func,f	;refresh shadow registers
  1900                           pclatu	equ	0xFFB
  1901                           pclath	equ	0xFFA
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           intcon	equ	0xFF2
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           status	equ	0xFD8
  1910                           
  1911                           	psect	intcode_body
  1912  0010FE                     __pintcode_body:
  1913                           	opt stack 25
  1914  0010FE                     int_func:
  1915                           	opt stack 25
  1916  0010FE  0006               	pop		; remove dummy address from shadow register refresh
  1917  001100  CFE9 F003          	movff	fsr0l,??_Timer0_interrupt+2
  1918  001104  CFEA F004          	movff	fsr0h,??_Timer0_interrupt+3
  1919  001108  CFE1 F005          	movff	fsr1l,??_Timer0_interrupt+4
  1920  00110C  CFE2 F006          	movff	fsr1h,??_Timer0_interrupt+5
  1921  001110  CFD9 F007          	movff	fsr2l,??_Timer0_interrupt+6
  1922  001114  CFDA F008          	movff	fsr2h,??_Timer0_interrupt+7
  1923  001118  CFF3 F009          	movff	prodl,??_Timer0_interrupt+8
  1924  00111C  CFF4 F00A          	movff	prodh,??_Timer0_interrupt+9
  1925  001120  CFF6 F00B          	movff	tblptrl,??_Timer0_interrupt+10
  1926  001124  CFF7 F00C          	movff	tblptrh,??_Timer0_interrupt+11
  1927  001128  CFF8 F00D          	movff	tblptru,??_Timer0_interrupt+12
  1928  00112C  CFF5 F00E          	movff	tablat,??_Timer0_interrupt+13
  1929                           
  1930                           ;main.c: 72: INTCON&=~(0X80|0X40);
  1931  001130  0E3F               	movlw	63
  1932  001132  16F2               	andwf	intcon,f,c	;volatile
  1933                           
  1934                           ;main.c: 74: if(PIR1&0x02)
  1935  001134  A29E               	btfss	3998,1,c	;volatile
  1936  001136  D025               	goto	i2l1088
  1937                           
  1938                           ;main.c: 75: {
  1939                           ;main.c: 76: PIR1&=~0x02;
  1940  001138  929E               	bcf	3998,1,c	;volatile
  1941                           
  1942                           ;main.c: 77: if(Counter==100){Counter=0;CountIFG=1;mostrar=1;}else{Counter++;}
  1943  00113A  0E64               	movlw	100
  1944  00113C  181C               	xorwf	_Counter,w,c	;volatile
  1945  00113E  A4D8               	btfss	status,2,c
  1946  001140  D006               	goto	i2l1062
  1947  001142  0E00               	movlw	0
  1948  001144  6E1C               	movwf	_Counter,c	;volatile
  1949  001146  0E01               	movlw	1
  1950  001148  6E1B               	movwf	_CountIFG,c
  1951  00114A  8020               	bsf	_mostrar/(0+8),_mostrar& (0+7),c
  1952  00114C  D001               	goto	i2l1064
  1953  00114E                     i2l1062:
  1954  00114E  2A1C               	incf	_Counter,f,c	;volatile
  1955  001150                     i2l1064:
  1956                           
  1957                           ;main.c: 78: if(CountIFG){
  1958  001150  501B               	movf	_CountIFG,w,c
  1959  001152  B4D8               	btfsc	status,2,c
  1960  001154  D016               	goto	i2l1088
  1961                           
  1962                           ;main.c: 79: sec++;CountIFG=0;LATD=sec;
  1963  001156  2A1F               	incf	_sec,f,c
  1964  001158  0E00               	movlw	0
  1965  00115A  6E1B               	movwf	_CountIFG,c
  1966  00115C  C01F  FF8C         	movff	_sec,3980	;volatile
  1967                           
  1968                           ;main.c: 80: if(sec>59){sec=0;min++;}
  1969  001160  0E3B               	movlw	59
  1970  001162  641F               	cpfsgt	_sec,c
  1971  001164  D003               	goto	i2l1078
  1972  001166  0E00               	movlw	0
  1973  001168  6E1F               	movwf	_sec,c
  1974  00116A  2A1E               	incf	_min,f,c
  1975  00116C                     i2l1078:
  1976                           
  1977                           ;main.c: 81: if(min>59){min=0;hour++;}
  1978  00116C  0E3B               	movlw	59
  1979  00116E  641E               	cpfsgt	_min,c
  1980  001170  D003               	goto	i2l1084
  1981  001172  0E00               	movlw	0
  1982  001174  6E1E               	movwf	_min,c
  1983  001176  2A1D               	incf	_hour,f,c
  1984  001178                     i2l1084:
  1985                           
  1986                           ;main.c: 82: if(hour>24){hour=0;}
  1987  001178  0E18               	movlw	24
  1988  00117A  641D               	cpfsgt	_hour,c
  1989  00117C  D002               	goto	i2l1088
  1990  00117E  0E00               	movlw	0
  1991  001180  6E1D               	movwf	_hour,c
  1992  001182                     i2l1088:
  1993                           
  1994                           ;main.c: 83: }
  1995                           ;main.c: 84: }
  1996                           ;main.c: 86: INTCON|=(0X80|0X40);
  1997  001182  0EC0               	movlw	192
  1998  001184  12F2               	iorwf	intcon,f,c	;volatile
  1999  001186  C00E  FFF5         	movff	??_Timer0_interrupt+13,tablat
  2000  00118A  C00D  FFF8         	movff	??_Timer0_interrupt+12,tblptru
  2001  00118E  C00C  FFF7         	movff	??_Timer0_interrupt+11,tblptrh
  2002  001192  C00B  FFF6         	movff	??_Timer0_interrupt+10,tblptrl
  2003  001196  C00A  FFF4         	movff	??_Timer0_interrupt+9,prodh
  2004  00119A  C009  FFF3         	movff	??_Timer0_interrupt+8,prodl
  2005  00119E  C008  FFDA         	movff	??_Timer0_interrupt+7,fsr2h
  2006  0011A2  C007  FFD9         	movff	??_Timer0_interrupt+6,fsr2l
  2007  0011A6  C006  FFE2         	movff	??_Timer0_interrupt+5,fsr1h
  2008  0011AA  C005  FFE1         	movff	??_Timer0_interrupt+4,fsr1l
  2009  0011AE  C004  FFEA         	movff	??_Timer0_interrupt+3,fsr0h
  2010  0011B2  C003  FFE9         	movff	??_Timer0_interrupt+2,fsr0l
  2011  0011B6  C002  FFFB         	movff	??_Timer0_interrupt+1,pclatu
  2012  0011BA  C001  FFFA         	movff	??_Timer0_interrupt,pclath
  2013  0011BE  9221               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2014  0011C0  0011               	retfie		f
  2015  0011C2                     __end_of_Timer0_interrupt:
  2016                           	opt stack 0
  2017                           pclatu	equ	0xFFB
  2018                           pclath	equ	0xFFA
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           postinc0	equ	0xFEE
  2027                           fsr0h	equ	0xFEA
  2028                           fsr0l	equ	0xFE9
  2029                           wreg	equ	0xFE8
  2030                           fsr1h	equ	0xFE2
  2031                           fsr1l	equ	0xFE1
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           pclatu	equ	0xFFB
  2036                           pclath	equ	0xFFA
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodh	equ	0xFF4
  2042                           prodl	equ	0xFF3
  2043                           intcon	equ	0xFF2
  2044                           postinc0	equ	0xFEE
  2045                           fsr0h	equ	0xFEA
  2046                           fsr0l	equ	0xFE9
  2047                           wreg	equ	0xFE8
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054                           	psect	rparam
  2055  0000                     pclatu	equ	0xFFB
  2056                           pclath	equ	0xFFA
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           postinc0	equ	0xFEE
  2065                           fsr0h	equ	0xFEA
  2066                           fsr0l	equ	0xFE9
  2067                           wreg	equ	0xFE8
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074                           	psect	temp
  2075  000021                     btemp:
  2076                           	opt stack 0
  2077  000021                     	ds	1
  2078  0000                     int$flags	set	btemp
  2079                           pclatu	equ	0xFFB
  2080                           pclath	equ	0xFFA
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           prodh	equ	0xFF4
  2086                           prodl	equ	0xFF3
  2087                           intcon	equ	0xFF2
  2088                           postinc0	equ	0xFEE
  2089                           fsr0h	equ	0xFEA
  2090                           fsr0l	equ	0xFE9
  2091                           wreg	equ	0xFE8
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8


Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _ejemplo->_LCDPutStr
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _Clock->_LCDPutStr
    _Clock->___awdiv
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _Timer0_interrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Timer0_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Timer0_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Timer0_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Timer0_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Timer0_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Timer0_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Timer0_interrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Timer0_interrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Timer0_interrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Timer0_interrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7173
                              _Clock
                           _InitConf
               _InitTimer2Interrupts
                            _ejemplo
 ---------------------------------------------------------------------------------
 (1) _ejemplo                                              0     0      0    3312
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              0     0      0    1547
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                             17 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer2Interrupts                                 0     0      0       0
                   _EnableInterrupts
                             _Timer2
 ---------------------------------------------------------------------------------
 (2) _Timer2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EnableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConf                                             0     0      0       0
                         _ClockSetup
                          _DigitalIO
 ---------------------------------------------------------------------------------
 (2) _DigitalIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock                                                0     0      0    3861
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     680
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     684
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2    1033
                                             20 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0     732
                                             19 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           1     1      0     732
                                             19 COMRAM     1     1      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     710
                                             17 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Timer0_interrupt                                    14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock
     _LCDPutChar
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     ___awdiv
     ___awmod
   _InitConf
     _ClockSetup
     _DigitalIO
   _InitTimer2Interrupts
     _EnableInterrupts
     _Timer2
   _ejemplo
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI

 _Timer0_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     16      20       1       34.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      32        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Jan 16 13:15:07 2017

                           l33 12C8                             l35 12D0                    ?_LCDPutChar 0001  
                           l36 12D2                   ___awdiv@sign 0014                    ?_LCDPutInst 0001  
                  __CFG_BORV$3 000000       __end_of_EnableInterrupts 14FA                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_OSC$HS 000000                   __CFG_CP4$OFF 000000                   __CFG_CP5$OFF 000000  
        SendByteBBSPI@bitcount 0010                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l794 12DC                            l786 12C0                            l796 12E2  
                 __CFG_CPB$OFF 000000                            _PR2 000FCB                            u407 132E  
                          u417 1358                   __CFG_CPD$OFF 000000                            u427 1390  
                          u397 1310                            _min 001E                            _sec 001F  
                 ___awmod@sign 0014                            wreg 000FE8                   __CFG_MODE$MC 000000  
              __end_of_LCDInit 1354                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l1200 122E                           l1204 123C                           l1220 1266  
                         l1240 12AC                           l1232 1294                           l1224 1274  
                         l1216 125A                           l1162 1436                           l1226 127C  
                         l1172 11D6                           l1228 1280                           l1236 129E  
                         l1158 1422                           l1184 11FC                           l1186 1204  
                         l1178 11E6                           l1282 14BE                           l1196 1224  
                         l1188 1208                           STR_1 1011                           STR_2 1001  
                         STR_3 1026                           STR_4 101D                           _LATA 000F89  
                         _LATB 000F8A                           _LATD 000F8C                           _PIE1 000F9D  
                         _PIR1 000F9E                           _TMR2 000FCC                           _main 14B2  
                         _hour 001D                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0021                           pclat 000FFA  
             ?_WritePort_BBSPI 0012                           prodh 000FF4                           prodl 000FF3  
         _InitTimer2Interrupts 14D6                           start 0016             __size_of_LCDPutStr 002A  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
                   _ClockSetup 14EA                  __CFG_WAIT$OFF 000000       __end_of_Timer0_interrupt 11C2  
                        ?_main 0001                __end_of___awdiv 1246                __end_of___awmod 12B6  
              ___awdiv@divisor 0011                          _T2CON 000FCA                ___awdiv@counter 0013  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTD 000F83  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                          _Clock 1030                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
                __CFG_WRT4$OFF 000000                  __CFG_WRT5$OFF 000000                  __CFG_WRT6$OFF 000000  
                __CFG_WRT7$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000                __end_of_ejemplo 1420  
               __CFG_EBTR3$OFF 000000                 __CFG_EBTR4$OFF 000000                 __CFG_EBTR5$OFF 000000  
               __CFG_EBTR6$OFF 000000                 __CFG_EBTR7$OFF 000000                  __CFG_WRTB$OFF 000000  
      __size_of_Port_BBSPIInit 001A                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0100                 __CFG_BOREN$OFF 000000  
                        tablat 000FF5            __size_of_LCDPutChar 0038            __size_of_LCDPutInst 0038  
                        status 000FD8          ?_InitTimer2Interrupts 0001                __initialization 144A  
                 __end_of_main 14C4               __end_of_InitConf 14EA                         ??_main 0017  
           __size_of_DigitalIO 0032                  __activetblptr 000001                      ??_LCDInit 0015  
                 LCDPutChar@ch 0014              __end_of_LCDPutStr 144A                         ?_Clock 0001  
                       _ADCON1 000FC1             __size_of_InitBBSPI 0012               ___awdiv@dividend 000F  
                 LCDPutInst@ch 0014                         i2l1062 114E                __CFG_BBSIZ$BB2K 000000  
                       i2l1064 1150                         i2l1084 1178                         i2l1078 116C  
                       i2l1088 1182                         _INTCON 000FF2                         _OSCCON 000FD3  
                       _PSPCON 000FB0                   LCDPutStr@ptr 0015                 __CFG_XINST$OFF 000000  
                       _Timer2 149E                      ??___awdiv 0013                 __CFG_STVREN$ON 000000  
                    ??___awmod 0013                    ?_ClockSetup 0001                         clear_0 1452  
             ___awdiv@quotient 0015                ___awmod@divisor 0011                         _tiempo 0019  
              ___awmod@counter 0013                      ??_ejemplo 0017         Port_BBSPIInit@port_dir 0012  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8         ??_InitTimer2Interrupts 000F                     __accesstop 0060  
      __end_of__initialization 1458              __end_of_DigitalIO 13F6                  ___rparam_used 000001  
       __size_of_SendByteBBSPI 0050                  __end_of_Clock 10FE                 __pcstackCOMRAM 0001  
            __end_of_InitBBSPI 14D6                   ??_LCDPutChar 0014                   ??_LCDPutInst 0014  
            ?_EnableInterrupts 0001             ??_EnableInterrupts 000F                        ??_Clock 0017  
               _Port_BBSPIInit 146A                      ?_InitConf 0001            __size_of_ClockSetup 000A  
           __end_of_LCDPutChar 138C             __end_of_LCDPutInst 13C4                        ?_Timer2 0001  
            ?_Timer0_interrupt 0001         __end_of_Port_BBSPIInit 1484                        _LCDInit 1306  
           ??_Timer0_interrupt 0001                  _SendByteBBSPI 12B6                        _OSCTUNE 000F9B  
                   ??_InitConf 000F               WritePort_BBSPI@a 0012                        _Counter 001C  
                      __Hparam 0000                        __Lparam 0000                        _PwmDuty 0017  
              __size_of_Timer2 0014                        ___awdiv 11C2                        ___awmod 1246  
     __size_of_WritePort_BBSPI 001A                   __psmallconst 1000                        __pcinit 144A  
                      __ramtop 1000                        __ptext0 14B2                        __ptext1 13F6  
                      __ptext2 1306                        __ptext3 146A                        __ptext4 14C4  
                      __ptext5 14D6                        __ptext6 149E                        __ptext7 14F4  
                      __ptext8 14E0                        __ptext9 13C4                        _ejemplo 13F6  
               ?_SendByteBBSPI 0001                ?_Port_BBSPIInit 0001               ___awmod@dividend 000F  
                      _mostrar 0100                      _LCDPutStr 1420                 __pintcode_body 10FE  
         end_of_initialization 1458                        int_func 10FE                        postinc0 000FEE  
                 ??_ClockSetup 000F                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISFbits 000F97                     ?_LCDPutStr 0015            SendByteBBSPI@output 000F  
           __end_of_ClockSetup 14F4                      _DigitalIO 13C4                 __end_of_Timer2 14B2  
              ??_SendByteBBSPI 000F                      _InitBBSPI 14C4              ??_WritePort_BBSPI 0013  
          start_initialization 144A      __size_of_EnableInterrupts 0006              __size_of_InitConf 000A  
__size_of_InitTimer2Interrupts 000A                       ??_Timer2 000F                     ?_DigitalIO 0001  
             __CFG_LPT1OSC$OFF 000000                     ?_InitBBSPI 0001                       ?_LCDInit 0001  
                  __pbssCOMRAM 0017                    ??_LCDPutStr 0017      __size_of_Timer0_interrupt 11BA  
            __CFG_CCP2MX$PORTC 000000                      __pintcode 0008                       ?___awdiv 000F  
                     ?___awmod 000F               ??_Port_BBSPIInit 0012                       ?_ejemplo 0001  
                  __smallconst 1000                 __size_of_Clock 00CE                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATFbits 000F8E          __CFG_DATABW$DATA16BIT 000000  
                  ??_DigitalIO 000F               __CFG_WDTPS$32768 000000              __CFG_ECCPMX$PORTE 000000  
                  ??_InitBBSPI 000F             SendByteBBSPI@input 0011               __size_of_LCDInit 004E  
                     _CountIFG 001B               _EnableInterrupts 14F4                       _InitConf 14E0  
                     __Hrparam 0000                       __Lrparam 0000                   __Lsmallconst 1000  
              _WritePort_BBSPI 1484               __size_of___awdiv 0084               __size_of___awmod 0070  
             __size_of_ejemplo 002A                       __ptext10 14EA                       __ptext11 1030  
                     __ptext12 1246                       __ptext13 11C2                       __ptext14 1420  
                     __ptext15 1354                       __ptext16 138C                       __ptext17 1484  
                     __ptext18 12B6               _Timer0_interrupt 0008                  __size_of_main 0012  
                     int$flags 0021                     _LCDPutChar 1354                     _LCDPutInst 138C  
 __end_of_InitTimer2Interrupts 14E0          __end_of_SendByteBBSPI 1306          __CFG_ADDRBW$ADDR20BIT 000000  
                   _INTCONbits 000FF2                       intlevel2 0000        __end_of_WritePort_BBSPI 149E  
      WritePort_BBSPI@port_add 0013  
